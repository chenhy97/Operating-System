
user1.elf:     file format elf32-i386


Disassembly of section .text:

00000100 <user1>:
 100:	8c c8                	mov    %cs,%eax
 102:	8e d8                	mov    %eax,%ds
 104:	b8 00 b8 8e c0       	mov    $0xc08eb800,%eax

00000109 <start>:
 109:	e8 54 01 a1 bc       	call   bca10262 <delay+0xbca03f12>
 10e:	20 a3 b6 20 a1 be    	and    %ah,-0x415edf4a(%ebx)
 114:	20 a3 b8 20 a0 ba    	and    %ah,-0x455fdf48(%ebx)
 11a:	20 a2 b4 20 a0 bb    	and    %ah,-0x445fdf4c(%edx)
 120:	20 a2 b5 20 a0 c0    	and    %ah,-0x3f5fdf4b(%edx)
 126:	20 a2 0f 00 a0 c1    	and    %ah,-0x3e5ffff1(%edx)
 12c:	20 a2 d6 20 e8 75    	and    %ah,0x75e820d6(%edx)
 132:	00 fe                	add    %bh,%dh
 134:	06                   	push   %es
 135:	0f 00 a1 b6 20 a3 bc 	verr   -0x435cdf4a(%ecx)
 13c:	20 a1 b8 20 a3 be    	and    %ah,-0x415cdf48(%ecx)
 142:	20 a0 b4 20 a2 ba    	and    %ah,-0x455ddf4c(%eax)
 148:	20 a0 b5 20 a2 bb    	and    %ah,-0x445ddf4b(%eax)
 14e:	20 a0 0f 00 a2 c0    	and    %ah,-0x3f5dfff1(%eax)
 154:	20 a1 c4 20 a3 b6    	and    %ah,-0x495cdf3c(%ecx)
 15a:	20 a1 c6 20 a3 b8    	and    %ah,-0x475cdf3a(%ecx)
 160:	20 a0 c2 20 a2 b4    	and    %ah,-0x4b5ddf3e(%eax)
 166:	20 a0 c3 20 a2 b5    	and    %ah,-0x4a5ddf3d(%eax)
 16c:	20 a0 c8 20 a2 0f    	and    %ah,0xfa220c8(%eax)
 172:	00 a0 c9 20 a2 d6    	add    %ah,-0x295ddf37(%eax)
 178:	20 e8                	and    %ch,%al
 17a:	2c 00                	sub    $0x0,%al
 17c:	fe 06                	incb   (%esi)
 17e:	0f 00 a1 b6 20 a3 c4 	verr   -0x3b5cdf4a(%ecx)
 185:	20 a1 b8 20 a3 c6    	and    %ah,-0x395cdf48(%ecx)
 18b:	20 a0 b4 20 a2 c2    	and    %ah,-0x3d5ddf4c(%eax)
 191:	20 a0 b5 20 a2 c3    	and    %ah,-0x3c5ddf4b(%eax)
 197:	20 a0 0f 00 a2 c8    	and    %ah,-0x375dfff1(%eax)
 19d:	20 e8                	and    %ch,%al
 19f:	cc                   	int3   
 1a0:	00 cd                	add    %cl,%ch
 1a2:	20 cd                	and    %cl,%ch
 1a4:	33 e9                	xor    %ecx,%ebp
 1a6:	61                   	popa   
 1a7:	ff e8                	ljmp   *<internal disassembler error>

000001a8 <move>:
 1a8:	e8 7e 00 e8 ab       	call   abe8022b <delay+0xabe73edb>
 1ad:	00 e8                	add    %ch,%al
 1af:	07                   	pop    %es
 1b0:	00 e8                	add    %ch,%al
 1b2:	75 00                	jne    1b4 <move+0xc>
 1b4:	e8 88 00 c3 a0       	call   a0c30241 <delay+0xa0c23ef1>

000001b8 <update>:
 1b8:	a0 b4 20 e8 07       	mov    0x7e820b4,%al
 1bd:	00 a0 b5 20 e8 33    	add    %ah,0x33e820b5(%eax)
 1c3:	00 c3                	add    %al,%bl

000001c5 <handlex>:
 1c5:	3c 01                	cmp    $0x1,%al
 1c7:	75 17                	jne    1e0 <dec1>
 1c9:	ff 06                	incl   (%esi)
 1cb:	b6 20                	mov    $0x20,%dh
 1cd:	83 3e b6             	cmpl   $0xffffffb6,(%esi)
 1d0:	20 0f                	and    %cl,(%edi)
 1d2:	75 54                	jne    228 <notchange>
 1d4:	c7 06 b6 20 0d 00    	movl   $0xd20b6,(%esi)
 1da:	c6 06 b4             	movb   $0xb4,(%esi)
 1dd:	20 00                	and    %al,(%eax)
 1df:	c3                   	ret    

000001e0 <dec1>:
 1e0:	ff 0e                	decl   (%esi)
 1e2:	b6 20                	mov    $0x20,%dh
 1e4:	83 3e b6             	cmpl   $0xffffffb6,(%esi)
 1e7:	20 ff                	and    %bh,%bh
 1e9:	75 3d                	jne    228 <notchange>
 1eb:	c7 06 b6 20 01 00    	movl   $0x120b6,(%esi)
 1f1:	c6 06 b4             	movb   $0xb4,(%esi)
 1f4:	20 01                	and    %al,(%ecx)
 1f6:	c3                   	ret    

000001f7 <handley>:
 1f7:	3c 01                	cmp    $0x1,%al
 1f9:	75 17                	jne    212 <dec2>
 1fb:	ff 06                	incl   (%esi)
 1fd:	b8 20 83 3e b8       	mov    $0xb83e8320,%eax
 202:	20 28                	and    %ch,(%eax)
 204:	75 22                	jne    228 <notchange>
 206:	c7 06 b8 20 26 00    	movl   $0x2620b8,(%esi)
 20c:	c6 06 b5             	movb   $0xb5,(%esi)
 20f:	20 00                	and    %al,(%eax)
 211:	c3                   	ret    

00000212 <dec2>:
 212:	ff 0e                	decl   (%esi)
 214:	b8 20 83 3e b8       	mov    $0xb83e8320,%eax
 219:	20 ff                	and    %bh,%bh
 21b:	75 0b                	jne    228 <notchange>
 21d:	c7 06 b8 20 01 00    	movl   $0x120b8,(%esi)
 223:	c6 06 b5             	movb   $0xb5,(%esi)
 226:	20 01                	and    %al,(%ecx)

00000228 <notchange>:
 228:	c3                   	ret    

00000229 <Setpoint>:
 229:	31 c0                	xor    %eax,%eax
 22b:	a1 b6 20 bb 50       	mov    0x50bb20b6,%eax
 230:	00 f7                	add    %dh,%bh
 232:	e3 03                	jecxz  237 <Setpoint+0xe>
 234:	06                   	push   %es
 235:	b8 20 bb 02 00       	mov    $0x2bb20,%eax
 23a:	f7 e3                	mul    %ebx
 23c:	89 c3                	mov    %eax,%ebx
 23e:	c3                   	ret    

0000023f <show>:
 23f:	8a 26                	mov    (%esi),%ah
 241:	0f 00 a0 d6 20 26 89 	verr   -0x76d9df2a(%eax)
 248:	07                   	pop    %es
 249:	8a 1e                	mov    (%esi),%bl
 24b:	0f 00 80 fb 10 75 06 	sldt   0x67510fb(%eax)
 252:	b3 01                	mov    $0x1,%bl
 254:	88 1e                	mov    %bl,(%esi)
 256:	0f 00 c3             	sldt   %ebx

00000258 <c>:
 258:	c3                   	ret    

00000259 <kill>:
 259:	b8 00 00 26 89       	mov    $0x89260000,%eax
 25e:	07                   	pop    %es
 25f:	c3                   	ret    

00000260 <loop1>:
 260:	8b 0e                	mov    (%esi),%ecx
 262:	ca 20 a1             	lret   $0xa120

00000264 <LOOP1>:
 264:	a1 cc 20 48 7f       	mov    0x7f4820cc,%eax

00000267 <LOOP2>:
 267:	48                   	dec    %eax
 268:	7f fd                	jg     267 <LOOP2>
 26a:	e2 f8                	loop   264 <LOOP1>
 26c:	c3                   	ret    

0000026d <showname>:
 26d:	06                   	push   %es
 26e:	53                   	push   %ebx
 26f:	66 55                	push   %bp
 271:	8c d8                	mov    %ds,%eax
 273:	8e c0                	mov    %eax,%es
 275:	b8 ce 20 89 c5       	mov    $0xc58920ce,%eax
 27a:	b8 01 13 b6 0c       	mov    $0xcb61301,%eax
 27f:	b2 28                	mov    $0x28,%dl
 281:	b9 08 00 b7 00       	mov    $0xb70008,%ecx
 286:	8a 1e                	mov    (%esi),%bl
 288:	0f 00 cd             	str    %ebp
 28b:	10 66 5d             	adc    %ah,0x5d(%esi)
 28e:	5b                   	pop    %ebx
 28f:	07                   	pop    %es
 290:	c3                   	ret    
 291:	66 90                	xchg   %ax,%ax
 293:	66 90                	xchg   %ax,%ax
 295:	66 90                	xchg   %ax,%ax
 297:	66 90                	xchg   %ax,%ax
 299:	66 90                	xchg   %ax,%ax
 29b:	66 90                	xchg   %ax,%ax
 29d:	66 90                	xchg   %ax,%ax
 29f:	90                   	nop

000002a0 <Pg_Segment>:
	...

000002a2 <Pg_Offset>:
 2a2:	00 c0                	add    %al,%al

000002a4 <info_Segment>:
	...

000002a6 <info_Offset>:
 2a6:	00 b1 08 00 00 00    	add    %dh,0x8(%ecx)

000002a8 <count>:
 2a8:	08 00                	or     %al,(%eax)

000002a9 <x>:
	...

000002ab <y>:
	...

000002ad <xdul>:
 2ad:	01 00                	add    %eax,(%eax)

000002af <ydul>:
 2af:	01 00                	add    %eax,(%eax)

000002b1 <alpha>:
 2b1:	2d 00 00 00 00       	sub    $0x0,%eax

000002b2 <int_09_saved>:
 2b2:	00 00                	add    %al,(%eax)
	...

000002b6 <program09_saved>:
 2b6:	70 00                	jo     2b8 <program09_saved+0x2>
	...

000002ba <ds_saved>:
 2ba:	7c 00                	jl     2bc <ds_saved+0x2>
	...

000002be <return_save>:
 2be:	88 00                	mov    %al,(%eax)
	...

000002c2 <esi_save>:
 2c2:	96                   	xchg   %eax,%esi
 2c3:	00 00                	add    %al,(%eax)
	...

000002c6 <kernelesp_saved>:
 2c6:	b4 00                	mov    $0x0,%ah
	...

000002ca <color>:
 2ca:	01 b8 03 00 cd 10    	add    %edi,0x10cd0003(%eax)

000002cb <_clearscreen>:
 2cb:	b8 03 00 cd 10       	mov    $0x10cd0003,%eax
 2d0:	66 5a                	pop    %dx
 2d2:	ff e2                	jmp    *%edx

000002d4 <_printchar>:
 2d4:	c8 00 00 00          	enter  $0x0,$0x0
 2d8:	b8 00 b8 8e e8       	mov    $0xe88eb800,%eax
 2dd:	57                   	push   %edi
 2de:	66 8b 4e 06          	mov    0x6(%esi),%cx
 2e2:	66 8b 7e 0a          	mov    0xa(%esi),%di
 2e6:	66 8b 56 0e          	mov    0xe(%esi),%dx
 2ea:	88 d5                	mov    %dl,%ch
 2ec:	65 89 0d 5f c9 b8 01 	mov    %ecx,%gs:0x1b8c95f
 2f3:	00 66 5a             	add    %ah,0x5a(%esi)
 2f6:	ff e2                	jmp    *%edx

000002f8 <_readinput>:
 2f8:	c8 04 00 00          	enter  $0x4,$0x0
 2fc:	b4 00                	mov    $0x0,%ah
 2fe:	cd 16                	int    $0x16
 300:	b4 00                	mov    $0x0,%ah
 302:	66 67 89 04          	mov    %ax,(%si)
 306:	24 66                	and    $0x66,%al
 308:	67 8b 04             	mov    (%si),%eax
 30b:	24 c9                	and    $0xc9,%al
 30d:	66 5a                	pop    %dx
 30f:	ff e2                	jmp    *%edx

00000311 <_showchar>:
 311:	c8 00 00 00          	enter  $0x0,$0x0
 315:	8b 46 06             	mov    0x6(%esi),%eax
 318:	b4 0e                	mov    $0xe,%ah
 31a:	b3 00                	mov    $0x0,%bl
 31c:	cd 10                	int    $0x10
 31e:	c9                   	leave  
 31f:	66 5a                	pop    %dx
 321:	ff e2                	jmp    *%edx

00000323 <_setPoint>:
 323:	c8 00 00 00          	enter  $0x0,$0x0
 327:	53                   	push   %ebx
 328:	b7 00                	mov    $0x0,%bh
 32a:	8a 77 06             	mov    0x6(%edi),%dh
 32d:	8a 57 0a             	mov    0xa(%edi),%dl
 330:	b4 02                	mov    $0x2,%ah
 332:	cd 10                	int    $0x10
 334:	5b                   	pop    %ebx
 335:	c9                   	leave  
 336:	66 5a                	pop    %dx
 338:	ff e2                	jmp    *%edx

0000033a <_loadP>:
 33a:	c8 00 00 00          	enter  $0x0,$0x0
 33e:	60                   	pusha  
 33f:	06                   	push   %es
 340:	1e                   	push   %ds
 341:	8c c8                	mov    %cs,%eax
 343:	8e d8                	mov    %eax,%ds
 345:	8b 46 0e             	mov    0xe(%esi),%eax
 348:	8e c0                	mov    %eax,%es
 34a:	b2 00                	mov    $0x0,%dl
 34c:	8b 46 0a             	mov    0xa(%esi),%eax
 34f:	b3 12                	mov    $0x12,%bl
 351:	f6 f3                	div    %bl
 353:	88 e1                	mov    %ah,%cl
 355:	30 e4                	xor    %ah,%ah
 357:	b3 02                	mov    $0x2,%bl
 359:	f6 f3                	div    %bl
 35b:	88 e6                	mov    %ah,%dh
 35d:	88 c5                	mov    %al,%ch
 35f:	8a 46 06             	mov    0x6(%esi),%al
 362:	bb 00 01 b4 02       	mov    $0x2b40100,%ebx
 367:	cd 13                	int    $0x13
 369:	1f                   	pop    %ds
 36a:	07                   	pop    %es
 36b:	61                   	popa   
 36c:	c9                   	leave  
 36d:	66 5a                	pop    %dx
 36f:	ff e2                	jmp    *%edx

00000371 <_RunProgress>:
 371:	c8 00 00 00          	enter  $0x0,$0x0
 375:	8c c8                	mov    %cs,%eax
 377:	8e d8                	mov    %eax,%ds
 379:	8e c0                	mov    %eax,%es
 37b:	8b 5e 06             	mov    0x6(%esi),%ebx
 37e:	c7 06 b6 02 00 01    	movl   $0x10002b6,(%esi)
 384:	89 1e                	mov    %ebx,(%esi)
 386:	b8 02 26 ff 1e       	mov    $0x1eff2602,%eax
 38b:	b6 02                	mov    $0x2,%dh

0000038d <S>:
 38d:	8c c8                	mov    %cs,%eax
 38f:	8e d8                	mov    %eax,%ds
 391:	8e c0                	mov    %eax,%es
 393:	8e d0                	mov    %eax,%ss
 395:	b4 00                	mov    $0x0,%ah
 397:	cd 16                	int    $0x16
 399:	c9                   	leave  
 39a:	66 5a                	pop    %dx
 39c:	ff e2                	jmp    *%edx

0000039e <_SetINT20h>:
 39e:	1e                   	push   %ds
 39f:	06                   	push   %es
 3a0:	8c c8                	mov    %cs,%eax
 3a2:	8e d8                	mov    %eax,%ds
 3a4:	8e c0                	mov    %eax,%es
 3a6:	8e d0                	mov    %eax,%ss
 3a8:	53                   	push   %ebx
 3a9:	51                   	push   %ecx
 3aa:	52                   	push   %edx
 3ab:	b4 01                	mov    $0x1,%ah
 3ad:	cd 16                	int    $0x16
 3af:	5a                   	pop    %edx
 3b0:	59                   	pop    %ecx
 3b1:	5b                   	pop    %ebx
 3b2:	07                   	pop    %es
 3b3:	1f                   	pop    %ds
 3b4:	75 d7                	jne    38d <S>
 3b6:	cf                   	iret   

000003b7 <_SetINT08h>:
 3b7:	60                   	pusha  
 3b8:	0f a8                	push   %gs
 3ba:	1e                   	push   %ds
 3bb:	06                   	push   %es
 3bc:	16                   	push   %ss
 3bd:	8c c8                	mov    %cs,%eax
 3bf:	8e c0                	mov    %eax,%es
 3c1:	8e d8                	mov    %eax,%ds
 3c3:	8e d0                	mov    %eax,%ss
 3c5:	fe 0e                	decb   (%esi)
 3c7:	a8 02                	test   $0x2,%al
 3c9:	75 4f                	jne    41a <end>

000003cb <notc>:
 3cb:	80 3e b1             	cmpb   $0xb1,(%esi)
 3ce:	02 2d 75 07 c6 06    	add    0x6c60775,%ch
 3d4:	b1 02                	mov    $0x2,%cl
 3d6:	5c                   	pop    %esp
 3d7:	eb 2a                	jmp    403 <show>

000003d9 <changleft>:
 3d9:	80 3e b1             	cmpb   $0xb1,(%esi)
 3dc:	02 5c 75 07          	add    0x7(%ebp,%esi,2),%bl
 3e0:	c6 06 b1             	movb   $0xb1,(%esi)
 3e3:	02 7c eb 1c          	add    0x1c(%ebx,%ebp,8),%bh

000003e7 <changright>:
 3e7:	80 3e b1             	cmpb   $0xb1,(%esi)
 3ea:	02 7c 75 07          	add    0x7(%ebp,%esi,2),%bh
 3ee:	c6 06 b1             	movb   $0xb1,(%esi)
 3f1:	02 2f                	add    (%edi),%ch
 3f3:	eb 0e                	jmp    403 <show>

000003f5 <changheng>:
 3f5:	80 3e b1             	cmpb   $0xb1,(%esi)
 3f8:	02 2f                	add    (%edi),%ch
 3fa:	75 cf                	jne    3cb <notc>
 3fc:	c6 06 b1             	movb   $0xb1,(%esi)
 3ff:	02 2d eb 00 b9 00    	add    0xb900eb,%ch

00000403 <show>:
 403:	b9 00 b8 8e e9       	mov    $0xe98eb800,%ecx
 408:	b4 09                	mov    $0x9,%ah
 40a:	8a 26                	mov    (%esi),%ah
 40c:	ca 02 a0             	lret   $0xa002
 40f:	b1 02                	mov    $0x2,%cl
 411:	65 a3 8e 00 c6 06    	mov    %eax,%gs:0x6c6008e
 417:	a8 02                	test   $0x2,%al
 419:	08 b0 20 e6 20 e6    	or     %dh,-0x19df19e0(%eax)

0000041a <end>:
 41a:	b0 20                	mov    $0x20,%al
 41c:	e6 20                	out    %al,$0x20
 41e:	e6 a0                	out    %al,$0xa0
 420:	17                   	pop    %ss
 421:	07                   	pop    %es
 422:	1f                   	pop    %ds
 423:	0f a9                	pop    %gs
 425:	61                   	popa   
 426:	fb                   	sti    
 427:	cf                   	iret   

00000428 <_SetINT09h>:
 428:	1e                   	push   %ds
 429:	06                   	push   %es
 42a:	16                   	push   %ss
 42b:	60                   	pusha  
 42c:	8c c8                	mov    %cs,%eax
 42e:	8e d8                	mov    %eax,%ds
 430:	8e c0                	mov    %eax,%es
 432:	8e d0                	mov    %eax,%ss
 434:	b9 00 b8 8e e9       	mov    $0xe98eb800,%ecx
 439:	8a 26                	mov    (%esi),%ah
 43b:	ca 02 b0             	lret   $0xb002
 43e:	4f                   	dec    %edi
 43f:	65 a3 78 00 b0 55    	mov    %eax,%gs:0x55b00078
 445:	65 a3 7a 00 b0 43    	mov    %eax,%gs:0x43b0007a
 44b:	65 a3 7c 00 b0 48    	mov    %eax,%gs:0x48b0007c
 451:	65 a3 7e 00 b0 53    	mov    %eax,%gs:0x53b0007e
 457:	65 a3 80 00 b0 21    	mov    %eax,%gs:0x21b00080
 45d:	65 a3 82 00 b0 4f    	mov    %eax,%gs:0x4fb00082
 463:	65 a3 84 00 b0 55    	mov    %eax,%gs:0x55b00084
 469:	65 a3 86 00 b0 43    	mov    %eax,%gs:0x43b00086
 46f:	65 a3 88 00 b0 48    	mov    %eax,%gs:0x48b00088
 475:	65 a3 8a 00 b0 21    	mov    %eax,%gs:0x21b0008a
 47b:	65 a3 8c 00 61 80    	mov    %eax,%gs:0x8061008c
 481:	fc                   	cld    
 482:	06                   	push   %es
 483:	75 06                	jne    48b <cont>
 485:	b4 01                	mov    $0x1,%ah
 487:	88 26                	mov    %ah,(%esi)
 489:	ca 02 fe             	lret   $0xfe02

0000048b <cont>:
 48b:	fe 06                	incb   (%esi)
 48d:	ca 02 8c             	lret   $0x8c02
 490:	c8 8e c0 fb          	enter  $0xc08e,$0xfb
 494:	9c                   	pushf  
 495:	26 ff 1e             	lcall  *%es:(%esi)
 498:	b2 02                	mov    $0x2,%dl
 49a:	17                   	pop    %ss
 49b:	07                   	pop    %es
 49c:	1f                   	pop    %ds
 49d:	cf                   	iret   

0000049e <_SetINT33h>:
 49e:	60                   	pusha  
 49f:	1e                   	push   %ds
 4a0:	0f a8                	push   %gs
 4a2:	06                   	push   %es
 4a3:	16                   	push   %ss
 4a4:	8c c8                	mov    %cs,%eax
 4a6:	8e c0                	mov    %eax,%es
 4a8:	8e d8                	mov    %eax,%ds
 4aa:	8e d0                	mov    %eax,%ss
 4ac:	6a 00                	push   $0x0
 4ae:	e8 13 04 17 07       	call   71708c6 <delay+0x7164576>
 4b3:	0f a9                	pop    %gs
 4b5:	1f                   	pop    %ds
 4b6:	61                   	popa   
 4b7:	fb                   	sti    
 4b8:	cf                   	iret   

000004b9 <_SetINT34h>:
 4b9:	60                   	pusha  
 4ba:	1e                   	push   %ds
 4bb:	0f a8                	push   %gs
 4bd:	06                   	push   %es
 4be:	16                   	push   %ss
 4bf:	8c c8                	mov    %cs,%eax
 4c1:	8e c0                	mov    %eax,%es
 4c3:	8e d8                	mov    %eax,%ds
 4c5:	8e d0                	mov    %eax,%ss
 4c7:	6a 00                	push   $0x0
 4c9:	e8 a8 04 17 07       	call   7170976 <delay+0x7164626>
 4ce:	0f a9                	pop    %gs
 4d0:	1f                   	pop    %ds
 4d1:	61                   	popa   
 4d2:	fb                   	sti    
 4d3:	cf                   	iret   

000004d4 <_SetINT35h>:
 4d4:	60                   	pusha  
 4d5:	1e                   	push   %ds
 4d6:	0f a8                	push   %gs
 4d8:	06                   	push   %es
 4d9:	16                   	push   %ss
 4da:	8c c8                	mov    %cs,%eax
 4dc:	8e c0                	mov    %eax,%es
 4de:	8e d8                	mov    %eax,%ds
 4e0:	8e d0                	mov    %eax,%ss
 4e2:	6a 00                	push   $0x0
 4e4:	e8 6c 05 17 07       	call   7170a55 <delay+0x7164705>
 4e9:	0f a9                	pop    %gs
 4eb:	1f                   	pop    %ds
 4ec:	61                   	popa   
 4ed:	fb                   	sti    
 4ee:	cf                   	iret   

000004ef <_SetINT36h>:
 4ef:	60                   	pusha  
 4f0:	1e                   	push   %ds
 4f1:	0f a8                	push   %gs
 4f3:	06                   	push   %es
 4f4:	16                   	push   %ss
 4f5:	8c c8                	mov    %cs,%eax
 4f7:	8e c0                	mov    %eax,%es
 4f9:	8e d8                	mov    %eax,%ds
 4fb:	8e d0                	mov    %eax,%ss
 4fd:	6a 00                	push   $0x0
 4ff:	e8 d7 05 17 07       	call   7170adb <delay+0x716478b>
 504:	0f a9                	pop    %gs
 506:	1f                   	pop    %ds
 507:	61                   	popa   
 508:	fb                   	sti    
 509:	cf                   	iret   

0000050a <_SetINT21h>:
 50a:	c8 00 00 00          	enter  $0x0,$0x0
 50e:	60                   	pusha  
 50f:	1e                   	push   %ds
 510:	0f a8                	push   %gs
 512:	06                   	push   %es
 513:	8c c8                	mov    %cs,%eax
 515:	8e c0                	mov    %eax,%es
 517:	8e d8                	mov    %eax,%ds
 519:	8b 46 08             	mov    0x8(%esi),%eax
 51c:	80 fc 00             	cmp    $0x0,%ah
 51f:	74 16                	je     537 <fn0>
 521:	80 fc 01             	cmp    $0x1,%ah
 524:	74 21                	je     547 <fn1>
 526:	80 fc 02             	cmp    $0x2,%ah
 529:	74 3d                	je     568 <fn2>
 52b:	80 fc 03             	cmp    $0x3,%ah
 52e:	74 5f                	je     58f <fn3>
 530:	07                   	pop    %es
 531:	0f a9                	pop    %gs
 533:	1f                   	pop    %ds
 534:	61                   	popa   
 535:	c9                   	leave  
 536:	cf                   	iret   

00000537 <fn0>:
 537:	8b 46 0a             	mov    0xa(%esi),%eax
 53a:	b4 0e                	mov    $0xe,%ah
 53c:	b3 00                	mov    $0x0,%bl
 53e:	cd 10                	int    $0x10
 540:	07                   	pop    %es
 541:	0f a9                	pop    %gs
 543:	1f                   	pop    %ds
 544:	61                   	popa   
 545:	c9                   	leave  
 546:	cf                   	iret   

00000547 <fn1>:
 547:	66 83 ec 04          	sub    $0x4,%sp
 54b:	b4 00                	mov    $0x0,%ah
 54d:	cd 16                	int    $0x16
 54f:	b4 00                	mov    $0x0,%ah
 551:	66 67 89 04          	mov    %ax,(%si)
 555:	24 66                	and    $0x66,%al
 557:	67 8b 04             	mov    (%si),%eax
 55a:	24 66                	and    $0x66,%al
 55c:	83 c4 04             	add    $0x4,%esp
 55f:	8e e0                	mov    %eax,%fs
 561:	07                   	pop    %es
 562:	0f a9                	pop    %gs
 564:	1f                   	pop    %ds
 565:	61                   	popa   
 566:	c9                   	leave  
 567:	cf                   	iret   

00000568 <fn2>:
 568:	66 83 ec 04          	sub    $0x4,%sp
 56c:	b4 00                	mov    $0x0,%ah
 56e:	cd 16                	int    $0x16
 570:	b4 00                	mov    $0x0,%ah
 572:	66 67 89 04          	mov    %ax,(%si)
 576:	24 66                	and    $0x66,%al
 578:	67 8b 04             	mov    (%si),%eax
 57b:	24 b4                	and    $0xb4,%al
 57d:	0e                   	push   %cs
 57e:	b3 00                	mov    $0x0,%bl
 580:	cd 10                	int    $0x10
 582:	66 83 c4 04          	add    $0x4,%sp
 586:	8e e0                	mov    %eax,%fs
 588:	07                   	pop    %es
 589:	0f a9                	pop    %gs
 58b:	1f                   	pop    %ds
 58c:	61                   	popa   
 58d:	c9                   	leave  
 58e:	cf                   	iret   

0000058f <fn3>:
 58f:	b8 03 00 cd 10       	mov    $0x10cd0003,%eax
 594:	07                   	pop    %es
 595:	0f a9                	pop    %gs
 597:	1f                   	pop    %ds
 598:	61                   	popa   
 599:	c9                   	leave  
 59a:	cf                   	iret   

0000059b <_initialInt>:
 59b:	c8 00 00 00          	enter  $0x0,$0x0
 59f:	60                   	pusha  
 5a0:	06                   	push   %es
 5a1:	1e                   	push   %ds
 5a2:	8c c8                	mov    %cs,%eax
 5a4:	8e d8                	mov    %eax,%ds
 5a6:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 5ab:	b8 20 00 bb 04       	mov    $0x4bb0020,%eax
 5b0:	00 f7                	add    %dh,%bh
 5b2:	e3 89                	jecxz  53d <fn0+0x6>
 5b4:	c7                   	(bad)  
 5b5:	b8 9e 03 26 89       	mov    $0x8926039e,%eax
 5ba:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 5bf:	45                   	inc    %ebp
 5c0:	02 1f                	add    (%edi),%bl
 5c2:	07                   	pop    %es
 5c3:	61                   	popa   
 5c4:	60                   	pusha  
 5c5:	06                   	push   %es
 5c6:	1e                   	push   %ds
 5c7:	8c c8                	mov    %cs,%eax
 5c9:	8e d8                	mov    %eax,%ds
 5cb:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 5d0:	b8 33 00 bb 04       	mov    $0x4bb0033,%eax
 5d5:	00 f7                	add    %dh,%bh
 5d7:	e3 89                	jecxz  562 <fn1+0x1b>
 5d9:	c7                   	(bad)  
 5da:	b8 9e 04 26 89       	mov    $0x8926049e,%eax
 5df:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 5e4:	45                   	inc    %ebp
 5e5:	02 1f                	add    (%edi),%bl
 5e7:	07                   	pop    %es
 5e8:	61                   	popa   
 5e9:	60                   	pusha  
 5ea:	06                   	push   %es
 5eb:	1e                   	push   %ds
 5ec:	8c c8                	mov    %cs,%eax
 5ee:	8e d8                	mov    %eax,%ds
 5f0:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 5f5:	b8 34 00 bb 04       	mov    $0x4bb0034,%eax
 5fa:	00 f7                	add    %dh,%bh
 5fc:	e3 89                	jecxz  587 <fn2+0x1f>
 5fe:	c7                   	(bad)  
 5ff:	b8 b9 04 26 89       	mov    $0x892604b9,%eax
 604:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 609:	45                   	inc    %ebp
 60a:	02 1f                	add    (%edi),%bl
 60c:	07                   	pop    %es
 60d:	61                   	popa   
 60e:	60                   	pusha  
 60f:	06                   	push   %es
 610:	1e                   	push   %ds
 611:	8c c8                	mov    %cs,%eax
 613:	8e d8                	mov    %eax,%ds
 615:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 61a:	b8 35 00 bb 04       	mov    $0x4bb0035,%eax
 61f:	00 f7                	add    %dh,%bh
 621:	e3 89                	jecxz  5ac <_initialInt+0x11>
 623:	c7                   	(bad)  
 624:	b8 d4 04 26 89       	mov    $0x892604d4,%eax
 629:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 62e:	45                   	inc    %ebp
 62f:	02 1f                	add    (%edi),%bl
 631:	07                   	pop    %es
 632:	61                   	popa   
 633:	60                   	pusha  
 634:	06                   	push   %es
 635:	1e                   	push   %ds
 636:	8c c8                	mov    %cs,%eax
 638:	8e d8                	mov    %eax,%ds
 63a:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 63f:	b8 36 00 bb 04       	mov    $0x4bb0036,%eax
 644:	00 f7                	add    %dh,%bh
 646:	e3 89                	jecxz  5d1 <_initialInt+0x36>
 648:	c7                   	(bad)  
 649:	b8 ef 04 26 89       	mov    $0x892604ef,%eax
 64e:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 653:	45                   	inc    %ebp
 654:	02 1f                	add    (%edi),%bl
 656:	07                   	pop    %es
 657:	61                   	popa   
 658:	60                   	pusha  
 659:	06                   	push   %es
 65a:	1e                   	push   %ds
 65b:	8c c8                	mov    %cs,%eax
 65d:	8e d8                	mov    %eax,%ds
 65f:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 664:	b8 21 00 bb 04       	mov    $0x4bb0021,%eax
 669:	00 f7                	add    %dh,%bh
 66b:	e3 89                	jecxz  5f6 <_initialInt+0x5b>
 66d:	c7                   	(bad)  
 66e:	b8 0a 05 26 89       	mov    $0x8926050a,%eax
 673:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 678:	45                   	inc    %ebp
 679:	02 1f                	add    (%edi),%bl
 67b:	07                   	pop    %es
 67c:	61                   	popa   
 67d:	c9                   	leave  
 67e:	66 5a                	pop    %dx
 680:	ff e2                	jmp    *%edx

00000682 <_initialInt_09h>:
 682:	c8 00 00 00          	enter  $0x0,$0x0
 686:	a1 24 00 a3 b2       	mov    0xb2a30024,%eax
 68b:	02 a1 26 00 a3 b4    	add    -0x4b5cffda(%ecx),%ah
 691:	02 60 06             	add    0x6(%eax),%ah
 694:	1e                   	push   %ds
 695:	8c c8                	mov    %cs,%eax
 697:	8e d8                	mov    %eax,%ds
 699:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 69e:	b8 09 00 bb 04       	mov    $0x4bb0009,%eax
 6a3:	00 f7                	add    %dh,%bh
 6a5:	e3 89                	jecxz  630 <_initialInt+0x95>
 6a7:	c7                   	(bad)  
 6a8:	b8 28 04 26 89       	mov    $0x89260428,%eax
 6ad:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 6b2:	45                   	inc    %ebp
 6b3:	02 1f                	add    (%edi),%bl
 6b5:	07                   	pop    %es
 6b6:	61                   	popa   
 6b7:	c9                   	leave  
 6b8:	66 5a                	pop    %dx
 6ba:	ff e2                	jmp    *%edx

000006bc <_initialInt_08h>:
 6bc:	c8 00 00 00          	enter  $0x0,$0x0
 6c0:	b0 40                	mov    $0x40,%al
 6c2:	e6 43                	out    %al,$0x43
 6c4:	b8 0b e9 e6 40       	mov    $0x40e6e90b,%eax
 6c9:	88 e0                	mov    %ah,%al
 6cb:	e6 40                	out    %al,$0x40
 6cd:	60                   	pusha  
 6ce:	06                   	push   %es
 6cf:	1e                   	push   %ds
 6d0:	8c c8                	mov    %cs,%eax
 6d2:	8e d8                	mov    %eax,%ds
 6d4:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 6d9:	b8 08 00 bb 04       	mov    $0x4bb0008,%eax
 6de:	00 f7                	add    %dh,%bh
 6e0:	e3 89                	jecxz  66b <_initialInt+0xd0>
 6e2:	c7                   	(bad)  
 6e3:	b8 b7 03 26 89       	mov    $0x892603b7,%eax
 6e8:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 6ed:	45                   	inc    %ebp
 6ee:	02 1f                	add    (%edi),%bl
 6f0:	07                   	pop    %es
 6f1:	61                   	popa   
 6f2:	c9                   	leave  
 6f3:	66 5a                	pop    %dx
 6f5:	ff e2                	jmp    *%edx

000006f7 <_save>:
 6f7:	1e                   	push   %ds
 6f8:	0e                   	push   %cs
 6f9:	1f                   	pop    %ds
 6fa:	8f 06                	popl   (%esi)
 6fc:	ba 02 66 8f 06       	mov    $0x68f6602,%edx
 701:	be 02 66 89 36       	mov    $0x36896602,%esi
 706:	c2 02 66             	ret    $0x6602
 709:	8b 36                	mov    (%esi),%esi
 70b:	20 22                	and    %ah,(%edx)
 70d:	66 83 c6 26          	add    $0x26,%si
 711:	66 67 8f 06 67 8f    	popw   -0x7099
 717:	46                   	inc    %esi
 718:	02 67 8f             	add    -0x71(%edi),%ah
 71b:	46                   	inc    %esi
 71c:	04 66                	add    $0x66,%al
 71e:	67 89 66 fc          	mov    %esp,-0x4(%bp)
 722:	67 8c 56 fa          	mov    %ss,-0x6(%bp)
 726:	8c de                	mov    %ds,%esi
 728:	8e d6                	mov    %esi,%ss
 72a:	66 8b 26             	mov    (%esi),%sp
 72d:	20 22                	and    %ah,(%edx)
 72f:	66 83 c4 1e          	add    $0x1e,%sp
 733:	ff 36                	pushl  (%esi)
 735:	ba 02 06 66 55       	mov    $0x55660602,%edx
 73a:	66 57                	push   %di
 73c:	66 ff 36             	pushw  (%esi)
 73f:	c2 02 66             	ret    $0x6602
 742:	52                   	push   %edx
 743:	66 51                	push   %cx
 745:	66 53                	push   %bx
 747:	66 50                	push   %ax
 749:	66 8b 26             	mov    (%esi),%sp
 74c:	c6 02 66             	movb   $0x66,(%edx)
 74f:	a1 be 02 66 ff       	mov    0xff6602be,%eax
 754:	e0 66                	loopne 7bc <sys_print_for_heart+0x11>

00000755 <_restart>:
 755:	66 89 26             	mov    %sp,(%esi)
 758:	c6 02 66             	movb   $0x66,(%edx)
 75b:	8b 26                	mov    (%esi),%esp
 75d:	20 22                	and    %ah,(%edx)
 75f:	66 58                	pop    %ax
 761:	66 5b                	pop    %bx
 763:	66 59                	pop    %cx
 765:	66 5a                	pop    %dx
 767:	66 5e                	pop    %si
 769:	66 5f                	pop    %di
 76b:	66 5d                	pop    %bp
 76d:	07                   	pop    %es
 76e:	8f 06                	popl   (%esi)
 770:	ba 02 66 89 36       	mov    $0x36896602,%edx
 775:	c2 02 17             	ret    $0x1702
 778:	66 89 e6             	mov    %sp,%si
 77b:	66 67 8b 26 66 67    	mov    0x6766,%sp
 781:	ff 76 0a             	pushl  0xa(%esi)
 784:	66 67 ff 76 08       	pushw  0x8(%bp)
 789:	66 67 ff 76 04       	pushw  0x4(%bp)
 78e:	66 8b 36             	mov    (%esi),%si
 791:	c2 02 8e             	ret    $0x8e02
 794:	1e                   	push   %ds
 795:	ba 02 50 b0 20       	mov    $0x20b05002,%edx
 79a:	e6 20                	out    %al,$0x20
 79c:	e6 a0                	out    %al,$0xa0
 79e:	58                   	pop    %eax
 79f:	cf                   	iret   

000007a0 <Timer>:
 7a0:	e8 54 ff 6a 00       	call   6b06f9 <delay+0x6a43a9>
 7a5:	e8 7b 04 e8 aa       	call   aae80c25 <delay+0xaae748d5>
 7aa:	ff 66 55             	jmp    *0x55(%esi)

000007ab <sys_print_for_heart>:
#include "use.h"
void sys_print_for_heart(char const* Messeage,int row,int colume){//need the pos
 7ab:	66 55                	push   %bp
 7ad:	66 89 e5             	mov    %sp,%bp
 7b0:	66 83 ec 0c          	sub    $0xc,%sp
	int pos = (80 * row + colume)*2;
 7b4:	67 66 8b 55 0c       	mov    0xc(%di),%dx
 7b9:	66 89 d0             	mov    %dx,%ax
 7bc:	66 c1 e0 02          	shl    $0x2,%ax
 7c0:	66 01 d0             	add    %dx,%ax
 7c3:	66 c1 e0 04          	shl    $0x4,%ax
 7c7:	66 89 c2             	mov    %ax,%dx
 7ca:	67 66 8b 45 10       	mov    0x10(%di),%ax
 7cf:	66 01 d0             	add    %dx,%ax
 7d2:	66 01 c0             	add    %ax,%ax
 7d5:	67 66 89 45 fc       	mov    %ax,-0x4(%di)
	int color = 3;
 7da:	67 66 c7 45 f4 03 00 	movw   $0x3,-0xc(%di)
 7e1:	00 00                	add    %al,(%eax)
	int index = 0;
 7e3:	67 66 c7 45 f8 00 00 	movw   $0x0,-0x8(%di)
 7ea:	00 00                	add    %al,(%eax)
	while(Messeage[index] != '\0'){
 7ec:	eb 35                	jmp    823 <ddelay+0x53>
		_printchar(Messeage[index],pos,color);
 7ee:	67 66 8b 55 f8       	mov    -0x8(%di),%dx
 7f3:	67 66 8b 45 08       	mov    0x8(%di),%ax
 7f8:	66 01 d0             	add    %dx,%ax
 7fb:	67 8a 00             	mov    (%bx,%si),%al
 7fe:	66 0f be c0          	movsbw %al,%ax
 802:	67 66 ff 75 f4       	pushw  -0xc(%di)
 807:	67 66 ff 75 fc       	pushw  -0x4(%di)
 80c:	66 50                	push   %ax
 80e:	66 e8 c0 fa          	callw  2d2 <_clearscreen+0x7>
 812:	ff                   	(bad)  
 813:	ff 66 83             	jmp    *-0x7d(%esi)
 816:	c4 0c 67             	les    (%edi,%eiz,2),%ecx
		index++;
 819:	66 ff 45 f8          	incw   -0x8(%ebp)
		pos = pos + 2;
 81d:	67 66 83 45 fc 02    	addw   $0x2,-0x4(%di)
#include "use.h"
void sys_print_for_heart(char const* Messeage,int row,int colume){//need the pos
	int pos = (80 * row + colume)*2;
	int color = 3;
	int index = 0;
	while(Messeage[index] != '\0'){
 823:	67 66 8b 55 f8       	mov    -0x8(%di),%dx
 828:	67 66 8b 45 08       	mov    0x8(%di),%ax
 82d:	66 01 d0             	add    %dx,%ax
 830:	67 8a 00             	mov    (%bx,%si),%al
 833:	84 c0                	test   %al,%al
 835:	75 b7                	jne    7ee <ddelay+0x1e>
		_printchar(Messeage[index],pos,color);
		index++;
		pos = pos + 2;
	}
	return;
 837:	90                   	nop
}
 838:	66 c9                	leavew 
 83a:	66 c3                	retw   

0000083c <sys_print_different_color>:
void sys_print_different_color(char const* Messeage,int row,int colume,int color){
 83c:	66 55                	push   %bp
 83e:	66 89 e5             	mov    %sp,%bp
 841:	66 83 ec 08          	sub    $0x8,%sp
    int pos = (80 * row + colume)*2;
 845:	67 66 8b 55 0c       	mov    0xc(%di),%dx
 84a:	66 89 d0             	mov    %dx,%ax
 84d:	66 c1 e0 02          	shl    $0x2,%ax
 851:	66 01 d0             	add    %dx,%ax
 854:	66 c1 e0 04          	shl    $0x4,%ax
 858:	66 89 c2             	mov    %ax,%dx
 85b:	67 66 8b 45 10       	mov    0x10(%di),%ax
 860:	66 01 d0             	add    %dx,%ax
 863:	66 01 c0             	add    %ax,%ax
 866:	67 66 89 45 fc       	mov    %ax,-0x4(%di)
	int index = 0;
 86b:	67 66 c7 45 f8 00 00 	movw   $0x0,-0x8(%di)
 872:	00 00                	add    %al,(%eax)
	while(Messeage[index] != '\0'){
 874:	eb 35                	jmp    8ab <sys_print_different_color+0x6f>
		_printchar(Messeage[index],pos,color);
 876:	67 66 8b 55 f8       	mov    -0x8(%di),%dx
 87b:	67 66 8b 45 08       	mov    0x8(%di),%ax
 880:	66 01 d0             	add    %dx,%ax
 883:	67 8a 00             	mov    (%bx,%si),%al
 886:	66 0f be c0          	movsbw %al,%ax
 88a:	67 66 ff 75 14       	pushw  0x14(%di)
 88f:	67 66 ff 75 fc       	pushw  -0x4(%di)
 894:	66 50                	push   %ax
 896:	66 e8 38 fa          	callw  2d2 <_clearscreen+0x7>
 89a:	ff                   	(bad)  
 89b:	ff 66 83             	jmp    *-0x7d(%esi)
 89e:	c4 0c 67             	les    (%edi,%eiz,2),%ecx
		index++;
 8a1:	66 ff 45 f8          	incw   -0x8(%ebp)
		pos = pos + 2;
 8a5:	67 66 83 45 fc 02    	addw   $0x2,-0x4(%di)
	return;
}
void sys_print_different_color(char const* Messeage,int row,int colume,int color){
    int pos = (80 * row + colume)*2;
	int index = 0;
	while(Messeage[index] != '\0'){
 8ab:	67 66 8b 55 f8       	mov    -0x8(%di),%dx
 8b0:	67 66 8b 45 08       	mov    0x8(%di),%ax
 8b5:	66 01 d0             	add    %dx,%ax
 8b8:	67 8a 00             	mov    (%bx,%si),%al
 8bb:	84 c0                	test   %al,%al
 8bd:	75 b7                	jne    876 <sys_print_different_color+0x3a>
		_printchar(Messeage[index],pos,color);
		index++;
		pos = pos + 2;
	}
	return;
 8bf:	90                   	nop
}
 8c0:	66 c9                	leavew 
 8c2:	66 c3                	retw   

000008c4 <sys_showline>:
void sys_showline(){
 8c4:	66 55                	push   %bp
 8c6:	66 89 e5             	mov    %sp,%bp
 8c9:	66 83 ec 18          	sub    $0x18,%sp
    char alpha = 'a';
 8cd:	67 c6 45 fb 61       	movb   $0x61,-0x5(%di)
    char name[6];
    name[0] = 'c';
 8d2:	67 c6 45 ea 63       	movb   $0x63,-0x16(%di)
    name[1] = 'h';
 8d7:	67 c6 45 eb 68       	movb   $0x68,-0x15(%di)
    name[2] = 'e';
 8dc:	67 c6 45 ec 65       	movb   $0x65,-0x14(%di)
    name[3] = 'n';
 8e1:	67 c6 45 ed 6e       	movb   $0x6e,-0x13(%di)
    name[4] = 'h';
 8e6:	67 c6 45 ee 68       	movb   $0x68,-0x12(%di)
    name[5] = 'y';
 8eb:	67 c6 45 ef 79       	movb   $0x79,-0x11(%di)
    int color = 3;
 8f0:	67 66 c7 45 f4 03 00 	movw   $0x3,-0xc(%di)
 8f7:	00 00                	add    %al,(%eax)
    int i = 0;
 8f9:	67 66 c7 45 fc 00 00 	movw   $0x0,-0x4(%di)
 900:	00 00                	add    %al,(%eax)
    int pos = (80 * 0 + 0)*2;
 902:	67 66 c7 45 f0 00 00 	movw   $0x0,-0x10(%di)
 909:	00 00                	add    %al,(%eax)
    for(i = 0;i < 6;i ++){
 90b:	67 66 c7 45 fc 00 00 	movw   $0x0,-0x4(%di)
 912:	00 00                	add    %al,(%eax)
 914:	eb 52                	jmp    968 <sys_showline+0xa4>
        pos = (80 * i + i) * 2;
 916:	67 66 8b 55 fc       	mov    -0x4(%di),%dx
 91b:	66 89 d0             	mov    %dx,%ax
 91e:	66 c1 e0 03          	shl    $0x3,%ax
 922:	66 01 d0             	add    %dx,%ax
 925:	67 66 8d 14          	lea    (%si),%dx
 929:	c5 00                	lds    (%eax),%eax
 92b:	00 00                	add    %al,(%eax)
 92d:	00 66 01             	add    %ah,0x1(%esi)
 930:	d0 66 01             	shlb   0x1(%esi)
 933:	c0 67 66 89          	shlb   $0x89,0x66(%edi)
 937:	45                   	inc    %ebp
 938:	f0 67 66 8d 55 ea    	lock lea -0x16(%di),%dx
        _printchar(name[i],pos,color);
 93e:	67 66 8b 45 fc       	mov    -0x4(%di),%ax
 943:	66 01 d0             	add    %dx,%ax
 946:	67 8a 00             	mov    (%bx,%si),%al
 949:	66 0f be c0          	movsbw %al,%ax
 94d:	67 66 ff 75 f4       	pushw  -0xc(%di)
 952:	67 66 ff 75 f0       	pushw  -0x10(%di)
 957:	66 50                	push   %ax
 959:	66 e8 75 f9          	callw  2d2 <_clearscreen+0x7>
 95d:	ff                   	(bad)  
 95e:	ff 66 83             	jmp    *-0x7d(%esi)
 961:	c4 0c 67             	les    (%edi,%eiz,2),%ecx
    name[4] = 'h';
    name[5] = 'y';
    int color = 3;
    int i = 0;
    int pos = (80 * 0 + 0)*2;
    for(i = 0;i < 6;i ++){
 964:	66 ff 45 fc          	incw   -0x4(%ebp)
 968:	67 66 83 7d fc 05    	cmpw   $0x5,-0x4(%di)
 96e:	7e a6                	jle    916 <sys_showline+0x52>
        pos = (80 * i + i) * 2;
        _printchar(name[i],pos,color);
    }
}
 970:	66 c9                	leavew 
 972:	66 c3                	retw   

00000974 <sys_printname>:

void sys_printname(){
 974:	66 55                	push   %bp
 976:	66 89 e5             	mov    %sp,%bp
 979:	66 83 ec 1c          	sub    $0x1c,%sp
    char const* Messeage1 = "***      ***  *****     *****         ******                ****  ";
 97d:	67 66 c7 45 fc e4 0c 	movw   $0xce4,-0x4(%di)
 984:	00 00                	add    %al,(%eax)
    char const* Messeage2 = "***      ***   ****     ****       ***      ***          **     ** ";
 986:	67 66 c7 45 f8 28 0d 	movw   $0xd28,-0x8(%di)
 98d:	00 00                	add    %al,(%eax)
    char const* Messeage3 = "***      ***    ***     ***      ***          ***       **         "; 
 98f:	67 66 c7 45 f4 6c 0d 	movw   $0xd6c,-0xc(%di)
 996:	00 00                	add    %al,(%eax)
    char const* Messeage4 = "************       *****         ***          ***         ***      ";
 998:	67 66 c7 45 f0 b0 0d 	movw   $0xdb0,-0x10(%di)
 99f:	00 00                	add    %al,(%eax)
    char const* Messeage5 = "***      ***       *****         ***          ***            **    ";
 9a1:	67 66 c7 45 ec f4 0d 	movw   $0xdf4,-0x14(%di)
 9a8:	00 00                	add    %al,(%eax)
    char const* Messeage6 = "***      ***       *****           ***      ***          **   ***  ";
 9aa:	67 66 c7 45 e8 38 0e 	movw   $0xe38,-0x18(%di)
 9b1:	00 00                	add    %al,(%eax)
    char const* Messeage7 = "***      ***       *****              ******               ****    ";
 9b3:	67 66 c7 45 e4 7c 0e 	movw   $0xe7c,-0x1c(%di)
 9ba:	00 00                	add    %al,(%eax)

    sys_print_for_heart(Messeage1,16,11);
 9bc:	66 6a 0b             	pushw  $0xb
 9bf:	66 6a 10             	pushw  $0x10
 9c2:	67 66 ff 75 fc       	pushw  -0x4(%di)
 9c7:	66 e8 de fd          	callw  7a9 <Timer+0x9>
 9cb:	ff                   	(bad)  
 9cc:	ff 66 83             	jmp    *-0x7d(%esi)
 9cf:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart(Messeage2,17,11);
 9d2:	6a 0b                	push   $0xb
 9d4:	66 6a 11             	pushw  $0x11
 9d7:	67 66 ff 75 f8       	pushw  -0x8(%di)
 9dc:	66 e8 c9 fd          	callw  7a9 <Timer+0x9>
 9e0:	ff                   	(bad)  
 9e1:	ff 66 83             	jmp    *-0x7d(%esi)
 9e4:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart(Messeage3,18,11);
 9e7:	6a 0b                	push   $0xb
 9e9:	66 6a 12             	pushw  $0x12
 9ec:	67 66 ff 75 f4       	pushw  -0xc(%di)
 9f1:	66 e8 b4 fd          	callw  7a9 <Timer+0x9>
 9f5:	ff                   	(bad)  
 9f6:	ff 66 83             	jmp    *-0x7d(%esi)
 9f9:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart(Messeage4,19,11);
 9fc:	6a 0b                	push   $0xb
 9fe:	66 6a 13             	pushw  $0x13
 a01:	67 66 ff 75 f0       	pushw  -0x10(%di)
 a06:	66 e8 9f fd          	callw  7a9 <Timer+0x9>
 a0a:	ff                   	(bad)  
 a0b:	ff 66 83             	jmp    *-0x7d(%esi)
 a0e:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart(Messeage5,20,11);
 a11:	6a 0b                	push   $0xb
 a13:	66 6a 14             	pushw  $0x14
 a16:	67 66 ff 75 ec       	pushw  -0x14(%di)
 a1b:	66 e8 8a fd          	callw  7a9 <Timer+0x9>
 a1f:	ff                   	(bad)  
 a20:	ff 66 83             	jmp    *-0x7d(%esi)
 a23:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart(Messeage6,21,11);
 a26:	6a 0b                	push   $0xb
 a28:	66 6a 15             	pushw  $0x15
 a2b:	67 66 ff 75 e8       	pushw  -0x18(%di)
 a30:	66 e8 75 fd          	callw  7a9 <Timer+0x9>
 a34:	ff                   	(bad)  
 a35:	ff 66 83             	jmp    *-0x7d(%esi)
 a38:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart(Messeage7,22,11);
 a3b:	6a 0b                	push   $0xb
 a3d:	66 6a 16             	pushw  $0x16
 a40:	67 66 ff 75 e4       	pushw  -0x1c(%di)
 a45:	66 e8 60 fd          	callw  7a9 <Timer+0x9>
 a49:	ff                   	(bad)  
 a4a:	ff 66 83             	jmp    *-0x7d(%esi)
 a4d:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
}
 a50:	c9                   	leave  
 a51:	66 c3                	retw   

00000a53 <sys_printpoem>:
void sys_printpoem(){
 a53:	66 55                	push   %bp
 a55:	66 89 e5             	mov    %sp,%bp
 a58:	66 83 ec 14          	sub    $0x14,%sp
    char const* Messeage = "Comuputer Sciense";
 a5c:	67 66 c7 45 f8 c0 0e 	movw   $0xec0,-0x8(%di)
 a63:	00 00                	add    %al,(%eax)
    char const* Messeage2 = "chenhyOS";
 a65:	67 66 c7 45 f4 d2 0e 	movw   $0xed2,-0xc(%di)
 a6c:	00 00                	add    %al,(%eax)
    int i = 1;
 a6e:	67 66 c7 45 fc 01 00 	movw   $0x1,-0x4(%di)
 a75:	00 00                	add    %al,(%eax)
    for(i = 1;i < 7;i ++){
 a77:	67 66 c7 45 fc 01 00 	movw   $0x1,-0x4(%di)
 a7e:	00 00                	add    %al,(%eax)
 a80:	eb 4b                	jmp    acd <sys_printpoem+0x7a>
        sys_print_different_color(Messeage,15,10,i);
 a82:	67 66 ff 75 fc       	pushw  -0x4(%di)
 a87:	66 6a 0a             	pushw  $0xa
 a8a:	66 6a 0f             	pushw  $0xf
 a8d:	67 66 ff 75 f8       	pushw  -0x8(%di)
 a92:	66 e8 a4 fd          	callw  83a <ddelay+0x6a>
 a96:	ff                   	(bad)  
 a97:	ff 66 83             	jmp    *-0x7d(%esi)
 a9a:	c4 10                	les    (%eax),%edx
        sys_print_different_color(Messeage2,16,10,i);
 a9c:	67 66 ff 75 fc       	pushw  -0x4(%di)
 aa1:	66 6a 0a             	pushw  $0xa
 aa4:	66 6a 10             	pushw  $0x10
 aa7:	67 66 ff 75 f4       	pushw  -0xc(%di)
 aac:	66 e8 8a fd          	callw  83a <ddelay+0x6a>
 ab0:	ff                   	(bad)  
 ab1:	ff 66 83             	jmp    *-0x7d(%esi)
 ab4:	c4 10                	les    (%eax),%edx
        int j = 0;
 ab6:	67 66 c7 45 f0 00 00 	movw   $0x0,-0x10(%di)
 abd:	00 00                	add    %al,(%eax)
        int k = 0;
 abf:	67 66 c7 45 ec 00 00 	movw   $0x0,-0x14(%di)
 ac6:	00 00                	add    %al,(%eax)
}
void sys_printpoem(){
    char const* Messeage = "Comuputer Sciense";
    char const* Messeage2 = "chenhyOS";
    int i = 1;
    for(i = 1;i < 7;i ++){
 ac8:	67 66 ff 45 fc       	incw   -0x4(%di)
 acd:	67 66 83 7d fc 06    	cmpw   $0x6,-0x4(%di)
 ad3:	7e ad                	jle    a82 <sys_printpoem+0x2f>
        sys_print_different_color(Messeage,15,10,i);
        sys_print_different_color(Messeage2,16,10,i);
        int j = 0;
        int k = 0;
    }
}
 ad5:	66 c9                	leavew 
 ad7:	66 c3                	retw   

00000ad9 <sys_printheart>:
void sys_printheart(){
 ad9:	66 55                	push   %bp
 adb:	66 89 e5             	mov    %sp,%bp
    sys_print_for_heart("     * *       * *     ",00,40);
 ade:	66 6a 28             	pushw  $0x28
 ae1:	66 6a 00             	pushw  $0x0
 ae4:	66 68 db 0e          	pushw  $0xedb
 ae8:	00 00                	add    %al,(%eax)
 aea:	66 e8 bb fc          	callw  7a9 <Timer+0x9>
 aee:	ff                   	(bad)  
 aef:	ff 66 83             	jmp    *-0x7d(%esi)
 af2:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart("   * * * *   * * * *    ",1,40);
 af5:	6a 28                	push   $0x28
 af7:	66 6a 01             	pushw  $0x1
 afa:	66 68 f3 0e          	pushw  $0xef3
 afe:	00 00                	add    %al,(%eax)
 b00:	66 e8 a5 fc          	callw  7a9 <Timer+0x9>
 b04:	ff                   	(bad)  
 b05:	ff 66 83             	jmp    *-0x7d(%esi)
 b08:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart(" * * * * * * * * * * *    ",2,40);
 b0b:	6a 28                	push   $0x28
 b0d:	66 6a 02             	pushw  $0x2
 b10:	66 68 0c 0f          	pushw  $0xf0c
 b14:	00 00                	add    %al,(%eax)
 b16:	66 e8 8f fc          	callw  7a9 <Timer+0x9>
 b1a:	ff                   	(bad)  
 b1b:	ff 66 83             	jmp    *-0x7d(%esi)
 b1e:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart("  * * * * * * * * * *   ",3,40);
 b21:	6a 28                	push   $0x28
 b23:	66 6a 03             	pushw  $0x3
 b26:	66 68 27 0f          	pushw  $0xf27
 b2a:	00 00                	add    %al,(%eax)
 b2c:	66 e8 79 fc          	callw  7a9 <Timer+0x9>
 b30:	ff                   	(bad)  
 b31:	ff 66 83             	jmp    *-0x7d(%esi)
 b34:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart("    * * * * * * * *    ",4,40);
 b37:	6a 28                	push   $0x28
 b39:	66 6a 04             	pushw  $0x4
 b3c:	66 68 40 0f          	pushw  $0xf40
 b40:	00 00                	add    %al,(%eax)
 b42:	66 e8 63 fc          	callw  7a9 <Timer+0x9>
 b46:	ff                   	(bad)  
 b47:	ff 66 83             	jmp    *-0x7d(%esi)
 b4a:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart("      * * * * * *     ",5,40);
 b4d:	6a 28                	push   $0x28
 b4f:	66 6a 05             	pushw  $0x5
 b52:	66 68 58 0f          	pushw  $0xf58
 b56:	00 00                	add    %al,(%eax)
 b58:	66 e8 4d fc          	callw  7a9 <Timer+0x9>
 b5c:	ff                   	(bad)  
 b5d:	ff 66 83             	jmp    *-0x7d(%esi)
 b60:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart("        * * * *      ",6,40);
 b63:	6a 28                	push   $0x28
 b65:	66 6a 06             	pushw  $0x6
 b68:	66 68 6f 0f          	pushw  $0xf6f
 b6c:	00 00                	add    %al,(%eax)
 b6e:	66 e8 37 fc          	callw  7a9 <Timer+0x9>
 b72:	ff                   	(bad)  
 b73:	ff 66 83             	jmp    *-0x7d(%esi)
 b76:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart("          * *       ",7,40);
 b79:	6a 28                	push   $0x28
 b7b:	66 6a 07             	pushw  $0x7
 b7e:	66 68 85 0f          	pushw  $0xf85
 b82:	00 00                	add    %al,(%eax)
 b84:	66 e8 21 fc          	callw  7a9 <Timer+0x9>
 b88:	ff                   	(bad)  
 b89:	ff 66 83             	jmp    *-0x7d(%esi)
 b8c:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
 b8f:	c9                   	leave  
 b90:	66 c3                	retw   

00000b92 <initial_PCB>:
#include "schedule.h"
struct PCB PCB_list[5];
void initial_PCB(int index){
 b92:	66 55                	push   %bp
 b94:	66 89 e5             	mov    %sp,%bp
    PCB_list[index].cs = 0x1000+0x1000*(index + 1);//5代表内核，0代表用户程序
 b97:	67 66 8b 45 08       	mov    0x8(%di),%ax
 b9c:	66 83 c0 02          	add    $0x2,%ax
 ba0:	66 c1 e0 0c          	shl    $0xc,%ax
 ba4:	66 89 c2             	mov    %ax,%dx
 ba7:	67 66 8b 45 08       	mov    0x8(%di),%ax
 bac:	66 c1 e0 06          	shl    $0x6,%ax
 bb0:	66 05 10 21          	add    $0x2110,%ax
 bb4:	00 00                	add    %al,(%eax)
 bb6:	67 66 89 10          	mov    %dx,(%bx,%si)
    PCB_list[index].eip = 0x100;
 bba:	67 66 8b 45 08       	mov    0x8(%di),%ax
 bbf:	66 c1 e0 06          	shl    $0x6,%ax
 bc3:	66 05 00 21          	add    $0x2100,%ax
 bc7:	00 00                	add    %al,(%eax)
 bc9:	67 66 c7 40 0c 00 01 	movw   $0x100,0xc(%bx,%si)
 bd0:	00 00                	add    %al,(%eax)
    PCB_list[index].prg_status = 1;
 bd2:	67 66 8b 45 08       	mov    0x8(%di),%ax
 bd7:	66 c1 e0 06          	shl    $0x6,%ax
 bdb:	66 05 10 21          	add    $0x2110,%ax
 bdf:	00 00                	add    %al,(%eax)
 be1:	67 66 c7 40 08 01 00 	movw   $0x1,0x8(%bx,%si)
 be8:	00 00                	add    %al,(%eax)
    PCB_list[index].eflags = 512;
 bea:	67 66 8b 45 08       	mov    0x8(%di),%ax
 bef:	66 c1 e0 06          	shl    $0x6,%ax
 bf3:	66 05 10 21          	add    $0x2110,%ax
 bf7:	00 00                	add    %al,(%eax)
 bf9:	67 66 c7 40 04 00 02 	movw   $0x200,0x4(%bx,%si)
 c00:	00 00                	add    %al,(%eax)
    PCB_list[index].prg_name = '1'+index - 1;
 c02:	67 66 8b 45 08       	mov    0x8(%di),%ax
 c07:	66 83 c0 30          	add    $0x30,%ax
 c0b:	67 66 8b 55 08       	mov    0x8(%di),%dx
 c10:	66 c1 e2 06          	shl    $0x6,%dx
 c14:	66 81 c2 10 21       	add    $0x2110,%dx
 c19:	00 00                	add    %al,(%eax)
 c1b:	67 88 42 0c          	mov    %al,0xc(%bp,%si)
}
 c1f:	66 5d                	pop    %bp
 c21:	66 c3                	retw   

00000c23 <sys_schedule>:
void sys_schedule(){
 c23:	66 55                	push   %bp
 c25:	66 89 e5             	mov    %sp,%bp
 c28:	66 83 ec 08          	sub    $0x8,%sp
    int i,j;
    if(PCB_list == _CurrentProg){
 c2c:	66 a1 20 22 66 3d    	mov    0x3d662220,%ax
 c32:	e0 20                	loopne c54 <sys_schedule+0x31>
 c34:	00 00                	add    %al,(%eax)
 c36:	75 09                	jne    c41 <sys_schedule+0x1e>
        i = 0;
 c38:	67 66 c7 45 fc 00 00 	movw   $0x0,-0x4(%di)
 c3f:	00 00                	add    %al,(%eax)
    }
    if(PCB_list + 1 == _CurrentProg ){
 c41:	66 a1 20 22 66 3d    	mov    0x3d662220,%ax
 c47:	20 21                	and    %ah,(%ecx)
 c49:	00 00                	add    %al,(%eax)
 c4b:	75 09                	jne    c56 <sys_schedule+0x33>
        i = 1;
 c4d:	67 66 c7 45 fc 01 00 	movw   $0x1,-0x4(%di)
 c54:	00 00                	add    %al,(%eax)
    }
    if(PCB_list + 2 == _CurrentProg){
 c56:	66 a1 20 22 66 3d    	mov    0x3d662220,%ax
 c5c:	60                   	pusha  
 c5d:	21 00                	and    %eax,(%eax)
 c5f:	00 75 09             	add    %dh,0x9(%ebp)
        i = 2;
 c62:	67 66 c7 45 fc 02 00 	movw   $0x2,-0x4(%di)
 c69:	00 00                	add    %al,(%eax)
    }
    if(PCB_list + 3 == _CurrentProg){
 c6b:	66 a1 20 22 66 3d    	mov    0x3d662220,%ax
 c71:	a0 21 00 00 75       	mov    0x75000021,%al
 c76:	09 67 66             	or     %esp,0x66(%edi)
        i = 3;
 c79:	c7 45 fc 03 00 00 00 	movl   $0x3,-0x4(%ebp)
    }
    for(j = 0;j < 4;j ++){
 c80:	67 66 c7 45 f8 00 00 	movw   $0x0,-0x8(%di)
 c87:	00 00                	add    %al,(%eax)
 c89:	eb 42                	jmp    ccd <sys_schedule+0xaa>
        if(i == 3){
 c8b:	67 66 83 7d fc 03    	cmpw   $0x3,-0x4(%di)
 c91:	75 14                	jne    ca7 <sys_schedule+0x84>
            _CurrentProg = 0;
 c93:	66 c7 06 20 22       	movw   $0x2220,(%esi)
 c98:	00 00                	add    %al,(%eax)
 c9a:	00 00                	add    %al,(%eax)
            i = 0;
 c9c:	67 66 c7 45 fc 00 00 	movw   $0x0,-0x4(%di)
 ca3:	00 00                	add    %al,(%eax)
 ca5:	eb 11                	jmp    cb8 <sys_schedule+0x95>
        }
        else{
            _CurrentProg ++;
 ca7:	66 a1 20 22 66 83    	mov    0x83662220,%ax
 cad:	c0 40 66 a3          	rolb   $0xa3,0x66(%eax)
 cb1:	20 22                	and    %ah,(%edx)
            i ++;
 cb3:	67 66 ff 45 fc       	incw   -0x4(%di)
        }
        if(_CurrentProg -> prg_status != 0){
 cb8:	66 a1 20 22 67 66    	mov    0x66672220,%ax
 cbe:	8b 40 38             	mov    0x38(%eax),%eax
 cc1:	66 85 c0             	test   %ax,%ax
 cc4:	74 02                	je     cc8 <sys_schedule+0xa5>
            return;
 cc6:	eb 17                	jmp    cdf <sys_schedule+0xbc>
        i = 2;
    }
    if(PCB_list + 3 == _CurrentProg){
        i = 3;
    }
    for(j = 0;j < 4;j ++){
 cc8:	67 66 ff 45 f8       	incw   -0x8(%di)
 ccd:	67 66 83 7d f8 03    	cmpw   $0x3,-0x8(%di)
 cd3:	7e b6                	jle    c8b <sys_schedule+0x68>
        }
        if(_CurrentProg -> prg_status != 0){
            return;
        }
    }
    _CurrentProg = PCB_list + 4;
 cd5:	66 c7 06 20 22       	movw   $0x2220,(%esi)
 cda:	e0 21                	loopne cfd <sys_schedule+0xda>
 cdc:	00 00                	add    %al,(%eax)
    return;
 cde:	90                   	nop
 cdf:	66 c9                	leavew 
 ce1:	66 c3                	retw   
