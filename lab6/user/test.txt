
test.elf:     file format elf32-i386


Disassembly of section .text:

00000100 <test>:
 100:	8c c8                	mov    %cs,%eax
 102:	8e d8                	mov    %eax,%ds
 104:	8e d0                	mov    %eax,%ss
 106:	bc 00 01 cd 33       	mov    $0x33cd0100,%esp
 10b:	cd 37                	int    $0x37
 10d:	eb fe                	jmp    10d <test+0xd>
 10f:	90                   	nop

00000110 <count>:
 110:	08 2d 00 00 00 00    	or     %ch,0x0

00000111 <alpha>:
 111:	2d 00 00 00 00       	sub    $0x0,%eax

00000112 <int_09_saved>:
 112:	00 00                	add    %al,(%eax)
	...

00000116 <program_saved>:
 116:	70 00                	jo     118 <program_saved+0x2>
	...

0000011a <ds_saved>:
 11a:	7c 00                	jl     11c <ds_saved+0x2>
	...

0000011e <return_save>:
 11e:	88 00                	mov    %al,(%eax)

00000120 <esi_save>:
 120:	96                   	xchg   %eax,%esi
 121:	00 00                	add    %al,(%eax)
	...

00000124 <temp>:
 124:	e8 03 b4 00 00       	call   b52c <_end+0x9168>

00000126 <kernelesp_saved>:
 126:	b4 00                	mov    $0x0,%ah
	...

0000012a <esp_saved_inkernel>:
 12a:	c8 00 00 00          	enter  $0x0,$0x0

0000012e <esp_saved_in_user>:
 12e:	f0 00 00             	lock add %al,(%eax)
	...

00000132 <ss_saved_in_user>:
 132:	2c 01                	sub    $0x1,%al
	...

00000136 <color>:
 136:	01 54 68 65          	add    %edx,0x65(%eax,%ebp,2)

00000137 <Message31>:
 137:	54                   	push   %esp
 138:	68 65 20 74 69       	push   $0x69742065
 13d:	6d                   	insl   (%dx),%es:(%edi)
 13e:	65 20 6e 6f          	and    %ch,%gs:0x6f(%esi)
 142:	77 20                	ja     164 <_printchar+0x2>
 144:	69 73 20 54 68 65 20 	imul   $0x20656854,0x20(%ebx),%esi

00000147 <Message32>:
 147:	54                   	push   %esp
 148:	68 65 20 64 61       	push   $0x61642065
 14d:	74 65                	je     1b4 <_setPoint+0x3>
 14f:	20 74 6f 64          	and    %dh,0x64(%edi,%ebp,2)
 153:	61                   	popa   
 154:	79 20                	jns    176 <_printchar+0x14>
 156:	69 73 20 b8 03 00 cd 	imul   $0xcd0003b8,0x20(%ebx),%esi

00000159 <_clearscreen>:
 159:	b8 03 00 cd 10       	mov    $0x10cd0003,%eax
 15e:	66 5a                	pop    %dx
 160:	ff e2                	jmp    *%edx

00000162 <_printchar>:
 162:	c8 00 00 00          	enter  $0x0,$0x0
 166:	b8 00 b8 8e e8       	mov    $0xe88eb800,%eax
 16b:	57                   	push   %edi
 16c:	66 8b 4e 06          	mov    0x6(%esi),%cx
 170:	66 8b 7e 0a          	mov    0xa(%esi),%di
 174:	66 8b 56 0e          	mov    0xe(%esi),%dx
 178:	88 d5                	mov    %dl,%ch
 17a:	65 89 0d 5f c9 b8 01 	mov    %ecx,%gs:0x1b8c95f
 181:	00 66 5a             	add    %ah,0x5a(%esi)
 184:	ff e2                	jmp    *%edx

00000186 <_readinput>:
 186:	c8 04 00 00          	enter  $0x4,$0x0
 18a:	b4 00                	mov    $0x0,%ah
 18c:	cd 16                	int    $0x16
 18e:	b4 00                	mov    $0x0,%ah
 190:	66 67 89 04          	mov    %ax,(%si)
 194:	24 66                	and    $0x66,%al
 196:	67 8b 04             	mov    (%si),%eax
 199:	24 c9                	and    $0xc9,%al
 19b:	66 5a                	pop    %dx
 19d:	ff e2                	jmp    *%edx

0000019f <_showchar>:
 19f:	c8 00 00 00          	enter  $0x0,$0x0
 1a3:	8b 46 06             	mov    0x6(%esi),%eax
 1a6:	b4 0e                	mov    $0xe,%ah
 1a8:	b3 00                	mov    $0x0,%bl
 1aa:	cd 10                	int    $0x10
 1ac:	c9                   	leave  
 1ad:	66 5a                	pop    %dx
 1af:	ff e2                	jmp    *%edx

000001b1 <_setPoint>:
 1b1:	c8 00 00 00          	enter  $0x0,$0x0
 1b5:	53                   	push   %ebx
 1b6:	b7 00                	mov    $0x0,%bh
 1b8:	8a 77 06             	mov    0x6(%edi),%dh
 1bb:	8a 57 0a             	mov    0xa(%edi),%dl
 1be:	b4 02                	mov    $0x2,%ah
 1c0:	cd 10                	int    $0x10
 1c2:	5b                   	pop    %ebx
 1c3:	c9                   	leave  
 1c4:	66 5a                	pop    %dx
 1c6:	ff e2                	jmp    *%edx

000001c8 <_loadP>:
 1c8:	c8 00 00 00          	enter  $0x0,$0x0
 1cc:	60                   	pusha  
 1cd:	06                   	push   %es
 1ce:	1e                   	push   %ds
 1cf:	8c c8                	mov    %cs,%eax
 1d1:	8e d8                	mov    %eax,%ds
 1d3:	8b 46 0e             	mov    0xe(%esi),%eax
 1d6:	8e c0                	mov    %eax,%es
 1d8:	b2 00                	mov    $0x0,%dl
 1da:	8b 46 0a             	mov    0xa(%esi),%eax
 1dd:	b3 12                	mov    $0x12,%bl
 1df:	f6 f3                	div    %bl
 1e1:	88 e1                	mov    %ah,%cl
 1e3:	30 e4                	xor    %ah,%ah
 1e5:	b3 02                	mov    $0x2,%bl
 1e7:	f6 f3                	div    %bl
 1e9:	88 e6                	mov    %ah,%dh
 1eb:	88 c5                	mov    %al,%ch
 1ed:	8a 46 06             	mov    0x6(%esi),%al
 1f0:	bb 00 01 b4 02       	mov    $0x2b40100,%ebx
 1f5:	cd 13                	int    $0x13
 1f7:	1f                   	pop    %ds
 1f8:	07                   	pop    %es
 1f9:	61                   	popa   
 1fa:	c9                   	leave  
 1fb:	66 5a                	pop    %dx
 1fd:	ff e2                	jmp    *%edx

000001ff <_RunProgress>:
 1ff:	c8 00 00 00          	enter  $0x0,$0x0
 203:	8c c8                	mov    %cs,%eax
 205:	8e d8                	mov    %eax,%ds
 207:	8e c0                	mov    %eax,%es
 209:	8b 5e 06             	mov    0x6(%esi),%ebx
 20c:	c7 06 16 01 00 01    	movl   $0x1000116,(%esi)
 212:	89 1e                	mov    %ebx,(%esi)
 214:	18 01                	sbb    %al,(%ecx)
 216:	66 89 26             	mov    %sp,(%esi)
 219:	2a 01                	sub    (%ecx),%al
 21b:	26 ff 1e             	lcall  *%es:(%esi)
 21e:	16                   	push   %ss
 21f:	01 8c c8 8e d8 8e c0 	add    %ecx,-0x3f712772(%eax,%ecx,8)

00000220 <S>:
 220:	8c c8                	mov    %cs,%eax
 222:	8e d8                	mov    %eax,%ds
 224:	8e c0                	mov    %eax,%es
 226:	8e d0                	mov    %eax,%ss
 228:	66 8b 26             	mov    (%esi),%sp
 22b:	2a 01                	sub    (%ecx),%al
 22d:	b4 00                	mov    $0x0,%ah
 22f:	cd 16                	int    $0x16
 231:	c9                   	leave  
 232:	66 5a                	pop    %dx
 234:	ff e2                	jmp    *%edx

00000236 <_SetINT20h>:
 236:	fa                   	cli    
 237:	1e                   	push   %ds
 238:	06                   	push   %es
 239:	8c c8                	mov    %cs,%eax
 23b:	8e d8                	mov    %eax,%ds
 23d:	8e c0                	mov    %eax,%es
 23f:	8c 16                	mov    %ss,(%esi)
 241:	32 01                	xor    (%ecx),%al
 243:	8e d0                	mov    %eax,%ss
 245:	66 89 26             	mov    %sp,(%esi)
 248:	2e 01 66 8b          	add    %esp,%cs:-0x75(%esi)
 24c:	26 2a 01             	sub    %es:(%ecx),%al
 24f:	53                   	push   %ebx
 250:	51                   	push   %ecx
 251:	52                   	push   %edx
 252:	b4 01                	mov    $0x1,%ah
 254:	cd 16                	int    $0x16
 256:	5a                   	pop    %edx
 257:	59                   	pop    %ecx
 258:	5b                   	pop    %ebx
 259:	8e 16                	mov    (%esi),%ss
 25b:	32 01                	xor    (%ecx),%al
 25d:	66 8b 26             	mov    (%esi),%sp
 260:	2e 01 07             	add    %eax,%cs:(%edi)
 263:	1f                   	pop    %ds
 264:	74 0a                	je     270 <going_on>
 266:	50                   	push   %eax
 267:	b4 00                	mov    $0x0,%ah
 269:	cd 16                	int    $0x16
 26b:	58                   	pop    %eax
 26c:	fb                   	sti    
 26d:	cd 38                	int    $0x38
 26f:	cf                   	iret   

00000270 <going_on>:
 270:	fb                   	sti    
 271:	cf                   	iret   

00000272 <_SetINT08h_turn_around>:
 272:	fa                   	cli    
 273:	e8 26 04 6a 00       	call   6a069e <_end+0x69e2da>
 278:	e8 40 0a e8 92       	call   92e80cbd <_end+0x92e7e8f9>
 27d:	04 b0                	add    $0xb0,%al
 27f:	20 e6                	and    %ah,%dh
 281:	20 e6                	and    %ah,%dh
 283:	a0 fb cf 60 0f       	mov    0xf60cffb,%al

00000286 <_SetINT08h>:
 286:	60                   	pusha  
 287:	0f a8                	push   %gs
 289:	1e                   	push   %ds
 28a:	06                   	push   %es
 28b:	16                   	push   %ss
 28c:	8c c8                	mov    %cs,%eax
 28e:	8e c0                	mov    %eax,%es
 290:	8e d8                	mov    %eax,%ds
 292:	8e d0                	mov    %eax,%ss
 294:	fe 0e                	decb   (%esi)
 296:	10 01                	adc    %al,(%ecx)
 298:	75 4f                	jne    2e9 <end>

0000029a <notc>:
 29a:	80 3e 11             	cmpb   $0x11,(%esi)
 29d:	01 2d 75 07 c6 06    	add    %ebp,0x6c60775
 2a3:	11 01                	adc    %eax,(%ecx)
 2a5:	5c                   	pop    %esp
 2a6:	eb 2a                	jmp    2d2 <show>

000002a8 <changleft>:
 2a8:	80 3e 11             	cmpb   $0x11,(%esi)
 2ab:	01 5c 75 07          	add    %ebx,0x7(%ebp,%esi,2)
 2af:	c6 06 11             	movb   $0x11,(%esi)
 2b2:	01 7c eb 1c          	add    %edi,0x1c(%ebx,%ebp,8)

000002b6 <changright>:
 2b6:	80 3e 11             	cmpb   $0x11,(%esi)
 2b9:	01 7c 75 07          	add    %edi,0x7(%ebp,%esi,2)
 2bd:	c6 06 11             	movb   $0x11,(%esi)
 2c0:	01 2f                	add    %ebp,(%edi)
 2c2:	eb 0e                	jmp    2d2 <show>

000002c4 <changheng>:
 2c4:	80 3e 11             	cmpb   $0x11,(%esi)
 2c7:	01 2f                	add    %ebp,(%edi)
 2c9:	75 cf                	jne    29a <notc>
 2cb:	c6 06 11             	movb   $0x11,(%esi)
 2ce:	01 2d eb 00 b9 00    	add    %ebp,0xb900eb

000002d2 <show>:
 2d2:	b9 00 b8 8e e9       	mov    $0xe98eb800,%ecx
 2d7:	b4 09                	mov    $0x9,%ah
 2d9:	8a 26                	mov    (%esi),%ah
 2db:	36 01 a0 11 01 65 a3 	add    %esp,%ss:-0x5c9afeef(%eax)
 2e2:	8e 00                	mov    (%eax),%es
 2e4:	c6 06 10             	movb   $0x10,(%esi)
 2e7:	01 08                	add    %ecx,(%eax)

000002e9 <end>:
 2e9:	b0 20                	mov    $0x20,%al
 2eb:	e6 20                	out    %al,$0x20
 2ed:	e6 a0                	out    %al,$0xa0
 2ef:	17                   	pop    %ss
 2f0:	07                   	pop    %es
 2f1:	1f                   	pop    %ds
 2f2:	0f a9                	pop    %gs
 2f4:	61                   	popa   
 2f5:	fb                   	sti    
 2f6:	cf                   	iret   

000002f7 <_SetINT09h>:
 2f7:	fa                   	cli    
 2f8:	1e                   	push   %ds
 2f9:	06                   	push   %es
 2fa:	8c c8                	mov    %cs,%eax
 2fc:	8e d8                	mov    %eax,%ds
 2fe:	8e c0                	mov    %eax,%es
 300:	8e d0                	mov    %eax,%ss
 302:	8c 16                	mov    %ss,(%esi)
 304:	32 01                	xor    (%ecx),%al
 306:	8e d0                	mov    %eax,%ss
 308:	66 89 26             	mov    %sp,(%esi)
 30b:	2e 01 66 8b          	add    %esp,%cs:-0x75(%esi)
 30f:	26 2a 01             	sub    %es:(%ecx),%al
 312:	60                   	pusha  
 313:	b9 00 b8 8e e9       	mov    $0xe98eb800,%ecx
 318:	8a 26                	mov    (%esi),%ah
 31a:	36 01 b0 4f 65 a3 78 	add    %esi,%ss:0x78a3654f(%eax)
 321:	00 b0 55 65 a3 7a    	add    %dh,0x7aa36555(%eax)
 327:	00 b0 43 65 a3 7c    	add    %dh,0x7ca36543(%eax)
 32d:	00 b0 48 65 a3 7e    	add    %dh,0x7ea36548(%eax)
 333:	00 b0 53 65 a3 80    	add    %dh,-0x7f5c9aad(%eax)
 339:	00 b0 21 65 a3 82    	add    %dh,-0x7d5c9adf(%eax)
 33f:	00 b0 4f 65 a3 84    	add    %dh,-0x7b5c9ab1(%eax)
 345:	00 b0 55 65 a3 86    	add    %dh,-0x795c9aab(%eax)
 34b:	00 b0 43 65 a3 88    	add    %dh,-0x775c9abd(%eax)
 351:	00 b0 48 65 a3 8a    	add    %dh,-0x755c9ab8(%eax)
 357:	00 b0 21 65 a3 8c    	add    %dh,-0x735c9adf(%eax)
 35d:	00 61 80             	add    %ah,-0x80(%ecx)
 360:	fc                   	cld    
 361:	06                   	push   %es
 362:	75 06                	jne    36a <cont>
 364:	b4 01                	mov    $0x1,%ah
 366:	88 26                	mov    %ah,(%esi)
 368:	36                   	ss
 369:	01 fe                	add    %edi,%esi

0000036a <cont>:
 36a:	fe 06                	incb   (%esi)
 36c:	36 01 8c c8 8e c0 fb 	add    %ecx,%ss:-0x63043f72(%eax,%ecx,8)
 373:	9c 
 374:	26 ff 1e             	lcall  *%es:(%esi)
 377:	12 01                	adc    (%ecx),%al
 379:	8e 16                	mov    (%esi),%ss
 37b:	32 01                	xor    (%ecx),%al
 37d:	66 8b 26             	mov    (%esi),%sp
 380:	2e 01 07             	add    %eax,%cs:(%edi)
 383:	1f                   	pop    %ds
 384:	cf                   	iret   

00000385 <_SetINT33h>:
 385:	fa                   	cli    
 386:	c8 00 00 00          	enter  $0x0,$0x0
 38a:	60                   	pusha  
 38b:	1e                   	push   %ds
 38c:	0f a8                	push   %gs
 38e:	06                   	push   %es
 38f:	8c c8                	mov    %cs,%eax
 391:	8e c0                	mov    %eax,%es
 393:	8e d8                	mov    %eax,%ds
 395:	8c 16                	mov    %ss,(%esi)
 397:	32 01                	xor    (%ecx),%al
 399:	8e d0                	mov    %eax,%ss
 39b:	66 89 26             	mov    %sp,(%esi)
 39e:	2e 01 66 8b          	add    %esp,%cs:-0x75(%esi)
 3a2:	26 2a 01             	sub    %es:(%ecx),%al
 3a5:	6a 00                	push   $0x0
 3a7:	e8 78 05 8e 16       	call   168e0924 <_end+0x168de560>
 3ac:	32 01                	xor    (%ecx),%al
 3ae:	66 8b 26             	mov    (%esi),%sp
 3b1:	2e 01 07             	add    %eax,%cs:(%edi)
 3b4:	0f a9                	pop    %gs
 3b6:	1f                   	pop    %ds
 3b7:	61                   	popa   
 3b8:	fb                   	sti    
 3b9:	c9                   	leave  
 3ba:	cf                   	iret   

000003bb <_SetINT34h>:
 3bb:	fa                   	cli    
 3bc:	c8 00 00 00          	enter  $0x0,$0x0
 3c0:	60                   	pusha  
 3c1:	1e                   	push   %ds
 3c2:	0f a8                	push   %gs
 3c4:	06                   	push   %es
 3c5:	8c c8                	mov    %cs,%eax
 3c7:	8e c0                	mov    %eax,%es
 3c9:	8e d8                	mov    %eax,%ds
 3cb:	8c 16                	mov    %ss,(%esi)
 3cd:	32 01                	xor    (%ecx),%al
 3cf:	8e d0                	mov    %eax,%ss
 3d1:	66 89 26             	mov    %sp,(%esi)
 3d4:	2e 01 66 8b          	add    %esp,%cs:-0x75(%esi)
 3d8:	26 2a 01             	sub    %es:(%ecx),%al
 3db:	6a 00                	push   $0x0
 3dd:	e8 f2 05 8e 16       	call   168e09d4 <_end+0x168de610>
 3e2:	32 01                	xor    (%ecx),%al
 3e4:	66 8b 26             	mov    (%esi),%sp
 3e7:	2e 01 07             	add    %eax,%cs:(%edi)
 3ea:	0f a9                	pop    %gs
 3ec:	1f                   	pop    %ds
 3ed:	61                   	popa   
 3ee:	fb                   	sti    
 3ef:	c9                   	leave  
 3f0:	cf                   	iret   

000003f1 <_SetINT35h>:
 3f1:	60                   	pusha  
 3f2:	1e                   	push   %ds
 3f3:	0f a8                	push   %gs
 3f5:	06                   	push   %es
 3f6:	8c c8                	mov    %cs,%eax
 3f8:	8e c0                	mov    %eax,%es
 3fa:	8e d8                	mov    %eax,%ds
 3fc:	8c 16                	mov    %ss,(%esi)
 3fe:	32 01                	xor    (%ecx),%al
 400:	8e d0                	mov    %eax,%ss
 402:	66 89 26             	mov    %sp,(%esi)
 405:	2e 01 66 8b          	add    %esp,%cs:-0x75(%esi)
 409:	26 2a 01             	sub    %es:(%ecx),%al
 40c:	6a 00                	push   $0x0
 40e:	e8 a0 06 8e 16       	call   168e0ab3 <_end+0x168de6ef>
 413:	32 01                	xor    (%ecx),%al
 415:	66 8b 26             	mov    (%esi),%sp
 418:	2e 01 07             	add    %eax,%cs:(%edi)
 41b:	0f a9                	pop    %gs
 41d:	1f                   	pop    %ds
 41e:	61                   	popa   
 41f:	fb                   	sti    
 420:	cf                   	iret   

00000421 <_SetINT36h>:
 421:	60                   	pusha  
 422:	1e                   	push   %ds
 423:	0f a8                	push   %gs
 425:	06                   	push   %es
 426:	8c c8                	mov    %cs,%eax
 428:	8e c0                	mov    %eax,%es
 42a:	8e d8                	mov    %eax,%ds
 42c:	8c 16                	mov    %ss,(%esi)
 42e:	32 01                	xor    (%ecx),%al
 430:	8e d0                	mov    %eax,%ss
 432:	66 89 26             	mov    %sp,(%esi)
 435:	2e 01 66 8b          	add    %esp,%cs:-0x75(%esi)
 439:	26 2a 01             	sub    %es:(%ecx),%al
 43c:	6a 00                	push   $0x0
 43e:	e8 f6 06 8e 16       	call   168e0b39 <_end+0x168de775>
 443:	32 01                	xor    (%ecx),%al
 445:	66 8b 26             	mov    (%esi),%sp
 448:	2e 01 07             	add    %eax,%cs:(%edi)
 44b:	0f a9                	pop    %gs
 44d:	1f                   	pop    %ds
 44e:	61                   	popa   
 44f:	fb                   	sti    
 450:	cf                   	iret   

00000451 <_SetINT21h>:
 451:	c8 00 00 00          	enter  $0x0,$0x0
 455:	60                   	pusha  
 456:	1e                   	push   %ds
 457:	0f a8                	push   %gs
 459:	06                   	push   %es
 45a:	8c c8                	mov    %cs,%eax
 45c:	8e c0                	mov    %eax,%es
 45e:	8e d8                	mov    %eax,%ds
 460:	8b 46 08             	mov    0x8(%esi),%eax
 463:	80 fc 00             	cmp    $0x0,%ah
 466:	74 16                	je     47e <fn0>
 468:	80 fc 01             	cmp    $0x1,%ah
 46b:	74 21                	je     48e <fn1>
 46d:	80 fc 02             	cmp    $0x2,%ah
 470:	74 3d                	je     4af <fn2>
 472:	80 fc 03             	cmp    $0x3,%ah
 475:	74 5f                	je     4d6 <fn3>
 477:	07                   	pop    %es
 478:	0f a9                	pop    %gs
 47a:	1f                   	pop    %ds
 47b:	61                   	popa   
 47c:	c9                   	leave  
 47d:	cf                   	iret   

0000047e <fn0>:
 47e:	8b 46 0a             	mov    0xa(%esi),%eax
 481:	b4 0e                	mov    $0xe,%ah
 483:	b3 00                	mov    $0x0,%bl
 485:	cd 10                	int    $0x10
 487:	07                   	pop    %es
 488:	0f a9                	pop    %gs
 48a:	1f                   	pop    %ds
 48b:	61                   	popa   
 48c:	c9                   	leave  
 48d:	cf                   	iret   

0000048e <fn1>:
 48e:	66 83 ec 04          	sub    $0x4,%sp
 492:	b4 00                	mov    $0x0,%ah
 494:	cd 16                	int    $0x16
 496:	b4 00                	mov    $0x0,%ah
 498:	66 67 89 04          	mov    %ax,(%si)
 49c:	24 66                	and    $0x66,%al
 49e:	67 8b 04             	mov    (%si),%eax
 4a1:	24 66                	and    $0x66,%al
 4a3:	83 c4 04             	add    $0x4,%esp
 4a6:	8e e0                	mov    %eax,%fs
 4a8:	07                   	pop    %es
 4a9:	0f a9                	pop    %gs
 4ab:	1f                   	pop    %ds
 4ac:	61                   	popa   
 4ad:	c9                   	leave  
 4ae:	cf                   	iret   

000004af <fn2>:
 4af:	66 83 ec 04          	sub    $0x4,%sp
 4b3:	b4 00                	mov    $0x0,%ah
 4b5:	cd 16                	int    $0x16
 4b7:	b4 00                	mov    $0x0,%ah
 4b9:	66 67 89 04          	mov    %ax,(%si)
 4bd:	24 66                	and    $0x66,%al
 4bf:	67 8b 04             	mov    (%si),%eax
 4c2:	24 b4                	and    $0xb4,%al
 4c4:	0e                   	push   %cs
 4c5:	b3 00                	mov    $0x0,%bl
 4c7:	cd 10                	int    $0x10
 4c9:	66 83 c4 04          	add    $0x4,%sp
 4cd:	8e e0                	mov    %eax,%fs
 4cf:	07                   	pop    %es
 4d0:	0f a9                	pop    %gs
 4d2:	1f                   	pop    %ds
 4d3:	61                   	popa   
 4d4:	c9                   	leave  
 4d5:	cf                   	iret   

000004d6 <fn3>:
 4d6:	b8 03 00 cd 10       	mov    $0x10cd0003,%eax
 4db:	07                   	pop    %es
 4dc:	0f a9                	pop    %gs
 4de:	1f                   	pop    %ds
 4df:	61                   	popa   
 4e0:	c9                   	leave  
 4e1:	cf                   	iret   

000004e2 <_SetINT37h>:
 4e2:	fa                   	cli    
 4e3:	e8 7e 02 cf fa       	call   facf0766 <_end+0xfacee3a2>

000004e7 <_SetINT38h>:
 4e7:	fa                   	cli    
 4e8:	50                   	push   %eax
 4e9:	1e                   	push   %ds
 4ea:	8c c8                	mov    %cs,%eax
 4ec:	8e d8                	mov    %eax,%ds
 4ee:	6a 00                	push   $0x0
 4f0:	e8 b1 08 1f 58       	call   581f0da6 <_end+0x581ee9e2>
 4f5:	cf                   	iret   

000004f6 <_initialInt>:
 4f6:	c8 00 00 00          	enter  $0x0,$0x0
 4fa:	60                   	pusha  
 4fb:	06                   	push   %es
 4fc:	1e                   	push   %ds
 4fd:	8c c8                	mov    %cs,%eax
 4ff:	8e d8                	mov    %eax,%ds
 501:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 506:	b8 20 00 bb 04       	mov    $0x4bb0020,%eax
 50b:	00 f7                	add    %dh,%bh
 50d:	e3 89                	jecxz  498 <fn1+0xa>
 50f:	c7                   	(bad)  
 510:	b8 36 02 26 89       	mov    $0x89260236,%eax
 515:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 51a:	45                   	inc    %ebp
 51b:	02 1f                	add    (%edi),%bl
 51d:	07                   	pop    %es
 51e:	61                   	popa   
 51f:	60                   	pusha  
 520:	06                   	push   %es
 521:	1e                   	push   %ds
 522:	8c c8                	mov    %cs,%eax
 524:	8e d8                	mov    %eax,%ds
 526:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 52b:	b8 33 00 bb 04       	mov    $0x4bb0033,%eax
 530:	00 f7                	add    %dh,%bh
 532:	e3 89                	jecxz  4bd <fn2+0xe>
 534:	c7                   	(bad)  
 535:	b8 85 03 26 89       	mov    $0x89260385,%eax
 53a:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 53f:	45                   	inc    %ebp
 540:	02 1f                	add    (%edi),%bl
 542:	07                   	pop    %es
 543:	61                   	popa   
 544:	60                   	pusha  
 545:	06                   	push   %es
 546:	1e                   	push   %ds
 547:	8c c8                	mov    %cs,%eax
 549:	8e d8                	mov    %eax,%ds
 54b:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 550:	b8 34 00 bb 04       	mov    $0x4bb0034,%eax
 555:	00 f7                	add    %dh,%bh
 557:	e3 89                	jecxz  4e2 <_SetINT37h>
 559:	c7                   	(bad)  
 55a:	b8 bb 03 26 89       	mov    $0x892603bb,%eax
 55f:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 564:	45                   	inc    %ebp
 565:	02 1f                	add    (%edi),%bl
 567:	07                   	pop    %es
 568:	61                   	popa   
 569:	60                   	pusha  
 56a:	06                   	push   %es
 56b:	1e                   	push   %ds
 56c:	8c c8                	mov    %cs,%eax
 56e:	8e d8                	mov    %eax,%ds
 570:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 575:	b8 35 00 bb 04       	mov    $0x4bb0035,%eax
 57a:	00 f7                	add    %dh,%bh
 57c:	e3 89                	jecxz  507 <_initialInt+0x11>
 57e:	c7                   	(bad)  
 57f:	b8 f1 03 26 89       	mov    $0x892603f1,%eax
 584:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 589:	45                   	inc    %ebp
 58a:	02 1f                	add    (%edi),%bl
 58c:	07                   	pop    %es
 58d:	61                   	popa   
 58e:	60                   	pusha  
 58f:	06                   	push   %es
 590:	1e                   	push   %ds
 591:	8c c8                	mov    %cs,%eax
 593:	8e d8                	mov    %eax,%ds
 595:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 59a:	b8 36 00 bb 04       	mov    $0x4bb0036,%eax
 59f:	00 f7                	add    %dh,%bh
 5a1:	e3 89                	jecxz  52c <_initialInt+0x36>
 5a3:	c7                   	(bad)  
 5a4:	b8 21 04 26 89       	mov    $0x89260421,%eax
 5a9:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 5ae:	45                   	inc    %ebp
 5af:	02 1f                	add    (%edi),%bl
 5b1:	07                   	pop    %es
 5b2:	61                   	popa   
 5b3:	60                   	pusha  
 5b4:	06                   	push   %es
 5b5:	1e                   	push   %ds
 5b6:	8c c8                	mov    %cs,%eax
 5b8:	8e d8                	mov    %eax,%ds
 5ba:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 5bf:	b8 21 00 bb 04       	mov    $0x4bb0021,%eax
 5c4:	00 f7                	add    %dh,%bh
 5c6:	e3 89                	jecxz  551 <_initialInt+0x5b>
 5c8:	c7                   	(bad)  
 5c9:	b8 51 04 26 89       	mov    $0x89260451,%eax
 5ce:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 5d3:	45                   	inc    %ebp
 5d4:	02 1f                	add    (%edi),%bl
 5d6:	07                   	pop    %es
 5d7:	61                   	popa   
 5d8:	60                   	pusha  
 5d9:	06                   	push   %es
 5da:	1e                   	push   %ds
 5db:	8c c8                	mov    %cs,%eax
 5dd:	8e d8                	mov    %eax,%ds
 5df:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 5e4:	b8 37 00 bb 04       	mov    $0x4bb0037,%eax
 5e9:	00 f7                	add    %dh,%bh
 5eb:	e3 89                	jecxz  576 <_initialInt+0x80>
 5ed:	c7                   	(bad)  
 5ee:	b8 e2 04 26 89       	mov    $0x892604e2,%eax
 5f3:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 5f8:	45                   	inc    %ebp
 5f9:	02 1f                	add    (%edi),%bl
 5fb:	07                   	pop    %es
 5fc:	61                   	popa   
 5fd:	60                   	pusha  
 5fe:	06                   	push   %es
 5ff:	1e                   	push   %ds
 600:	8c c8                	mov    %cs,%eax
 602:	8e d8                	mov    %eax,%ds
 604:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 609:	b8 38 00 bb 04       	mov    $0x4bb0038,%eax
 60e:	00 f7                	add    %dh,%bh
 610:	e3 89                	jecxz  59b <_initialInt+0xa5>
 612:	c7                   	(bad)  
 613:	b8 e7 04 26 89       	mov    $0x892604e7,%eax
 618:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 61d:	45                   	inc    %ebp
 61e:	02 1f                	add    (%edi),%bl
 620:	07                   	pop    %es
 621:	61                   	popa   
 622:	c9                   	leave  
 623:	66 5a                	pop    %dx
 625:	ff e2                	jmp    *%edx

00000627 <_initialInt_09h>:
 627:	c8 00 00 00          	enter  $0x0,$0x0
 62b:	a1 24 00 a3 12       	mov    0x12a30024,%eax
 630:	01 a1 26 00 a3 14    	add    %esp,0x14a30026(%ecx)
 636:	01 60 06             	add    %esp,0x6(%eax)
 639:	1e                   	push   %ds
 63a:	8c c8                	mov    %cs,%eax
 63c:	8e d8                	mov    %eax,%ds
 63e:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 643:	b8 09 00 bb 04       	mov    $0x4bb0009,%eax
 648:	00 f7                	add    %dh,%bh
 64a:	e3 89                	jecxz  5d5 <_initialInt+0xdf>
 64c:	c7                   	(bad)  
 64d:	b8 f7 02 26 89       	mov    $0x892602f7,%eax
 652:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 657:	45                   	inc    %ebp
 658:	02 1f                	add    (%edi),%bl
 65a:	07                   	pop    %es
 65b:	61                   	popa   
 65c:	c9                   	leave  
 65d:	66 5a                	pop    %dx
 65f:	ff e2                	jmp    *%edx

00000661 <_initialInt_08h>:
 661:	c8 00 00 00          	enter  $0x0,$0x0
 665:	b0 40                	mov    $0x40,%al
 667:	e6 43                	out    %al,$0x43
 669:	b8 0b e9 e6 40       	mov    $0x40e6e90b,%eax
 66e:	88 e0                	mov    %ah,%al
 670:	e6 40                	out    %al,$0x40
 672:	60                   	pusha  
 673:	06                   	push   %es
 674:	1e                   	push   %ds
 675:	8c c8                	mov    %cs,%eax
 677:	8e d8                	mov    %eax,%ds
 679:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
 67e:	b8 08 00 bb 04       	mov    $0x4bb0008,%eax
 683:	00 f7                	add    %dh,%bh
 685:	e3 89                	jecxz  610 <_initialInt+0x11a>
 687:	c7                   	(bad)  
 688:	b8 72 02 26 89       	mov    $0x89260272,%eax
 68d:	05 8c c8 26 89       	add    $0x8926c88c,%eax
 692:	45                   	inc    %ebp
 693:	02 1f                	add    (%edi),%bl
 695:	07                   	pop    %es
 696:	61                   	popa   
 697:	c9                   	leave  
 698:	66 5a                	pop    %dx
 69a:	ff e2                	jmp    *%edx

0000069c <_save>:
 69c:	66 89 26             	mov    %sp,(%esi)
 69f:	2a 01                	sub    (%ecx),%al
 6a1:	1e                   	push   %ds
 6a2:	0e                   	push   %cs
 6a3:	1f                   	pop    %ds
 6a4:	8f 06                	popl   (%esi)
 6a6:	1a 01                	sbb    (%ecx),%al
 6a8:	8f 06                	popl   (%esi)
 6aa:	1e                   	push   %ds
 6ab:	01 66 89             	add    %esp,-0x77(%esi)
 6ae:	26 26 01 66 89       	es add %esp,%es:-0x77(%esi)
 6b3:	36 20 01             	and    %al,%ss:(%ecx)
 6b6:	66 8b 36             	mov    (%esi),%si
 6b9:	c0 23 66             	shlb   $0x66,(%ebx)
 6bc:	83 c6 2c             	add    $0x2c,%esi
 6bf:	67 8f 06 67 8f       	popl   -0x7099
 6c4:	46                   	inc    %esi
 6c5:	04 67                	add    $0x67,%al
 6c7:	c7 46 06 00 00 67 8f 	movl   $0x8f670000,0x6(%esi)
 6ce:	46                   	inc    %esi
 6cf:	08 67 c7             	or     %ah,-0x39(%edi)
 6d2:	46                   	inc    %esi
 6d3:	0a 00                	or     (%eax),%al
 6d5:	00 66 67             	add    %ah,0x67(%esi)
 6d8:	89 66 fc             	mov    %esp,-0x4(%esi)
 6db:	67 8c 56 f8          	mov    %ss,-0x8(%bp)
 6df:	8c de                	mov    %ds,%esi
 6e1:	8e d6                	mov    %esi,%ss
 6e3:	66 8b 26             	mov    (%esi),%sp
 6e6:	c0 23 66             	shlb   $0x66,(%ebx)
 6e9:	83 c4 24             	add    $0x24,%esp
 6ec:	6a 00                	push   $0x0
 6ee:	ff 36                	pushl  (%esi)
 6f0:	1a 01                	sbb    (%ecx),%al
 6f2:	6a 00                	push   $0x0
 6f4:	06                   	push   %es
 6f5:	66 55                	push   %bp
 6f7:	66 57                	push   %di
 6f9:	66 ff 36             	pushw  (%esi)
 6fc:	20 01                	and    %al,(%ecx)
 6fe:	66 52                	push   %dx
 700:	66 51                	push   %cx
 702:	66 53                	push   %bx
 704:	66 50                	push   %ax
 706:	66 8b 26             	mov    (%esi),%sp
 709:	26 01 a1 1e 01 ff e0 	add    %esp,%es:-0x1f00fee2(%ecx)

00000710 <_restart>:
 710:	66 89 26             	mov    %sp,(%esi)
 713:	26 01 66 8b          	add    %esp,%es:-0x75(%esi)
 717:	26 c0 23 66          	shlb   $0x66,%es:(%ebx)
 71b:	58                   	pop    %eax
 71c:	66 5b                	pop    %bx
 71e:	66 59                	pop    %cx
 720:	66 5a                	pop    %dx
 722:	66 5e                	pop    %si
 724:	66 5f                	pop    %di
 726:	66 5d                	pop    %bp
 728:	07                   	pop    %es
 729:	8f 06                	popl   (%esi)
 72b:	24 01                	and    $0x1,%al
 72d:	8f 06                	popl   (%esi)
 72f:	1a 01                	sbb    (%ecx),%al
 731:	8f 06                	popl   (%esi)
 733:	24 01                	and    $0x1,%al
 735:	66 89 36             	mov    %si,(%esi)
 738:	20 01                	and    %al,(%ecx)
 73a:	17                   	pop    %ss
 73b:	8f 06                	popl   (%esi)
 73d:	24 01                	and    $0x1,%al
 73f:	66 89 e6             	mov    %sp,%si
 742:	66 67 8b 26 67 ff    	mov    -0x99,%sp
 748:	76 0c                	jbe    756 <_restart+0x46>
 74a:	67 ff 76 08          	pushl  0x8(%bp)
 74e:	67 ff 76 04          	pushl  0x4(%bp)
 752:	66 8b 36             	mov    (%esi),%si
 755:	20 01                	and    %al,(%ecx)
 757:	8e 1e                	mov    (%esi),%ds
 759:	1a 01                	sbb    (%ecx),%al
 75b:	50                   	push   %eax
 75c:	b0 20                	mov    $0x20,%al
 75e:	e6 20                	out    %al,$0x20
 760:	e6 a0                	out    %al,$0xa0
 762:	58                   	pop    %eax
 763:	cf                   	iret   

00000764 <RTC_Timer>:
 764:	c8 00 00 00          	enter  $0x0,$0x0
 768:	1e                   	push   %ds
 769:	06                   	push   %es
 76a:	60                   	pusha  
 76b:	8c c8                	mov    %cs,%eax
 76d:	8e d8                	mov    %eax,%ds
 76f:	8c c8                	mov    %cs,%eax
 771:	8e c0                	mov    %eax,%es
 773:	bf 20 22 b4 02       	mov    $0x2b42220,%edi
 778:	cd 1a                	int    $0x1a
 77a:	88 e8                	mov    %ch,%al
 77c:	b4 00                	mov    $0x0,%ah
 77e:	b3 10                	mov    $0x10,%bl
 780:	f6 f3                	div    %bl
 782:	04 30                	add    $0x30,%al
 784:	88 05 b4 02 cd 1a    	mov    %al,0x1acd02b4
 78a:	88 e8                	mov    %ch,%al
 78c:	24 0f                	and    $0xf,%al
 78e:	04 30                	add    $0x30,%al
 790:	88 45 01             	mov    %al,0x1(%ebp)
 793:	c6 45 02 20          	movb   $0x20,0x2(%ebp)
 797:	c6 45 03 68          	movb   $0x68,0x3(%ebp)
 79b:	c6 45 04 20          	movb   $0x20,0x4(%ebp)
 79f:	b4 02                	mov    $0x2,%ah
 7a1:	cd 1a                	int    $0x1a
 7a3:	88 c8                	mov    %cl,%al
 7a5:	b4 00                	mov    $0x0,%ah
 7a7:	b3 10                	mov    $0x10,%bl
 7a9:	f6 f3                	div    %bl
 7ab:	04 30                	add    $0x30,%al
 7ad:	88 45 05             	mov    %al,0x5(%ebp)
 7b0:	b4 02                	mov    $0x2,%ah
 7b2:	cd 1a                	int    $0x1a
 7b4:	88 c8                	mov    %cl,%al
 7b6:	24 0f                	and    $0xf,%al
 7b8:	04 30                	add    $0x30,%al
 7ba:	88 45 06             	mov    %al,0x6(%ebp)
 7bd:	c6 45 07 20          	movb   $0x20,0x7(%ebp)
 7c1:	c6 45 08 6d          	movb   $0x6d,0x8(%ebp)
 7c5:	c6 45 09 20          	movb   $0x20,0x9(%ebp)
 7c9:	8c c8                	mov    %cs,%eax
 7cb:	8e d8                	mov    %eax,%ds
 7cd:	8e c0                	mov    %eax,%es
 7cf:	bd 37 01 8c d8       	mov    $0xd88c0137,%ebp
 7d4:	8e c0                	mov    %eax,%es
 7d6:	b9 10 00 b8 01       	mov    $0x1b80010,%ecx
 7db:	13 bb 0f 00 b6 0a    	adc    0xab6000f(%ebx),%edi
 7e1:	b2 0a                	mov    $0xa,%dl
 7e3:	cd 10                	int    $0x10
 7e5:	8c c8                	mov    %cs,%eax
 7e7:	8e d8                	mov    %eax,%ds
 7e9:	8e c0                	mov    %eax,%es
 7eb:	bd 20 22 8c d8       	mov    $0xd88c2220,%ebp
 7f0:	8e c0                	mov    %eax,%es
 7f2:	b9 0f 00 b8 01       	mov    $0x1b8000f,%ecx
 7f7:	13 bb 0f 00 b6 0a    	adc    0xab6000f(%ebx),%edi
 7fd:	b2 1e                	mov    $0x1e,%dl
 7ff:	cd 10                	int    $0x10
 801:	61                   	popa   
 802:	07                   	pop    %es
 803:	1f                   	pop    %ds
 804:	c9                   	leave  
 805:	66 5a                	pop    %dx
 807:	ff e2                	jmp    *%edx

00000809 <sys_print_for_heart>:
#include "use.h"
char ttime[20]="";
void sys_print_for_heart(char const* Messeage,int row,int colume){//need the pos
 809:	66 55                	push   %bp
 80b:	66 89 e5             	mov    %sp,%bp
 80e:	66 83 ec 0c          	sub    $0xc,%sp
	int pos = (80 * row + colume)*2;
 812:	67 66 8b 55 0c       	mov    0xc(%di),%dx
 817:	66 89 d0             	mov    %dx,%ax
 81a:	66 c1 e0 02          	shl    $0x2,%ax
 81e:	66 01 d0             	add    %dx,%ax
 821:	66 c1 e0 04          	shl    $0x4,%ax
 825:	66 89 c2             	mov    %ax,%dx
 828:	67 66 8b 45 10       	mov    0x10(%di),%ax
 82d:	66 01 d0             	add    %dx,%ax
 830:	66 01 c0             	add    %ax,%ax
 833:	67 66 89 45 fc       	mov    %ax,-0x4(%di)
	int color = 3;
 838:	67 66 c7 45 f4 03 00 	movw   $0x3,-0xc(%di)
 83f:	00 00                	add    %al,(%eax)
	int index = 0;
 841:	67 66 c7 45 f8 00 00 	movw   $0x0,-0x8(%di)
 848:	00 00                	add    %al,(%eax)
	while(Messeage[index] != '\0'){
 84a:	eb 35                	jmp    881 <sys_print_for_heart+0x78>
		_printchar(Messeage[index],pos,color);
 84c:	67 66 8b 55 f8       	mov    -0x8(%di),%dx
 851:	67 66 8b 45 08       	mov    0x8(%di),%ax
 856:	66 01 d0             	add    %dx,%ax
 859:	67 8a 00             	mov    (%bx,%si),%al
 85c:	66 0f be c0          	movsbw %al,%ax
 860:	67 66 ff 75 f4       	pushw  -0xc(%di)
 865:	67 66 ff 75 fc       	pushw  -0x4(%di)
 86a:	66 50                	push   %ax
 86c:	66 e8 f0 f8          	callw  160 <_clearscreen+0x7>
 870:	ff                   	(bad)  
 871:	ff 66 83             	jmp    *-0x7d(%esi)
 874:	c4 0c 67             	les    (%edi,%eiz,2),%ecx
		index++;
 877:	66 ff 45 f8          	incw   -0x8(%ebp)
		pos = pos + 2;
 87b:	67 66 83 45 fc 02    	addw   $0x2,-0x4(%di)
char ttime[20]="";
void sys_print_for_heart(char const* Messeage,int row,int colume){//need the pos
	int pos = (80 * row + colume)*2;
	int color = 3;
	int index = 0;
	while(Messeage[index] != '\0'){
 881:	67 66 8b 55 f8       	mov    -0x8(%di),%dx
 886:	67 66 8b 45 08       	mov    0x8(%di),%ax
 88b:	66 01 d0             	add    %dx,%ax
 88e:	67 8a 00             	mov    (%bx,%si),%al
 891:	84 c0                	test   %al,%al
 893:	75 b7                	jne    84c <sys_print_for_heart+0x43>
		_printchar(Messeage[index],pos,color);
		index++;
		pos = pos + 2;
	}
	return;
 895:	90                   	nop
}
 896:	66 c9                	leavew 
 898:	66 c3                	retw   

0000089a <sys_print_different_color>:
void sys_print_different_color(char const* Messeage,int row,int colume,int color){
 89a:	66 55                	push   %bp
 89c:	66 89 e5             	mov    %sp,%bp
 89f:	66 83 ec 08          	sub    $0x8,%sp
    int pos = (80 * row + colume)*2;
 8a3:	67 66 8b 55 0c       	mov    0xc(%di),%dx
 8a8:	66 89 d0             	mov    %dx,%ax
 8ab:	66 c1 e0 02          	shl    $0x2,%ax
 8af:	66 01 d0             	add    %dx,%ax
 8b2:	66 c1 e0 04          	shl    $0x4,%ax
 8b6:	66 89 c2             	mov    %ax,%dx
 8b9:	67 66 8b 45 10       	mov    0x10(%di),%ax
 8be:	66 01 d0             	add    %dx,%ax
 8c1:	66 01 c0             	add    %ax,%ax
 8c4:	67 66 89 45 fc       	mov    %ax,-0x4(%di)
	int index = 0;
 8c9:	67 66 c7 45 f8 00 00 	movw   $0x0,-0x8(%di)
 8d0:	00 00                	add    %al,(%eax)
	while(Messeage[index] != '\0'){
 8d2:	eb 35                	jmp    909 <sys_print_different_color+0x6f>
		_printchar(Messeage[index],pos,color);
 8d4:	67 66 8b 55 f8       	mov    -0x8(%di),%dx
 8d9:	67 66 8b 45 08       	mov    0x8(%di),%ax
 8de:	66 01 d0             	add    %dx,%ax
 8e1:	67 8a 00             	mov    (%bx,%si),%al
 8e4:	66 0f be c0          	movsbw %al,%ax
 8e8:	67 66 ff 75 14       	pushw  0x14(%di)
 8ed:	67 66 ff 75 fc       	pushw  -0x4(%di)
 8f2:	66 50                	push   %ax
 8f4:	66 e8 68 f8          	callw  160 <_clearscreen+0x7>
 8f8:	ff                   	(bad)  
 8f9:	ff 66 83             	jmp    *-0x7d(%esi)
 8fc:	c4 0c 67             	les    (%edi,%eiz,2),%ecx
		index++;
 8ff:	66 ff 45 f8          	incw   -0x8(%ebp)
		pos = pos + 2;
 903:	67 66 83 45 fc 02    	addw   $0x2,-0x4(%di)
	return;
}
void sys_print_different_color(char const* Messeage,int row,int colume,int color){
    int pos = (80 * row + colume)*2;
	int index = 0;
	while(Messeage[index] != '\0'){
 909:	67 66 8b 55 f8       	mov    -0x8(%di),%dx
 90e:	67 66 8b 45 08       	mov    0x8(%di),%ax
 913:	66 01 d0             	add    %dx,%ax
 916:	67 8a 00             	mov    (%bx,%si),%al
 919:	84 c0                	test   %al,%al
 91b:	75 b7                	jne    8d4 <sys_print_different_color+0x3a>
		_printchar(Messeage[index],pos,color);
		index++;
		pos = pos + 2;
	}
	return;
 91d:	90                   	nop
}
 91e:	66 c9                	leavew 
 920:	66 c3                	retw   

00000922 <sys_showline>:
void sys_showline(){
 922:	66 55                	push   %bp
 924:	66 89 e5             	mov    %sp,%bp
 927:	66 83 ec 18          	sub    $0x18,%sp
    char alpha = 'a';
 92b:	67 c6 45 fb 61       	movb   $0x61,-0x5(%di)
    char name[6];
    name[0] = 'c';
 930:	67 c6 45 ea 63       	movb   $0x63,-0x16(%di)
    name[1] = 'h';
 935:	67 c6 45 eb 68       	movb   $0x68,-0x15(%di)
    name[2] = 'e';
 93a:	67 c6 45 ec 65       	movb   $0x65,-0x14(%di)
    name[3] = 'n';
 93f:	67 c6 45 ed 6e       	movb   $0x6e,-0x13(%di)
    name[4] = 'h';
 944:	67 c6 45 ee 68       	movb   $0x68,-0x12(%di)
    name[5] = 'y';
 949:	67 c6 45 ef 79       	movb   $0x79,-0x11(%di)
    int color = 3;
 94e:	67 66 c7 45 f4 03 00 	movw   $0x3,-0xc(%di)
 955:	00 00                	add    %al,(%eax)
    int i = 0;
 957:	67 66 c7 45 fc 00 00 	movw   $0x0,-0x4(%di)
 95e:	00 00                	add    %al,(%eax)
    int pos = (80 * 0 + 0)*2;
 960:	67 66 c7 45 f0 00 00 	movw   $0x0,-0x10(%di)
 967:	00 00                	add    %al,(%eax)
    for(i = 0;i < 6;i ++){
 969:	67 66 c7 45 fc 00 00 	movw   $0x0,-0x4(%di)
 970:	00 00                	add    %al,(%eax)
 972:	eb 52                	jmp    9c6 <sys_showline+0xa4>
        pos = (80 * i + i) * 2;
 974:	67 66 8b 55 fc       	mov    -0x4(%di),%dx
 979:	66 89 d0             	mov    %dx,%ax
 97c:	66 c1 e0 03          	shl    $0x3,%ax
 980:	66 01 d0             	add    %dx,%ax
 983:	67 66 8d 14          	lea    (%si),%dx
 987:	c5 00                	lds    (%eax),%eax
 989:	00 00                	add    %al,(%eax)
 98b:	00 66 01             	add    %ah,0x1(%esi)
 98e:	d0 66 01             	shlb   0x1(%esi)
 991:	c0 67 66 89          	shlb   $0x89,0x66(%edi)
 995:	45                   	inc    %ebp
 996:	f0 67 66 8d 55 ea    	lock lea -0x16(%di),%dx
        _printchar(name[i],pos,color);
 99c:	67 66 8b 45 fc       	mov    -0x4(%di),%ax
 9a1:	66 01 d0             	add    %dx,%ax
 9a4:	67 8a 00             	mov    (%bx,%si),%al
 9a7:	66 0f be c0          	movsbw %al,%ax
 9ab:	67 66 ff 75 f4       	pushw  -0xc(%di)
 9b0:	67 66 ff 75 f0       	pushw  -0x10(%di)
 9b5:	66 50                	push   %ax
 9b7:	66 e8 a5 f7          	callw  160 <_clearscreen+0x7>
 9bb:	ff                   	(bad)  
 9bc:	ff 66 83             	jmp    *-0x7d(%esi)
 9bf:	c4 0c 67             	les    (%edi,%eiz,2),%ecx
    name[4] = 'h';
    name[5] = 'y';
    int color = 3;
    int i = 0;
    int pos = (80 * 0 + 0)*2;
    for(i = 0;i < 6;i ++){
 9c2:	66 ff 45 fc          	incw   -0x4(%ebp)
 9c6:	67 66 83 7d fc 05    	cmpw   $0x5,-0x4(%di)
 9cc:	7e a6                	jle    974 <sys_showline+0x52>
        pos = (80 * i + i) * 2;
        _printchar(name[i],pos,color);
    }
}
 9ce:	66 c9                	leavew 
 9d0:	66 c3                	retw   

000009d2 <sys_printname>:

void sys_printname(){
 9d2:	66 55                	push   %bp
 9d4:	66 89 e5             	mov    %sp,%bp
 9d7:	66 83 ec 1c          	sub    $0x1c,%sp
    char const* Messeage1 = "***      ***  *****     *****         ******                ****  ";
 9db:	67 66 c7 45 fc e0 0d 	movw   $0xde0,-0x4(%di)
 9e2:	00 00                	add    %al,(%eax)
    char const* Messeage2 = "***      ***   ****     ****       ***      ***          **     ** ";
 9e4:	67 66 c7 45 f8 24 0e 	movw   $0xe24,-0x8(%di)
 9eb:	00 00                	add    %al,(%eax)
    char const* Messeage3 = "***      ***    ***     ***      ***          ***       **         "; 
 9ed:	67 66 c7 45 f4 68 0e 	movw   $0xe68,-0xc(%di)
 9f4:	00 00                	add    %al,(%eax)
    char const* Messeage4 = "************       *****         ***          ***         ***      ";
 9f6:	67 66 c7 45 f0 ac 0e 	movw   $0xeac,-0x10(%di)
 9fd:	00 00                	add    %al,(%eax)
    char const* Messeage5 = "***      ***       *****         ***          ***            **    ";
 9ff:	67 66 c7 45 ec f0 0e 	movw   $0xef0,-0x14(%di)
 a06:	00 00                	add    %al,(%eax)
    char const* Messeage6 = "***      ***       *****           ***      ***          **   ***  ";
 a08:	67 66 c7 45 e8 34 0f 	movw   $0xf34,-0x18(%di)
 a0f:	00 00                	add    %al,(%eax)
    char const* Messeage7 = "***      ***       *****              ******               ****    ";
 a11:	67 66 c7 45 e4 78 0f 	movw   $0xf78,-0x1c(%di)
 a18:	00 00                	add    %al,(%eax)

    sys_print_for_heart(Messeage1,16,11);
 a1a:	66 6a 0b             	pushw  $0xb
 a1d:	66 6a 10             	pushw  $0x10
 a20:	67 66 ff 75 fc       	pushw  -0x4(%di)
 a25:	66 e8 de fd          	callw  807 <RTC_Timer+0xa3>
 a29:	ff                   	(bad)  
 a2a:	ff 66 83             	jmp    *-0x7d(%esi)
 a2d:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart(Messeage2,17,11);
 a30:	6a 0b                	push   $0xb
 a32:	66 6a 11             	pushw  $0x11
 a35:	67 66 ff 75 f8       	pushw  -0x8(%di)
 a3a:	66 e8 c9 fd          	callw  807 <RTC_Timer+0xa3>
 a3e:	ff                   	(bad)  
 a3f:	ff 66 83             	jmp    *-0x7d(%esi)
 a42:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart(Messeage3,18,11);
 a45:	6a 0b                	push   $0xb
 a47:	66 6a 12             	pushw  $0x12
 a4a:	67 66 ff 75 f4       	pushw  -0xc(%di)
 a4f:	66 e8 b4 fd          	callw  807 <RTC_Timer+0xa3>
 a53:	ff                   	(bad)  
 a54:	ff 66 83             	jmp    *-0x7d(%esi)
 a57:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart(Messeage4,19,11);
 a5a:	6a 0b                	push   $0xb
 a5c:	66 6a 13             	pushw  $0x13
 a5f:	67 66 ff 75 f0       	pushw  -0x10(%di)
 a64:	66 e8 9f fd          	callw  807 <RTC_Timer+0xa3>
 a68:	ff                   	(bad)  
 a69:	ff 66 83             	jmp    *-0x7d(%esi)
 a6c:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart(Messeage5,20,11);
 a6f:	6a 0b                	push   $0xb
 a71:	66 6a 14             	pushw  $0x14
 a74:	67 66 ff 75 ec       	pushw  -0x14(%di)
 a79:	66 e8 8a fd          	callw  807 <RTC_Timer+0xa3>
 a7d:	ff                   	(bad)  
 a7e:	ff 66 83             	jmp    *-0x7d(%esi)
 a81:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart(Messeage6,21,11);
 a84:	6a 0b                	push   $0xb
 a86:	66 6a 15             	pushw  $0x15
 a89:	67 66 ff 75 e8       	pushw  -0x18(%di)
 a8e:	66 e8 75 fd          	callw  807 <RTC_Timer+0xa3>
 a92:	ff                   	(bad)  
 a93:	ff 66 83             	jmp    *-0x7d(%esi)
 a96:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart(Messeage7,22,11);
 a99:	6a 0b                	push   $0xb
 a9b:	66 6a 16             	pushw  $0x16
 a9e:	67 66 ff 75 e4       	pushw  -0x1c(%di)
 aa3:	66 e8 60 fd          	callw  807 <RTC_Timer+0xa3>
 aa7:	ff                   	(bad)  
 aa8:	ff 66 83             	jmp    *-0x7d(%esi)
 aab:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
}
 aae:	c9                   	leave  
 aaf:	66 c3                	retw   

00000ab1 <sys_printpoem>:
void sys_printpoem(){
 ab1:	66 55                	push   %bp
 ab3:	66 89 e5             	mov    %sp,%bp
 ab6:	66 83 ec 14          	sub    $0x14,%sp
    char const* Messeage = "Comuputer Sciense";
 aba:	67 66 c7 45 f8 bc 0f 	movw   $0xfbc,-0x8(%di)
 ac1:	00 00                	add    %al,(%eax)
    char const* Messeage2 = "chenhyOS";
 ac3:	67 66 c7 45 f4 ce 0f 	movw   $0xfce,-0xc(%di)
 aca:	00 00                	add    %al,(%eax)
    int i = 1;
 acc:	67 66 c7 45 fc 01 00 	movw   $0x1,-0x4(%di)
 ad3:	00 00                	add    %al,(%eax)
    for(i = 1;i < 7;i ++){
 ad5:	67 66 c7 45 fc 01 00 	movw   $0x1,-0x4(%di)
 adc:	00 00                	add    %al,(%eax)
 ade:	eb 4b                	jmp    b2b <sys_printpoem+0x7a>
        sys_print_different_color(Messeage,15,10,i);
 ae0:	67 66 ff 75 fc       	pushw  -0x4(%di)
 ae5:	66 6a 0a             	pushw  $0xa
 ae8:	66 6a 0f             	pushw  $0xf
 aeb:	67 66 ff 75 f8       	pushw  -0x8(%di)
 af0:	66 e8 a4 fd          	callw  898 <sys_print_for_heart+0x8f>
 af4:	ff                   	(bad)  
 af5:	ff 66 83             	jmp    *-0x7d(%esi)
 af8:	c4 10                	les    (%eax),%edx
        sys_print_different_color(Messeage2,16,10,i);
 afa:	67 66 ff 75 fc       	pushw  -0x4(%di)
 aff:	66 6a 0a             	pushw  $0xa
 b02:	66 6a 10             	pushw  $0x10
 b05:	67 66 ff 75 f4       	pushw  -0xc(%di)
 b0a:	66 e8 8a fd          	callw  898 <sys_print_for_heart+0x8f>
 b0e:	ff                   	(bad)  
 b0f:	ff 66 83             	jmp    *-0x7d(%esi)
 b12:	c4 10                	les    (%eax),%edx
        int j = 0;
 b14:	67 66 c7 45 f0 00 00 	movw   $0x0,-0x10(%di)
 b1b:	00 00                	add    %al,(%eax)
        int k = 0;
 b1d:	67 66 c7 45 ec 00 00 	movw   $0x0,-0x14(%di)
 b24:	00 00                	add    %al,(%eax)
}
void sys_printpoem(){
    char const* Messeage = "Comuputer Sciense";
    char const* Messeage2 = "chenhyOS";
    int i = 1;
    for(i = 1;i < 7;i ++){
 b26:	67 66 ff 45 fc       	incw   -0x4(%di)
 b2b:	67 66 83 7d fc 06    	cmpw   $0x6,-0x4(%di)
 b31:	7e ad                	jle    ae0 <sys_printpoem+0x2f>
        sys_print_different_color(Messeage,15,10,i);
        sys_print_different_color(Messeage2,16,10,i);
        int j = 0;
        int k = 0;
    }
}
 b33:	66 c9                	leavew 
 b35:	66 c3                	retw   

00000b37 <sys_printheart>:
void sys_printheart(){
 b37:	66 55                	push   %bp
 b39:	66 89 e5             	mov    %sp,%bp
    sys_print_for_heart("     * *       * *     ",00,40);
 b3c:	66 6a 28             	pushw  $0x28
 b3f:	66 6a 00             	pushw  $0x0
 b42:	66 68 d7 0f          	pushw  $0xfd7
 b46:	00 00                	add    %al,(%eax)
 b48:	66 e8 bb fc          	callw  807 <RTC_Timer+0xa3>
 b4c:	ff                   	(bad)  
 b4d:	ff 66 83             	jmp    *-0x7d(%esi)
 b50:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart("   * * * *   * * * *    ",1,40);
 b53:	6a 28                	push   $0x28
 b55:	66 6a 01             	pushw  $0x1
 b58:	66 68 ef 0f          	pushw  $0xfef
 b5c:	00 00                	add    %al,(%eax)
 b5e:	66 e8 a5 fc          	callw  807 <RTC_Timer+0xa3>
 b62:	ff                   	(bad)  
 b63:	ff 66 83             	jmp    *-0x7d(%esi)
 b66:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart(" * * * * * * * * * * *    ",2,40);
 b69:	6a 28                	push   $0x28
 b6b:	66 6a 02             	pushw  $0x2
 b6e:	66 68 08 10          	pushw  $0x1008
 b72:	00 00                	add    %al,(%eax)
 b74:	66 e8 8f fc          	callw  807 <RTC_Timer+0xa3>
 b78:	ff                   	(bad)  
 b79:	ff 66 83             	jmp    *-0x7d(%esi)
 b7c:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart("  * * * * * * * * * *   ",3,40);
 b7f:	6a 28                	push   $0x28
 b81:	66 6a 03             	pushw  $0x3
 b84:	66 68 23 10          	pushw  $0x1023
 b88:	00 00                	add    %al,(%eax)
 b8a:	66 e8 79 fc          	callw  807 <RTC_Timer+0xa3>
 b8e:	ff                   	(bad)  
 b8f:	ff 66 83             	jmp    *-0x7d(%esi)
 b92:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart("    * * * * * * * *    ",4,40);
 b95:	6a 28                	push   $0x28
 b97:	66 6a 04             	pushw  $0x4
 b9a:	66 68 3c 10          	pushw  $0x103c
 b9e:	00 00                	add    %al,(%eax)
 ba0:	66 e8 63 fc          	callw  807 <RTC_Timer+0xa3>
 ba4:	ff                   	(bad)  
 ba5:	ff 66 83             	jmp    *-0x7d(%esi)
 ba8:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart("      * * * * * *     ",5,40);
 bab:	6a 28                	push   $0x28
 bad:	66 6a 05             	pushw  $0x5
 bb0:	66 68 54 10          	pushw  $0x1054
 bb4:	00 00                	add    %al,(%eax)
 bb6:	66 e8 4d fc          	callw  807 <RTC_Timer+0xa3>
 bba:	ff                   	(bad)  
 bbb:	ff 66 83             	jmp    *-0x7d(%esi)
 bbe:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart("        * * * *      ",6,40);
 bc1:	6a 28                	push   $0x28
 bc3:	66 6a 06             	pushw  $0x6
 bc6:	66 68 6b 10          	pushw  $0x106b
 bca:	00 00                	add    %al,(%eax)
 bcc:	66 e8 37 fc          	callw  807 <RTC_Timer+0xa3>
 bd0:	ff                   	(bad)  
 bd1:	ff 66 83             	jmp    *-0x7d(%esi)
 bd4:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    sys_print_for_heart("          * *       ",7,40);
 bd7:	6a 28                	push   $0x28
 bd9:	66 6a 07             	pushw  $0x7
 bdc:	66 68 81 10          	pushw  $0x1081
 be0:	00 00                	add    %al,(%eax)
 be2:	66 e8 21 fc          	callw  807 <RTC_Timer+0xa3>
 be6:	ff                   	(bad)  
 be7:	ff 66 83             	jmp    *-0x7d(%esi)
 bea:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
 bed:	c9                   	leave  
 bee:	66 c3                	retw   

00000bf0 <initial_PCB>:
#include "schedule.h"
#define EXIT 0
#define RUN 1
#define BLOCKED 2
void initial_PCB(int index){
 bf0:	66 55                	push   %bp
 bf2:	66 89 e5             	mov    %sp,%bp
    PCB_list[index - 1].cs = 0x2000+0x1000*(index - 1);//0代表内核，1代表用户程序
 bf5:	67 66 8b 45 08       	mov    0x8(%di),%ax
 bfa:	67 66 8d 48 ff       	lea    -0x1(%bx,%si),%cx
 bff:	67 66 8b 45 08       	mov    0x8(%di),%ax
 c04:	66 40                	inc    %ax
 c06:	66 c1 e0 0c          	shl    $0xc,%ax
 c0a:	66 89 c2             	mov    %ax,%dx
 c0d:	66 89 c8             	mov    %cx,%ax
 c10:	66 c1 e0 06          	shl    $0x6,%ax
 c14:	66 05 70 22          	add    $0x2270,%ax
 c18:	00 00                	add    %al,(%eax)
 c1a:	67 66 89 10          	mov    %dx,(%bx,%si)
    PCB_list[index - 1].ds = 0x2000+0x1000*(index - 1);//0代表内核，1代表用户程序
 c1e:	67 66 8b 45 08       	mov    0x8(%di),%ax
 c23:	67 66 8d 48 ff       	lea    -0x1(%bx,%si),%cx
 c28:	67 66 8b 45 08       	mov    0x8(%di),%ax
 c2d:	66 40                	inc    %ax
 c2f:	66 c1 e0 0c          	shl    $0xc,%ax
 c33:	66 89 c2             	mov    %ax,%dx
 c36:	66 89 c8             	mov    %cx,%ax
 c39:	66 c1 e0 06          	shl    $0x6,%ax
 c3d:	66 05 60 22          	add    $0x2260,%ax
 c41:	00 00                	add    %al,(%eax)
 c43:	67 66 89 10          	mov    %dx,(%bx,%si)
    PCB_list[index - 1].ip = 0x100;
 c47:	67 66 8b 45 08       	mov    0x8(%di),%ax
 c4c:	66 48                	dec    %ax
 c4e:	66 c1 e0 06          	shl    $0x6,%ax
 c52:	66 05 60 22          	add    $0x2260,%ax
 c56:	00 00                	add    %al,(%eax)
 c58:	67 66 c7 40 0c 00 01 	movw   $0x100,0xc(%bx,%si)
 c5f:	00 00                	add    %al,(%eax)
    PCB_list[index - 1].prg_status = RUN;
 c61:	67 66 8b 45 08       	mov    0x8(%di),%ax
 c66:	66 48                	dec    %ax
 c68:	66 c1 e0 06          	shl    $0x6,%ax
 c6c:	66 05 70 22          	add    $0x2270,%ax
 c70:	00 00                	add    %al,(%eax)
 c72:	67 66 c7 40 08 01 00 	movw   $0x1,0x8(%bx,%si)
 c79:	00 00                	add    %al,(%eax)
    PCB_list[index - 1].eflags = 512;
 c7b:	67 66 8b 45 08       	mov    0x8(%di),%ax
 c80:	66 48                	dec    %ax
 c82:	66 c1 e0 06          	shl    $0x6,%ax
 c86:	66 05 70 22          	add    $0x2270,%ax
 c8a:	00 00                	add    %al,(%eax)
 c8c:	67 66 c7 40 04 00 02 	movw   $0x200,0x4(%bx,%si)
 c93:	00 00                	add    %al,(%eax)
    PCB_list[index - 1].prg_name = '1'+index - 1;
 c95:	67 66 8b 45 08       	mov    0x8(%di),%ax
 c9a:	67 66 8d 50 ff       	lea    -0x1(%bx,%si),%dx
 c9f:	67 66 8b 45 08       	mov    0x8(%di),%ax
 ca4:	66 83 c0 30          	add    $0x30,%ax
 ca8:	66 c1 e2 06          	shl    $0x6,%dx
 cac:	66 81 c2 70 22       	add    $0x2270,%dx
 cb1:	00 00                	add    %al,(%eax)
 cb3:	67 88 42 0c          	mov    %al,0xc(%bp,%si)
}
 cb7:	66 5d                	pop    %bp
 cb9:	66 c3                	retw   

00000cbb <sys_schedule>:

void sys_schedule(){
 cbb:	66 55                	push   %bp
 cbd:	66 89 e5             	mov    %sp,%bp
 cc0:	66 83 ec 08          	sub    $0x8,%sp
    int i,j;
    if(PCB_list  == _CurrentProg ){
 cc4:	66 a1 c0 23 66 3d    	mov    0x3d6623c0,%ax
 cca:	40                   	inc    %eax
 ccb:	22 00                	and    (%eax),%al
 ccd:	00 75 0b             	add    %dh,0xb(%ebp)
        i = 0;
 cd0:	67 66 c7 45 fc 00 00 	movw   $0x0,-0x4(%di)
 cd7:	00 00                	add    %al,(%eax)
 cd9:	eb 65                	jmp    d40 <sys_schedule+0x85>
    }
    else if(PCB_list + 1 == _CurrentProg){
 cdb:	66 a1 c0 23 66 3d    	mov    0x3d6623c0,%ax
 ce1:	80 22 00             	andb   $0x0,(%edx)
 ce4:	00 75 0b             	add    %dh,0xb(%ebp)
        i = 1;
 ce7:	67 66 c7 45 fc 01 00 	movw   $0x1,-0x4(%di)
 cee:	00 00                	add    %al,(%eax)
 cf0:	eb 4e                	jmp    d40 <sys_schedule+0x85>
    }
    else if(PCB_list + 2 == _CurrentProg){
 cf2:	66 a1 c0 23 66 3d    	mov    0x3d6623c0,%ax
 cf8:	c0 22 00             	shlb   $0x0,(%edx)
 cfb:	00 75 0b             	add    %dh,0xb(%ebp)
        i = 2;
 cfe:	67 66 c7 45 fc 02 00 	movw   $0x2,-0x4(%di)
 d05:	00 00                	add    %al,(%eax)
 d07:	eb 37                	jmp    d40 <sys_schedule+0x85>
    }
    else if(PCB_list + 3 == _CurrentProg){
 d09:	66 a1 c0 23 66 3d    	mov    0x3d6623c0,%ax
 d0f:	00 23                	add    %ah,(%ebx)
 d11:	00 00                	add    %al,(%eax)
 d13:	75 0b                	jne    d20 <sys_schedule+0x65>
        i = 3;
 d15:	67 66 c7 45 fc 03 00 	movw   $0x3,-0x4(%di)
 d1c:	00 00                	add    %al,(%eax)
 d1e:	eb 20                	jmp    d40 <sys_schedule+0x85>
    }
    else if(PCB_list + 4 == _CurrentProg){
 d20:	66 a1 c0 23 66 3d    	mov    0x3d6623c0,%ax
 d26:	40                   	inc    %eax
 d27:	23 00                	and    (%eax),%eax
 d29:	00 75 0b             	add    %dh,0xb(%ebp)
        i = 3;
 d2c:	67 66 c7 45 fc 03 00 	movw   $0x3,-0x4(%di)
 d33:	00 00                	add    %al,(%eax)
 d35:	eb 09                	jmp    d40 <sys_schedule+0x85>
    }
    else{
        i = 3;
 d37:	67 66 c7 45 fc 03 00 	movw   $0x3,-0x4(%di)
 d3e:	00 00                	add    %al,(%eax)
    }
    for(j = 0;j < 4;j ++){
 d40:	67 66 c7 45 f8 00 00 	movw   $0x0,-0x8(%di)
 d47:	00 00                	add    %al,(%eax)
 d49:	eb 43                	jmp    d8e <sys_schedule+0xd3>
        if(i == 3){
 d4b:	67 66 83 7d fc 03    	cmpw   $0x3,-0x4(%di)
 d51:	75 14                	jne    d67 <sys_schedule+0xac>
            _CurrentProg = PCB_list;
 d53:	66 c7 06 c0 23       	movw   $0x23c0,(%esi)
 d58:	40                   	inc    %eax
 d59:	22 00                	and    (%eax),%al
 d5b:	00 67 66             	add    %ah,0x66(%edi)
            i = 0;
 d5e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 d65:	eb 11                	jmp    d78 <sys_schedule+0xbd>
        }
        else{
            _CurrentProg ++;
 d67:	66 a1 c0 23 66 83    	mov    0x836623c0,%ax
 d6d:	c0 40 66 a3          	rolb   $0xa3,0x66(%eax)
 d71:	c0 23 67             	shlb   $0x67,(%ebx)
            i ++;
 d74:	66 ff 45 fc          	incw   -0x4(%ebp)
        }
        if(_CurrentProg -> prg_status == RUN){
 d78:	66 a1 c0 23 67 66    	mov    0x666723c0,%ax
 d7e:	8b 40 38             	mov    0x38(%eax),%eax
 d81:	66 83 f8 01          	cmp    $0x1,%ax
 d85:	75 02                	jne    d89 <sys_schedule+0xce>
            return;
 d87:	eb 17                	jmp    da0 <sys_schedule+0xe5>
        i = 3;
    }
    else{
        i = 3;
    }
    for(j = 0;j < 4;j ++){
 d89:	67 66 ff 45 f8       	incw   -0x8(%di)
 d8e:	67 66 83 7d f8 03    	cmpw   $0x3,-0x8(%di)
 d94:	7e b5                	jle    d4b <sys_schedule+0x90>
        }
        if(_CurrentProg -> prg_status == RUN){
            return;
        }
    }
    _CurrentProg = PCB_list + 5;
 d96:	66 c7 06 c0 23       	movw   $0x23c0,(%esi)
 d9b:	80 23 00             	andb   $0x0,(%ebx)
 d9e:	00 90 66 c9 66 c3    	add    %dl,-0x3c99369a(%eax)

00000da4 <sys_exit>:
    return;
}
void sys_exit(){
 da4:	66 55                	push   %bp
 da6:	66 89 e5             	mov    %sp,%bp
    _CurrentProg -> prg_status = EXIT;
 da9:	66 a1 c0 23 67 66    	mov    0x666723c0,%ax
 daf:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%eax)
}
 db6:	66 5d                	pop    %bp
 db8:	66 c3                	retw   

00000dba <sys_bolocked>:
struct PCB* sys_bolocked(){
 dba:	66 55                	push   %bp
 dbc:	66 89 e5             	mov    %sp,%bp
    _CurrentProg -> prg_status = BLOCKED;
 dbf:	66 a1 c0 23 67 66    	mov    0x666723c0,%ax
 dc5:	c7 40 38 02 00 00 00 	movl   $0x2,0x38(%eax)
    sys_schedule();
 dcc:	66 e8 e9 fe          	callw  cb9 <initial_PCB+0xc9>
 dd0:	ff                   	(bad)  
 dd1:	ff 66 5d             	jmp    *0x5d(%esi)
}
 dd4:	66 c3                	retw   

00000dd6 <sys_run>:
void sys_run(){
 dd6:	66 55                	push   %bp
 dd8:	66 89 e5             	mov    %sp,%bp

 ddb:	66 5d                	pop    %bp
 ddd:	66 c3                	retw   
