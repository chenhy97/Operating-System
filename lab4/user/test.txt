
test.elf:     file format elf32-i386


Disassembly of section .text:

0000c000 <test>:
    c000:	8c c8                	mov    %cs,%eax
    c002:	8e d8                	mov    %eax,%ds
    c004:	8e d0                	mov    %eax,%ss
    c006:	b8 00 01 89 c4       	mov    $0xc4890100,%eax
    c00b:	31 c0                	xor    %eax,%eax
    c00d:	b4 04                	mov    $0x4,%ah
    c00f:	50                   	push   %eax
    c010:	cd 21                	int    $0x21
    c012:	b4 03                	mov    $0x3,%ah
    c014:	50                   	push   %eax
    c015:	cd 21                	int    $0x21
    c017:	cd 33                	int    $0x33
    c019:	eb fe                	jmp    c019 <test+0x19>
    c01b:	66 90                	xchg   %ax,%ax
    c01d:	66 90                	xchg   %ax,%ax
    c01f:	90                   	nop

0000c020 <Pg_Segment>:
	...

0000c022 <Pg_Offset>:
    c022:	00 c0                	add    %al,%al

0000c024 <info_Segment>:
	...

0000c026 <info_Offset>:
    c026:	00 b1 08 00 00 00    	add    %dh,0x8(%ecx)

0000c028 <count>:
    c028:	08 00                	or     %al,(%eax)

0000c029 <x>:
	...

0000c02b <y>:
	...

0000c02d <xdul>:
    c02d:	01 00                	add    %eax,(%eax)

0000c02f <ydul>:
    c02f:	01 00                	add    %eax,(%eax)

0000c031 <alpha>:
    c031:	2d 00 b8 03 00       	sub    $0x3b800,%eax

0000c033 <_clearscreen>:
    c033:	b8 03 00 cd 10       	mov    $0x10cd0003,%eax
    c038:	66 5a                	pop    %dx
    c03a:	ff e2                	jmp    *%edx

0000c03c <_printchar>:
    c03c:	c8 00 00 00          	enter  $0x0,$0x0
    c040:	b8 00 b8 8e e8       	mov    $0xe88eb800,%eax
    c045:	57                   	push   %edi
    c046:	66 8b 4e 06          	mov    0x6(%esi),%cx
    c04a:	66 8b 7e 0a          	mov    0xa(%esi),%di
    c04e:	66 8b 56 0e          	mov    0xe(%esi),%dx
    c052:	88 d5                	mov    %dl,%ch
    c054:	65 89 0d 5f c9 b8 01 	mov    %ecx,%gs:0x1b8c95f
    c05b:	00 66 5a             	add    %ah,0x5a(%esi)
    c05e:	ff e2                	jmp    *%edx

0000c060 <_readinput>:
    c060:	c8 04 00 00          	enter  $0x4,$0x0
    c064:	b4 00                	mov    $0x0,%ah
    c066:	cd 16                	int    $0x16
    c068:	b4 00                	mov    $0x0,%ah
    c06a:	66 67 89 04          	mov    %ax,(%si)
    c06e:	24 66                	and    $0x66,%al
    c070:	67 8b 04             	mov    (%si),%eax
    c073:	24 c9                	and    $0xc9,%al
    c075:	66 5a                	pop    %dx
    c077:	ff e2                	jmp    *%edx

0000c079 <_showchar>:
    c079:	c8 00 00 00          	enter  $0x0,$0x0
    c07d:	8b 46 06             	mov    0x6(%esi),%eax
    c080:	b4 0e                	mov    $0xe,%ah
    c082:	b3 00                	mov    $0x0,%bl
    c084:	cd 10                	int    $0x10
    c086:	c9                   	leave  
    c087:	66 5a                	pop    %dx
    c089:	ff e2                	jmp    *%edx

0000c08b <_setPoint>:
    c08b:	c8 00 00 00          	enter  $0x0,$0x0
    c08f:	53                   	push   %ebx
    c090:	b7 00                	mov    $0x0,%bh
    c092:	8a 77 06             	mov    0x6(%edi),%dh
    c095:	8a 57 0a             	mov    0xa(%edi),%dl
    c098:	b4 02                	mov    $0x2,%ah
    c09a:	cd 10                	int    $0x10
    c09c:	5b                   	pop    %ebx
    c09d:	c9                   	leave  
    c09e:	66 5a                	pop    %dx
    c0a0:	ff e2                	jmp    *%edx

0000c0a2 <_loadP>:
    c0a2:	c8 00 00 00          	enter  $0x0,$0x0
    c0a6:	60                   	pusha  
    c0a7:	06                   	push   %es
    c0a8:	1e                   	push   %ds
    c0a9:	52                   	push   %edx
    c0aa:	8c c8                	mov    %cs,%eax
    c0ac:	8e d8                	mov    %eax,%ds
    c0ae:	8e c0                	mov    %eax,%es
    c0b0:	b2 00                	mov    $0x0,%dl
    c0b2:	8b 46 0a             	mov    0xa(%esi),%eax
    c0b5:	b3 12                	mov    $0x12,%bl
    c0b7:	f6 f3                	div    %bl
    c0b9:	88 e1                	mov    %ah,%cl
    c0bb:	30 e4                	xor    %ah,%ah
    c0bd:	b3 02                	mov    $0x2,%bl
    c0bf:	f6 f3                	div    %bl
    c0c1:	88 e6                	mov    %ah,%dh
    c0c3:	88 c5                	mov    %al,%ch
    c0c5:	8a 46 06             	mov    0x6(%esi),%al
    c0c8:	8b 5e 0e             	mov    0xe(%esi),%ebx
    c0cb:	b4 02                	mov    $0x2,%ah
    c0cd:	cd 13                	int    $0x13
    c0cf:	5a                   	pop    %edx
    c0d0:	1f                   	pop    %ds
    c0d1:	07                   	pop    %es
    c0d2:	61                   	popa   
    c0d3:	c9                   	leave  
    c0d4:	66 5a                	pop    %dx
    c0d6:	ff e2                	jmp    *%edx

0000c0d8 <_RunProgress>:
    c0d8:	c8 00 00 00          	enter  $0x0,$0x0
    c0dc:	06                   	push   %es
    c0dd:	60                   	pusha  
    c0de:	06                   	push   %es
    c0df:	8c c8                	mov    %cs,%eax
    c0e1:	8e d8                	mov    %eax,%ds
    c0e3:	8e c0                	mov    %eax,%es
    c0e5:	8b 5e 06             	mov    0x6(%esi),%ebx
    c0e8:	ff d3                	call   *%ebx
    c0ea:	07                   	pop    %es
    c0eb:	61                   	popa   

0000c0ec <S>:
    c0ec:	b4 00                	mov    $0x0,%ah
    c0ee:	cd 16                	int    $0x16
    c0f0:	b8 00 04 50 cd       	mov    $0xcd500400,%eax
    c0f5:	21 07                	and    %eax,(%edi)
    c0f7:	c9                   	leave  
    c0f8:	66 5a                	pop    %dx
    c0fa:	ff e2                	jmp    *%edx

0000c0fc <_SetINT20h>:
    c0fc:	53                   	push   %ebx
    c0fd:	51                   	push   %ecx
    c0fe:	52                   	push   %edx
    c0ff:	b4 01                	mov    $0x1,%ah
    c101:	cd 16                	int    $0x16
    c103:	5a                   	pop    %edx
    c104:	59                   	pop    %ecx
    c105:	5b                   	pop    %ebx
    c106:	75 e4                	jne    c0ec <S>
    c108:	cf                   	iret   

0000c109 <_SetINT08h>:
    c109:	60                   	pusha  
    c10a:	52                   	push   %edx
    c10b:	0f a8                	push   %gs
    c10d:	fe 0e                	decb   (%esi)
    c10f:	28 c0                	sub    %al,%al
    c111:	75 4b                	jne    c15e <end>

0000c113 <notc>:
    c113:	83 3e 31             	cmpl   $0x31,(%esi)
    c116:	c0 2d 75 08 c7 06 31 	shrb   $0x31,0x6c70875
    c11d:	c0 5c 00 eb 2d       	rcrb   $0x2d,-0x15(%eax,%eax,1)

0000c122 <changleft>:
    c122:	83 3e 31             	cmpl   $0x31,(%esi)
    c125:	c0 5c 75 08 c7       	rcrb   $0xc7,0x8(%ebp,%esi,2)
    c12a:	06                   	push   %es
    c12b:	31 c0                	xor    %eax,%eax
    c12d:	7c 00                	jl     c12f <changleft+0xd>
    c12f:	eb 1e                	jmp    c14f <show>

0000c131 <changright>:
    c131:	83 3e 31             	cmpl   $0x31,(%esi)
    c134:	c0 7c 75 08 c7       	sarb   $0xc7,0x8(%ebp,%esi,2)
    c139:	06                   	push   %es
    c13a:	31 c0                	xor    %eax,%eax
    c13c:	2f                   	das    
    c13d:	00 eb                	add    %ch,%bl
    c13f:	0f 83 3e 31 c0 2f    	jae    2fc0f283 <__bss_start+0x2fc01cf3>

0000c140 <changheng>:
    c140:	83 3e 31             	cmpl   $0x31,(%esi)
    c143:	c0 2f 75             	shrb   $0x75,(%edi)
    c146:	cc                   	int3   
    c147:	c7 06 31 c0 2d 00    	movl   $0x2dc031,(%esi)
    c14d:	eb 00                	jmp    c14f <show>

0000c14f <show>:
    c14f:	ff 36                	pushl  (%esi)
    c151:	31 c0                	xor    %eax,%eax
    c153:	6a 00                	push   $0x0
    c155:	e8 e6 01 58 c6       	call   c658c340 <__bss_start+0xc657edb0>
    c15a:	06                   	push   %es
    c15b:	28 c0                	sub    %al,%al
    c15d:	08 b0 20 e6 20 e6    	or     %dh,-0x19df19e0(%eax)

0000c15e <end>:
    c15e:	b0 20                	mov    $0x20,%al
    c160:	e6 20                	out    %al,$0x20
    c162:	e6 a0                	out    %al,$0xa0
    c164:	0f a9                	pop    %gs
    c166:	5a                   	pop    %edx
    c167:	61                   	popa   
    c168:	cf                   	iret   

0000c169 <_SetINT33h>:
    c169:	60                   	pusha  
    c16a:	1e                   	push   %ds
    c16b:	0f a8                	push   %gs
    c16d:	6a 00                	push   $0x0
    c16f:	e8 11 02 0f a9       	call   a90fc385 <__bss_start+0xa90eedf5>
    c174:	1f                   	pop    %ds
    c175:	61                   	popa   
    c176:	cf                   	iret   

0000c177 <_SetINT34h>:
    c177:	60                   	pusha  
    c178:	1e                   	push   %ds
    c179:	0f a8                	push   %gs
    c17b:	6a 00                	push   $0x0
    c17d:	e8 44 03 0f a9       	call   a90fc4c6 <__bss_start+0xa90eef36>
    c182:	1f                   	pop    %ds
    c183:	61                   	popa   
    c184:	cf                   	iret   

0000c185 <_SetINT21h>:
    c185:	c8 00 00 00          	enter  $0x0,$0x0
    c189:	60                   	pusha  
    c18a:	8b 46 08             	mov    0x8(%esi),%eax
    c18d:	80 fc 00             	cmp    $0x0,%ah
    c190:	74 17                	je     c1a9 <showc>
    c192:	80 fc 01             	cmp    $0x1,%ah
    c195:	74 1e                	je     c1b5 <inputc>
    c197:	80 fc 02             	cmp    $0x2,%ah
    c19a:	74 36                	je     c1d2 <input_and_readc>
    c19c:	80 fc 03             	cmp    $0x3,%ah
    c19f:	74 54                	je     c1f5 <clr>
    c1a1:	80 fc 04             	cmp    $0x4,%ah
    c1a4:	74 57                	je     c1fd <ouch>
    c1a6:	61                   	popa   
    c1a7:	c9                   	leave  
    c1a8:	cf                   	iret   

0000c1a9 <showc>:
    c1a9:	8b 46 0a             	mov    0xa(%esi),%eax
    c1ac:	b4 0e                	mov    $0xe,%ah
    c1ae:	b3 00                	mov    $0x0,%bl
    c1b0:	cd 10                	int    $0x10
    c1b2:	61                   	popa   
    c1b3:	c9                   	leave  
    c1b4:	cf                   	iret   

0000c1b5 <inputc>:
    c1b5:	66 83 ec 04          	sub    $0x4,%sp
    c1b9:	b4 00                	mov    $0x0,%ah
    c1bb:	cd 16                	int    $0x16
    c1bd:	b4 00                	mov    $0x0,%ah
    c1bf:	66 67 89 04          	mov    %ax,(%si)
    c1c3:	24 66                	and    $0x66,%al
    c1c5:	67 8b 04             	mov    (%si),%eax
    c1c8:	24 66                	and    $0x66,%al
    c1ca:	83 c4 04             	add    $0x4,%esp
    c1cd:	8e e0                	mov    %eax,%fs
    c1cf:	61                   	popa   
    c1d0:	c9                   	leave  
    c1d1:	cf                   	iret   

0000c1d2 <input_and_readc>:
    c1d2:	66 83 ec 04          	sub    $0x4,%sp
    c1d6:	b4 00                	mov    $0x0,%ah
    c1d8:	cd 16                	int    $0x16
    c1da:	b4 00                	mov    $0x0,%ah
    c1dc:	66 67 89 04          	mov    %ax,(%si)
    c1e0:	24 66                	and    $0x66,%al
    c1e2:	67 8b 04             	mov    (%si),%eax
    c1e5:	24 b4                	and    $0xb4,%al
    c1e7:	0e                   	push   %cs
    c1e8:	b3 00                	mov    $0x0,%bl
    c1ea:	cd 10                	int    $0x10
    c1ec:	66 83 c4 04          	add    $0x4,%sp
    c1f0:	8e e0                	mov    %eax,%fs
    c1f2:	61                   	popa   
    c1f3:	c9                   	leave  
    c1f4:	cf                   	iret   

0000c1f5 <clr>:
    c1f5:	b8 03 00 cd 10       	mov    $0x10cd0003,%eax
    c1fa:	61                   	popa   
    c1fb:	c9                   	leave  
    c1fc:	cf                   	iret   

0000c1fd <ouch>:
    c1fd:	06                   	push   %es
    c1fe:	b8 00 b8 8e c0       	mov    $0xc08eb800,%eax
    c203:	bf 28 00 57 66       	mov    $0x66570028,%edi
    c208:	b9 6f 00 00 00       	mov    $0x6f,%ecx
    c20d:	b5 07                	mov    $0x7,%ch
    c20f:	66 bf 28 00          	mov    $0x28,%di
    c213:	00 00                	add    %al,(%eax)
    c215:	26 89 0d 66 b9 75 00 	mov    %ecx,%es:0x75b966
    c21c:	00 00                	add    %al,(%eax)
    c21e:	b5 07                	mov    $0x7,%ch
    c220:	66 bf 2a 00          	mov    $0x2a,%di
    c224:	00 00                	add    %al,(%eax)
    c226:	26 89 0d 66 b9 63 00 	mov    %ecx,%es:0x63b966
    c22d:	00 00                	add    %al,(%eax)
    c22f:	b5 07                	mov    $0x7,%ch
    c231:	66 bf 2c 00          	mov    $0x2c,%di
    c235:	00 00                	add    %al,(%eax)
    c237:	26 89 0d 66 b9 68 00 	mov    %ecx,%es:0x68b966
    c23e:	00 00                	add    %al,(%eax)
    c240:	b5 07                	mov    $0x7,%ch
    c242:	66 bf 2e 00          	mov    $0x2e,%di
    c246:	00 00                	add    %al,(%eax)
    c248:	26 89 0d 5f 07 61 c9 	mov    %ecx,%es:0xc961075f
    c24f:	cf                   	iret   

0000c250 <_initialInt>:
    c250:	c8 00 00 00          	enter  $0x0,$0x0
    c254:	60                   	pusha  
    c255:	06                   	push   %es
    c256:	1e                   	push   %ds
    c257:	8c c8                	mov    %cs,%eax
    c259:	8e d8                	mov    %eax,%ds
    c25b:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c260:	b8 20 00 bb 04       	mov    $0x4bb0020,%eax
    c265:	00 f7                	add    %dh,%bh
    c267:	e3 89                	jecxz  c1f2 <input_and_readc+0x20>
    c269:	c7                   	(bad)  
    c26a:	b8 fc c0 26 89       	mov    $0x8926c0fc,%eax
    c26f:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c274:	45                   	inc    %ebp
    c275:	02 1f                	add    (%edi),%bl
    c277:	07                   	pop    %es
    c278:	61                   	popa   
    c279:	60                   	pusha  
    c27a:	06                   	push   %es
    c27b:	1e                   	push   %ds
    c27c:	8c c8                	mov    %cs,%eax
    c27e:	8e d8                	mov    %eax,%ds
    c280:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c285:	b8 08 00 bb 04       	mov    $0x4bb0008,%eax
    c28a:	00 f7                	add    %dh,%bh
    c28c:	e3 89                	jecxz  c217 <ouch+0x1a>
    c28e:	c7                   	(bad)  
    c28f:	b8 09 c1 26 89       	mov    $0x8926c109,%eax
    c294:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c299:	45                   	inc    %ebp
    c29a:	02 1f                	add    (%edi),%bl
    c29c:	07                   	pop    %es
    c29d:	61                   	popa   
    c29e:	60                   	pusha  
    c29f:	06                   	push   %es
    c2a0:	1e                   	push   %ds
    c2a1:	8c c8                	mov    %cs,%eax
    c2a3:	8e d8                	mov    %eax,%ds
    c2a5:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c2aa:	b8 33 00 bb 04       	mov    $0x4bb0033,%eax
    c2af:	00 f7                	add    %dh,%bh
    c2b1:	e3 89                	jecxz  c23c <ouch+0x3f>
    c2b3:	c7                   	(bad)  
    c2b4:	b8 69 c1 26 89       	mov    $0x8926c169,%eax
    c2b9:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c2be:	45                   	inc    %ebp
    c2bf:	02 1f                	add    (%edi),%bl
    c2c1:	07                   	pop    %es
    c2c2:	61                   	popa   
    c2c3:	60                   	pusha  
    c2c4:	06                   	push   %es
    c2c5:	1e                   	push   %ds
    c2c6:	8c c8                	mov    %cs,%eax
    c2c8:	8e d8                	mov    %eax,%ds
    c2ca:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c2cf:	b8 34 00 bb 04       	mov    $0x4bb0034,%eax
    c2d4:	00 f7                	add    %dh,%bh
    c2d6:	e3 89                	jecxz  c261 <_initialInt+0x11>
    c2d8:	c7                   	(bad)  
    c2d9:	b8 77 c1 26 89       	mov    $0x8926c177,%eax
    c2de:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c2e3:	45                   	inc    %ebp
    c2e4:	02 1f                	add    (%edi),%bl
    c2e6:	07                   	pop    %es
    c2e7:	61                   	popa   
    c2e8:	60                   	pusha  
    c2e9:	06                   	push   %es
    c2ea:	1e                   	push   %ds
    c2eb:	8c c8                	mov    %cs,%eax
    c2ed:	8e d8                	mov    %eax,%ds
    c2ef:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c2f4:	b8 21 00 bb 04       	mov    $0x4bb0021,%eax
    c2f9:	00 f7                	add    %dh,%bh
    c2fb:	e3 89                	jecxz  c286 <_initialInt+0x36>
    c2fd:	c7                   	(bad)  
    c2fe:	b8 85 c1 26 89       	mov    $0x8926c185,%eax
    c303:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c308:	45                   	inc    %ebp
    c309:	02 1f                	add    (%edi),%bl
    c30b:	07                   	pop    %es
    c30c:	61                   	popa   
    c30d:	c9                   	leave  
    c30e:	66 5a                	pop    %dx
    c310:	ff e2                	jmp    *%edx

0000c312 <_test>:
    c312:	60                   	pusha  
    c313:	50                   	push   %eax
    c314:	53                   	push   %ebx
    c315:	51                   	push   %ecx
    c316:	52                   	push   %edx
    c317:	0f a8                	push   %gs
    c319:	a1 29 c0 50 6a       	mov    0x6a50c029,%eax
    c31e:	00 ff                	add    %bh,%bh
    c320:	06                   	push   %es
    c321:	29 c0                	sub    %eax,%eax
    c323:	a1 2b c0 50 6a       	mov    0x6a50c02b,%eax
    c328:	00 ff                	add    %bh,%bh
    c32a:	06                   	push   %es
    c32b:	2b c0                	sub    %eax,%eax
    c32d:	e8 0e 00 66 58       	call   5866c340 <__bss_start+0x5865edb0>
    c332:	58                   	pop    %eax
    c333:	0f a9                	pop    %gs
    c335:	5a                   	pop    %edx
    c336:	59                   	pop    %ecx
    c337:	5b                   	pop    %ebx
    c338:	58                   	pop    %eax
    c339:	61                   	popa   
    c33a:	66 5a                	pop    %dx
    c33c:	ff e2                	jmp    *%edx

0000c33e <printcircle>:
#include "use.h"
void printcircle(char alpha){
    c33e:	66 55                	push   %bp
    c340:	66 89 e5             	mov    %sp,%bp
    c343:	66 83 ec 0c          	sub    $0xc,%sp
    c347:	67 66 8b 45 08       	mov    0x8(%di),%ax
    c34c:	67 88 45 f4          	mov    %al,-0xc(%di)
    int pos = (80 * 15 + 20)*2;
    c350:	67 66 c7 45 fc 88 09 	movw   $0x988,-0x4(%di)
    c357:	00 00                	add    %al,(%eax)
    int color = 3;
    c359:	67 66 c7 45 f8 03 00 	movw   $0x3,-0x8(%di)
    c360:	00 00                	add    %al,(%eax)
	_printchar(alpha,pos,color);
    c362:	67 66 0f be 45 f4    	movsbw -0xc(%di),%ax
    c368:	67 66 ff 75 f8       	pushw  -0x8(%di)
    c36d:	67 66 ff 75 fc       	pushw  -0x4(%di)
    c372:	66 50                	push   %ax
    c374:	66 e8 c2 fc          	callw  c03a <_clearscreen+0x7>
    c378:	ff                   	(bad)  
    c379:	ff 66 83             	jmp    *-0x7d(%esi)
    c37c:	c4 0c 90             	les    (%eax,%edx,4),%ecx
    return;
}
    c37f:	66 c9                	leavew 
    c381:	66 c3                	retw   

0000c383 <showline>:
void showline(){
    c383:	66 55                	push   %bp
    c385:	66 89 e5             	mov    %sp,%bp
    c388:	66 83 ec 18          	sub    $0x18,%sp
    char alpha = 'a';
    c38c:	67 c6 45 fb 61       	movb   $0x61,-0x5(%di)
    char name[6];
    name[0] = 'c';
    c391:	67 c6 45 ea 63       	movb   $0x63,-0x16(%di)
    name[1] = 'h';
    c396:	67 c6 45 eb 68       	movb   $0x68,-0x15(%di)
    name[2] = 'e';
    c39b:	67 c6 45 ec 65       	movb   $0x65,-0x14(%di)
    name[3] = 'n';
    c3a0:	67 c6 45 ed 6e       	movb   $0x6e,-0x13(%di)
    name[4] = 'h';
    c3a5:	67 c6 45 ee 68       	movb   $0x68,-0x12(%di)
    name[5] = 'y';
    c3aa:	67 c6 45 ef 79       	movb   $0x79,-0x11(%di)
    int color = 3;
    c3af:	67 66 c7 45 f4 03 00 	movw   $0x3,-0xc(%di)
    c3b6:	00 00                	add    %al,(%eax)
    int i = 0;
    c3b8:	67 66 c7 45 fc 00 00 	movw   $0x0,-0x4(%di)
    c3bf:	00 00                	add    %al,(%eax)
    int pos = (80 * 0 + 0)*2;
    c3c1:	67 66 c7 45 f0 00 00 	movw   $0x0,-0x10(%di)
    c3c8:	00 00                	add    %al,(%eax)
    for(i = 0;i < 6;i ++){
    c3ca:	67 66 c7 45 fc 00 00 	movw   $0x0,-0x4(%di)
    c3d1:	00 00                	add    %al,(%eax)
    c3d3:	eb 52                	jmp    c427 <showline+0xa4>
        pos = (80 * i + i) * 2;
    c3d5:	67 66 8b 55 fc       	mov    -0x4(%di),%dx
    c3da:	66 89 d0             	mov    %dx,%ax
    c3dd:	66 c1 e0 03          	shl    $0x3,%ax
    c3e1:	66 01 d0             	add    %dx,%ax
    c3e4:	67 66 8d 14          	lea    (%si),%dx
    c3e8:	c5 00                	lds    (%eax),%eax
    c3ea:	00 00                	add    %al,(%eax)
    c3ec:	00 66 01             	add    %ah,0x1(%esi)
    c3ef:	d0 66 01             	shlb   0x1(%esi)
    c3f2:	c0 67 66 89          	shlb   $0x89,0x66(%edi)
    c3f6:	45                   	inc    %ebp
    c3f7:	f0 67 66 8d 55 ea    	lock lea -0x16(%di),%dx
        _printchar(name[i],pos,color);
    c3fd:	67 66 8b 45 fc       	mov    -0x4(%di),%ax
    c402:	66 01 d0             	add    %dx,%ax
    c405:	67 8a 00             	mov    (%bx,%si),%al
    c408:	66 0f be c0          	movsbw %al,%ax
    c40c:	67 66 ff 75 f4       	pushw  -0xc(%di)
    c411:	67 66 ff 75 f0       	pushw  -0x10(%di)
    c416:	66 50                	push   %ax
    c418:	66 e8 1e fc          	callw  c03a <_clearscreen+0x7>
    c41c:	ff                   	(bad)  
    c41d:	ff 66 83             	jmp    *-0x7d(%esi)
    c420:	c4 0c 67             	les    (%edi,%eiz,2),%ecx
    name[4] = 'h';
    name[5] = 'y';
    int color = 3;
    int i = 0;
    int pos = (80 * 0 + 0)*2;
    for(i = 0;i < 6;i ++){
    c423:	66 ff 45 fc          	incw   -0x4(%ebp)
    c427:	67 66 83 7d fc 05    	cmpw   $0x5,-0x4(%di)
    c42d:	7e a6                	jle    c3d5 <showline+0x52>
        pos = (80 * i + i) * 2;
        _printchar(name[i],pos,color);
    }
}
    c42f:	66 c9                	leavew 
    c431:	66 c3                	retw   

0000c433 <printpos>:
void printpos(char const* Messeage,int row,int colume){//need the pos
    c433:	66 55                	push   %bp
    c435:	66 89 e5             	mov    %sp,%bp
    c438:	66 83 ec 0c          	sub    $0xc,%sp
	int pos = (80 * row + colume)*2;
    c43c:	67 66 8b 55 0c       	mov    0xc(%di),%dx
    c441:	66 89 d0             	mov    %dx,%ax
    c444:	66 c1 e0 02          	shl    $0x2,%ax
    c448:	66 01 d0             	add    %dx,%ax
    c44b:	66 c1 e0 04          	shl    $0x4,%ax
    c44f:	66 89 c2             	mov    %ax,%dx
    c452:	67 66 8b 45 10       	mov    0x10(%di),%ax
    c457:	66 01 d0             	add    %dx,%ax
    c45a:	66 01 c0             	add    %ax,%ax
    c45d:	67 66 89 45 fc       	mov    %ax,-0x4(%di)
	int color = 3;
    c462:	67 66 c7 45 f4 03 00 	movw   $0x3,-0xc(%di)
    c469:	00 00                	add    %al,(%eax)
	int index = 0;
    c46b:	67 66 c7 45 f8 00 00 	movw   $0x0,-0x8(%di)
    c472:	00 00                	add    %al,(%eax)
	while(Messeage[index] != '\0'){
    c474:	eb 35                	jmp    c4ab <printpos+0x78>
		_printchar(Messeage[index],pos,color);
    c476:	67 66 8b 55 f8       	mov    -0x8(%di),%dx
    c47b:	67 66 8b 45 08       	mov    0x8(%di),%ax
    c480:	66 01 d0             	add    %dx,%ax
    c483:	67 8a 00             	mov    (%bx,%si),%al
    c486:	66 0f be c0          	movsbw %al,%ax
    c48a:	67 66 ff 75 f4       	pushw  -0xc(%di)
    c48f:	67 66 ff 75 fc       	pushw  -0x4(%di)
    c494:	66 50                	push   %ax
    c496:	66 e8 a0 fb          	callw  c03a <_clearscreen+0x7>
    c49a:	ff                   	(bad)  
    c49b:	ff 66 83             	jmp    *-0x7d(%esi)
    c49e:	c4 0c 67             	les    (%edi,%eiz,2),%ecx
		index++;
    c4a1:	66 ff 45 f8          	incw   -0x8(%ebp)
		pos = pos + 2;
    c4a5:	67 66 83 45 fc 02    	addw   $0x2,-0x4(%di)
}
void printpos(char const* Messeage,int row,int colume){//need the pos
	int pos = (80 * row + colume)*2;
	int color = 3;
	int index = 0;
	while(Messeage[index] != '\0'){
    c4ab:	67 66 8b 55 f8       	mov    -0x8(%di),%dx
    c4b0:	67 66 8b 45 08       	mov    0x8(%di),%ax
    c4b5:	66 01 d0             	add    %dx,%ax
    c4b8:	67 8a 00             	mov    (%bx,%si),%al
    c4bb:	84 c0                	test   %al,%al
    c4bd:	75 b7                	jne    c476 <printpos+0x43>
		_printchar(Messeage[index],pos,color);
		index++;
		pos = pos + 2;
	}
	return;
    c4bf:	90                   	nop
}
    c4c0:	66 c9                	leavew 
    c4c2:	66 c3                	retw   

0000c4c4 <printname>:
void printname(){
    c4c4:	66 55                	push   %bp
    c4c6:	66 89 e5             	mov    %sp,%bp
    c4c9:	66 83 ec 04          	sub    $0x4,%sp
    char const* Message = "chenhy";
    c4cd:	67 66 c7 45 fc ef c4 	movw   $0xc4ef,-0x4(%di)
    c4d4:	00 00                	add    %al,(%eax)
    printpos(Message,15,10);
    c4d6:	66 6a 0a             	pushw  $0xa
    c4d9:	66 6a 0f             	pushw  $0xf
    c4dc:	67 66 ff 75 fc       	pushw  -0x4(%di)
    c4e1:	66 e8 4c ff          	callw  c431 <showline+0xae>
    c4e5:	ff                   	(bad)  
    c4e6:	ff 66 83             	jmp    *-0x7d(%esi)
    c4e9:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
}
    c4ec:	c9                   	leave  
    c4ed:	66 c3                	retw   
