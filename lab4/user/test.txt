
test.elf:     file format elf32-i386


Disassembly of section .text:

0000c000 <test>:
    c000:	8c c8                	mov    %cs,%eax
    c002:	8e d8                	mov    %eax,%ds
    c004:	8e d0                	mov    %eax,%ss
    c006:	b8 00 01 89 c4       	mov    $0xc4890100,%eax
    c00b:	cd 36                	int    $0x36
    c00d:	b4 02                	mov    $0x2,%ah
    c00f:	50                   	push   %eax
    c010:	cd 21                	int    $0x21
    c012:	cd 35                	int    $0x35
    c014:	eb fe                	jmp    c014 <test+0x14>
    c016:	66 90                	xchg   %ax,%ax
    c018:	66 90                	xchg   %ax,%ax
    c01a:	66 90                	xchg   %ax,%ax
    c01c:	66 90                	xchg   %ax,%ax
    c01e:	66 90                	xchg   %ax,%ax

0000c020 <Pg_Segment>:
	...

0000c022 <Pg_Offset>:
    c022:	00 c0                	add    %al,%al

0000c024 <info_Segment>:
	...

0000c026 <info_Offset>:
    c026:	00 b1 08 00 00 00    	add    %dh,0x8(%ecx)

0000c028 <count>:
    c028:	08 00                	or     %al,(%eax)

0000c029 <x>:
	...

0000c02b <y>:
	...

0000c02d <xdul>:
    c02d:	01 00                	add    %eax,(%eax)

0000c02f <ydul>:
    c02f:	01 00                	add    %eax,(%eax)

0000c031 <alpha>:
    c031:	2d 00 00 00 00       	sub    $0x0,%eax

0000c032 <int_09_saved>:
    c032:	00 00                	add    %al,(%eax)
	...

0000c036 <color>:
    c036:	01 b8 03 00 cd 10    	add    %edi,0x10cd0003(%eax)

0000c037 <_clearscreen>:
    c037:	b8 03 00 cd 10       	mov    $0x10cd0003,%eax
    c03c:	66 5a                	pop    %dx
    c03e:	ff e2                	jmp    *%edx

0000c040 <_printchar>:
    c040:	c8 00 00 00          	enter  $0x0,$0x0
    c044:	b8 00 b8 8e e8       	mov    $0xe88eb800,%eax
    c049:	57                   	push   %edi
    c04a:	66 8b 4e 06          	mov    0x6(%esi),%cx
    c04e:	66 8b 7e 0a          	mov    0xa(%esi),%di
    c052:	66 8b 56 0e          	mov    0xe(%esi),%dx
    c056:	88 d5                	mov    %dl,%ch
    c058:	65 89 0d 5f c9 b8 01 	mov    %ecx,%gs:0x1b8c95f
    c05f:	00 66 5a             	add    %ah,0x5a(%esi)
    c062:	ff e2                	jmp    *%edx

0000c064 <_readinput>:
    c064:	c8 04 00 00          	enter  $0x4,$0x0
    c068:	b4 00                	mov    $0x0,%ah
    c06a:	cd 16                	int    $0x16
    c06c:	b4 00                	mov    $0x0,%ah
    c06e:	66 67 89 04          	mov    %ax,(%si)
    c072:	24 66                	and    $0x66,%al
    c074:	67 8b 04             	mov    (%si),%eax
    c077:	24 c9                	and    $0xc9,%al
    c079:	66 5a                	pop    %dx
    c07b:	ff e2                	jmp    *%edx

0000c07d <_showchar>:
    c07d:	c8 00 00 00          	enter  $0x0,$0x0
    c081:	8b 46 06             	mov    0x6(%esi),%eax
    c084:	b4 0e                	mov    $0xe,%ah
    c086:	b3 00                	mov    $0x0,%bl
    c088:	cd 10                	int    $0x10
    c08a:	c9                   	leave  
    c08b:	66 5a                	pop    %dx
    c08d:	ff e2                	jmp    *%edx

0000c08f <_setPoint>:
    c08f:	c8 00 00 00          	enter  $0x0,$0x0
    c093:	53                   	push   %ebx
    c094:	b7 00                	mov    $0x0,%bh
    c096:	8a 77 06             	mov    0x6(%edi),%dh
    c099:	8a 57 0a             	mov    0xa(%edi),%dl
    c09c:	b4 02                	mov    $0x2,%ah
    c09e:	cd 10                	int    $0x10
    c0a0:	5b                   	pop    %ebx
    c0a1:	c9                   	leave  
    c0a2:	66 5a                	pop    %dx
    c0a4:	ff e2                	jmp    *%edx

0000c0a6 <_loadP>:
    c0a6:	c8 00 00 00          	enter  $0x0,$0x0
    c0aa:	60                   	pusha  
    c0ab:	06                   	push   %es
    c0ac:	1e                   	push   %ds
    c0ad:	52                   	push   %edx
    c0ae:	8c c8                	mov    %cs,%eax
    c0b0:	8e d8                	mov    %eax,%ds
    c0b2:	8e c0                	mov    %eax,%es
    c0b4:	b2 00                	mov    $0x0,%dl
    c0b6:	8b 46 0a             	mov    0xa(%esi),%eax
    c0b9:	b3 12                	mov    $0x12,%bl
    c0bb:	f6 f3                	div    %bl
    c0bd:	88 e1                	mov    %ah,%cl
    c0bf:	30 e4                	xor    %ah,%ah
    c0c1:	b3 02                	mov    $0x2,%bl
    c0c3:	f6 f3                	div    %bl
    c0c5:	88 e6                	mov    %ah,%dh
    c0c7:	88 c5                	mov    %al,%ch
    c0c9:	8a 46 06             	mov    0x6(%esi),%al
    c0cc:	8b 5e 0e             	mov    0xe(%esi),%ebx
    c0cf:	b4 02                	mov    $0x2,%ah
    c0d1:	cd 13                	int    $0x13
    c0d3:	5a                   	pop    %edx
    c0d4:	1f                   	pop    %ds
    c0d5:	07                   	pop    %es
    c0d6:	61                   	popa   
    c0d7:	c9                   	leave  
    c0d8:	66 5a                	pop    %dx
    c0da:	ff e2                	jmp    *%edx

0000c0dc <_RunProgress>:
    c0dc:	c8 00 00 00          	enter  $0x0,$0x0
    c0e0:	06                   	push   %es
    c0e1:	60                   	pusha  
    c0e2:	06                   	push   %es
    c0e3:	8c c8                	mov    %cs,%eax
    c0e5:	8e d8                	mov    %eax,%ds
    c0e7:	8e c0                	mov    %eax,%es
    c0e9:	8b 5e 06             	mov    0x6(%esi),%ebx
    c0ec:	ff d3                	call   *%ebx
    c0ee:	07                   	pop    %es
    c0ef:	61                   	popa   

0000c0f0 <S>:
    c0f0:	b4 00                	mov    $0x0,%ah
    c0f2:	cd 16                	int    $0x16
    c0f4:	b8 00 04 50 cd       	mov    $0xcd500400,%eax
    c0f9:	21 07                	and    %eax,(%edi)
    c0fb:	c9                   	leave  
    c0fc:	66 5a                	pop    %dx
    c0fe:	ff e2                	jmp    *%edx

0000c100 <_SetINT20h>:
    c100:	53                   	push   %ebx
    c101:	51                   	push   %ecx
    c102:	52                   	push   %edx
    c103:	b4 01                	mov    $0x1,%ah
    c105:	cd 16                	int    $0x16
    c107:	5a                   	pop    %edx
    c108:	59                   	pop    %ecx
    c109:	5b                   	pop    %ebx
    c10a:	75 e4                	jne    c0f0 <S>
    c10c:	cf                   	iret   

0000c10d <_SetINT08h>:
    c10d:	60                   	pusha  
    c10e:	0f a8                	push   %gs
    c110:	fe 0e                	decb   (%esi)
    c112:	28 c0                	sub    %al,%al
    c114:	75 4f                	jne    c165 <end>

0000c116 <notc>:
    c116:	80 3e 31             	cmpb   $0x31,(%esi)
    c119:	c0 2d 75 07 c6 06 31 	shrb   $0x31,0x6c60775
    c120:	c0 5c eb 2a 80       	rcrb   $0x80,0x2a(%ebx,%ebp,8)

0000c124 <changleft>:
    c124:	80 3e 31             	cmpb   $0x31,(%esi)
    c127:	c0 5c 75 07 c6       	rcrb   $0xc6,0x7(%ebp,%esi,2)
    c12c:	06                   	push   %es
    c12d:	31 c0                	xor    %eax,%eax
    c12f:	7c eb                	jl     c11c <notc+0x6>
    c131:	1c 80                	sbb    $0x80,%al

0000c132 <changright>:
    c132:	80 3e 31             	cmpb   $0x31,(%esi)
    c135:	c0 7c 75 07 c6       	sarb   $0xc6,0x7(%ebp,%esi,2)
    c13a:	06                   	push   %es
    c13b:	31 c0                	xor    %eax,%eax
    c13d:	2f                   	das    
    c13e:	eb 0e                	jmp    c14e <show>

0000c140 <changheng>:
    c140:	80 3e 31             	cmpb   $0x31,(%esi)
    c143:	c0 2f 75             	shrb   $0x75,(%edi)
    c146:	cf                   	iret   
    c147:	c6 06 31             	movb   $0x31,(%esi)
    c14a:	c0 2d eb 00 b9 00 b8 	shrb   $0xb8,0xb900eb

0000c14e <show>:
    c14e:	b9 00 b8 8e e9       	mov    $0xe98eb800,%ecx
    c153:	b4 09                	mov    $0x9,%ah
    c155:	8a 26                	mov    (%esi),%ah
    c157:	36 c0 a0 31 c0 65 a3 	shlb   $0xdc,%ss:-0x5c9a3fcf(%eax)
    c15e:	dc 
    c15f:	00 c6                	add    %al,%dh
    c161:	06                   	push   %es
    c162:	28 c0                	sub    %al,%al
    c164:	08 b0 20 e6 20 e6    	or     %dh,-0x19df19e0(%eax)

0000c165 <end>:
    c165:	b0 20                	mov    $0x20,%al
    c167:	e6 20                	out    %al,$0x20
    c169:	e6 a0                	out    %al,$0xa0
    c16b:	0f a9                	pop    %gs
    c16d:	61                   	popa   
    c16e:	fb                   	sti    
    c16f:	cf                   	iret   

0000c170 <_SetINT09h>:
    c170:	60                   	pusha  
    c171:	b9 00 b8 8e e9       	mov    $0xe98eb800,%ecx
    c176:	8a 26                	mov    (%esi),%ah
    c178:	36                   	ss
    c179:	c0                   	(bad)  
    c17a:	b0 4f                	mov    $0x4f,%al
    c17c:	65 a3 0a 00 b0 55    	mov    %eax,%gs:0x55b0000a
    c182:	65 a3 0c 00 b0 43    	mov    %eax,%gs:0x43b0000c
    c188:	65 a3 0e 00 b0 48    	mov    %eax,%gs:0x48b0000e
    c18e:	65 a3 10 00 b0 53    	mov    %eax,%gs:0x53b00010
    c194:	65 a3 12 00 b0 21    	mov    %eax,%gs:0x21b00012
    c19a:	65 a3 14 00 b0 4f    	mov    %eax,%gs:0x4fb00014
    c1a0:	65 a3 16 00 b0 55    	mov    %eax,%gs:0x55b00016
    c1a6:	65 a3 18 00 b0 43    	mov    %eax,%gs:0x43b00018
    c1ac:	65 a3 1a 00 b0 48    	mov    %eax,%gs:0x48b0001a
    c1b2:	65 a3 1c 00 b0 21    	mov    %eax,%gs:0x21b0001c
    c1b8:	65 a3 1e 00 61 80    	mov    %eax,%gs:0x8061001e
    c1be:	fc                   	cld    
    c1bf:	06                   	push   %es
    c1c0:	75 08                	jne    c1ca <cont>
    c1c2:	50                   	push   %eax
    c1c3:	b4 01                	mov    $0x1,%ah
    c1c5:	88 26                	mov    %ah,(%esi)
    c1c7:	36 c0 58 fe 06       	rcrb   $0x6,%ss:-0x2(%eax)

0000c1ca <cont>:
    c1ca:	fe 06                	incb   (%esi)
    c1cc:	36 c0 06 50          	rolb   $0x50,%ss:(%esi)
    c1d0:	8c c8                	mov    %cs,%eax
    c1d2:	8e c0                	mov    %eax,%es
    c1d4:	fb                   	sti    
    c1d5:	9c                   	pushf  
    c1d6:	26 ff 1e             	lcall  *%es:(%esi)
    c1d9:	32 c0                	xor    %al,%al
    c1db:	58                   	pop    %eax
    c1dc:	07                   	pop    %es
    c1dd:	cf                   	iret   

0000c1de <_SetINT33h>:
    c1de:	60                   	pusha  
    c1df:	1e                   	push   %ds
    c1e0:	0f a8                	push   %gs
    c1e2:	6a 00                	push   $0x0
    c1e4:	e8 0e 03 0f a9       	call   a90fc4f7 <_end+0xa90eec93>
    c1e9:	1f                   	pop    %ds
    c1ea:	61                   	popa   
    c1eb:	fb                   	sti    
    c1ec:	cf                   	iret   

0000c1ed <_SetINT34h>:
    c1ed:	60                   	pusha  
    c1ee:	1e                   	push   %ds
    c1ef:	0f a8                	push   %gs
    c1f1:	6a 00                	push   $0x0
    c1f3:	e8 af 03 0f a9       	call   a90fc5a7 <_end+0xa90eed43>
    c1f8:	1f                   	pop    %ds
    c1f9:	61                   	popa   
    c1fa:	fb                   	sti    
    c1fb:	cf                   	iret   

0000c1fc <_SetINT35h>:
    c1fc:	60                   	pusha  
    c1fd:	1e                   	push   %ds
    c1fe:	0f a8                	push   %gs
    c200:	6a 00                	push   $0x0
    c202:	e8 cb 03 0f a9       	call   a90fc5d2 <_end+0xa90eed6e>
    c207:	1f                   	pop    %ds
    c208:	61                   	popa   
    c209:	fb                   	sti    
    c20a:	cf                   	iret   

0000c20b <_SetINT36h>:
    c20b:	60                   	pusha  
    c20c:	1e                   	push   %ds
    c20d:	0f a8                	push   %gs
    c20f:	6a 00                	push   $0x0
    c211:	e8 e7 03 0f a9       	call   a90fc5fd <_end+0xa90eed99>
    c216:	1f                   	pop    %ds
    c217:	61                   	popa   
    c218:	fb                   	sti    
    c219:	cf                   	iret   

0000c21a <_SetINT21h>:
    c21a:	c8 00 00 00          	enter  $0x0,$0x0
    c21e:	60                   	pusha  
    c21f:	8b 46 08             	mov    0x8(%esi),%eax
    c222:	80 fc 00             	cmp    $0x0,%ah
    c225:	74 12                	je     c239 <fn0>
    c227:	80 fc 01             	cmp    $0x1,%ah
    c22a:	74 19                	je     c245 <fn1>
    c22c:	80 fc 02             	cmp    $0x2,%ah
    c22f:	74 31                	je     c262 <fn2>
    c231:	80 fc 03             	cmp    $0x3,%ah
    c234:	74 4f                	je     c285 <fn3>
    c236:	61                   	popa   
    c237:	c9                   	leave  
    c238:	cf                   	iret   

0000c239 <fn0>:
    c239:	8b 46 0a             	mov    0xa(%esi),%eax
    c23c:	b4 0e                	mov    $0xe,%ah
    c23e:	b3 00                	mov    $0x0,%bl
    c240:	cd 10                	int    $0x10
    c242:	61                   	popa   
    c243:	c9                   	leave  
    c244:	cf                   	iret   

0000c245 <fn1>:
    c245:	66 83 ec 04          	sub    $0x4,%sp
    c249:	b4 00                	mov    $0x0,%ah
    c24b:	cd 16                	int    $0x16
    c24d:	b4 00                	mov    $0x0,%ah
    c24f:	66 67 89 04          	mov    %ax,(%si)
    c253:	24 66                	and    $0x66,%al
    c255:	67 8b 04             	mov    (%si),%eax
    c258:	24 66                	and    $0x66,%al
    c25a:	83 c4 04             	add    $0x4,%esp
    c25d:	8e e0                	mov    %eax,%fs
    c25f:	61                   	popa   
    c260:	c9                   	leave  
    c261:	cf                   	iret   

0000c262 <fn2>:
    c262:	66 83 ec 04          	sub    $0x4,%sp
    c266:	b4 00                	mov    $0x0,%ah
    c268:	cd 16                	int    $0x16
    c26a:	b4 00                	mov    $0x0,%ah
    c26c:	66 67 89 04          	mov    %ax,(%si)
    c270:	24 66                	and    $0x66,%al
    c272:	67 8b 04             	mov    (%si),%eax
    c275:	24 b4                	and    $0xb4,%al
    c277:	0e                   	push   %cs
    c278:	b3 00                	mov    $0x0,%bl
    c27a:	cd 10                	int    $0x10
    c27c:	66 83 c4 04          	add    $0x4,%sp
    c280:	8e e0                	mov    %eax,%fs
    c282:	61                   	popa   
    c283:	c9                   	leave  
    c284:	cf                   	iret   

0000c285 <fn3>:
    c285:	b8 03 00 cd 10       	mov    $0x10cd0003,%eax
    c28a:	61                   	popa   
    c28b:	c9                   	leave  
    c28c:	cf                   	iret   

0000c28d <_initialInt>:
    c28d:	c8 00 00 00          	enter  $0x0,$0x0
    c291:	60                   	pusha  
    c292:	06                   	push   %es
    c293:	1e                   	push   %ds
    c294:	8c c8                	mov    %cs,%eax
    c296:	8e d8                	mov    %eax,%ds
    c298:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c29d:	b8 20 00 bb 04       	mov    $0x4bb0020,%eax
    c2a2:	00 f7                	add    %dh,%bh
    c2a4:	e3 89                	jecxz  c22f <_SetINT21h+0x15>
    c2a6:	c7                   	(bad)  
    c2a7:	b8 00 c1 26 89       	mov    $0x8926c100,%eax
    c2ac:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c2b1:	45                   	inc    %ebp
    c2b2:	02 1f                	add    (%edi),%bl
    c2b4:	07                   	pop    %es
    c2b5:	61                   	popa   
    c2b6:	60                   	pusha  
    c2b7:	06                   	push   %es
    c2b8:	1e                   	push   %ds
    c2b9:	8c c8                	mov    %cs,%eax
    c2bb:	8e d8                	mov    %eax,%ds
    c2bd:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c2c2:	b8 08 00 bb 04       	mov    $0x4bb0008,%eax
    c2c7:	00 f7                	add    %dh,%bh
    c2c9:	e3 89                	jecxz  c254 <fn1+0xf>
    c2cb:	c7                   	(bad)  
    c2cc:	b8 0d c1 26 89       	mov    $0x8926c10d,%eax
    c2d1:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c2d6:	45                   	inc    %ebp
    c2d7:	02 1f                	add    (%edi),%bl
    c2d9:	07                   	pop    %es
    c2da:	61                   	popa   
    c2db:	60                   	pusha  
    c2dc:	06                   	push   %es
    c2dd:	1e                   	push   %ds
    c2de:	8c c8                	mov    %cs,%eax
    c2e0:	8e d8                	mov    %eax,%ds
    c2e2:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c2e7:	b8 33 00 bb 04       	mov    $0x4bb0033,%eax
    c2ec:	00 f7                	add    %dh,%bh
    c2ee:	e3 89                	jecxz  c279 <fn2+0x17>
    c2f0:	c7                   	(bad)  
    c2f1:	b8 de c1 26 89       	mov    $0x8926c1de,%eax
    c2f6:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c2fb:	45                   	inc    %ebp
    c2fc:	02 1f                	add    (%edi),%bl
    c2fe:	07                   	pop    %es
    c2ff:	61                   	popa   
    c300:	60                   	pusha  
    c301:	06                   	push   %es
    c302:	1e                   	push   %ds
    c303:	8c c8                	mov    %cs,%eax
    c305:	8e d8                	mov    %eax,%ds
    c307:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c30c:	b8 34 00 bb 04       	mov    $0x4bb0034,%eax
    c311:	00 f7                	add    %dh,%bh
    c313:	e3 89                	jecxz  c29e <_initialInt+0x11>
    c315:	c7                   	(bad)  
    c316:	b8 ed c1 26 89       	mov    $0x8926c1ed,%eax
    c31b:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c320:	45                   	inc    %ebp
    c321:	02 1f                	add    (%edi),%bl
    c323:	07                   	pop    %es
    c324:	61                   	popa   
    c325:	60                   	pusha  
    c326:	06                   	push   %es
    c327:	1e                   	push   %ds
    c328:	8c c8                	mov    %cs,%eax
    c32a:	8e d8                	mov    %eax,%ds
    c32c:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c331:	b8 35 00 bb 04       	mov    $0x4bb0035,%eax
    c336:	00 f7                	add    %dh,%bh
    c338:	e3 89                	jecxz  c2c3 <_initialInt+0x36>
    c33a:	c7                   	(bad)  
    c33b:	b8 fc c1 26 89       	mov    $0x8926c1fc,%eax
    c340:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c345:	45                   	inc    %ebp
    c346:	02 1f                	add    (%edi),%bl
    c348:	07                   	pop    %es
    c349:	61                   	popa   
    c34a:	60                   	pusha  
    c34b:	06                   	push   %es
    c34c:	1e                   	push   %ds
    c34d:	8c c8                	mov    %cs,%eax
    c34f:	8e d8                	mov    %eax,%ds
    c351:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c356:	b8 36 00 bb 04       	mov    $0x4bb0036,%eax
    c35b:	00 f7                	add    %dh,%bh
    c35d:	e3 89                	jecxz  c2e8 <_initialInt+0x5b>
    c35f:	c7                   	(bad)  
    c360:	b8 0b c2 26 89       	mov    $0x8926c20b,%eax
    c365:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c36a:	45                   	inc    %ebp
    c36b:	02 1f                	add    (%edi),%bl
    c36d:	07                   	pop    %es
    c36e:	61                   	popa   
    c36f:	60                   	pusha  
    c370:	06                   	push   %es
    c371:	1e                   	push   %ds
    c372:	8c c8                	mov    %cs,%eax
    c374:	8e d8                	mov    %eax,%ds
    c376:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c37b:	b8 21 00 bb 04       	mov    $0x4bb0021,%eax
    c380:	00 f7                	add    %dh,%bh
    c382:	e3 89                	jecxz  c30d <_initialInt+0x80>
    c384:	c7                   	(bad)  
    c385:	b8 1a c2 26 89       	mov    $0x8926c21a,%eax
    c38a:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c38f:	45                   	inc    %ebp
    c390:	02 1f                	add    (%edi),%bl
    c392:	07                   	pop    %es
    c393:	61                   	popa   
    c394:	c9                   	leave  
    c395:	66 5a                	pop    %dx
    c397:	ff e2                	jmp    *%edx

0000c399 <_initialInt_09h>:
    c399:	c8 00 00 00          	enter  $0x0,$0x0
    c39d:	a1 24 00 a3 32       	mov    0x32a30024,%eax
    c3a2:	c0 a1 26 00 a3 34 c0 	shlb   $0xc0,0x34a30026(%ecx)
    c3a9:	60                   	pusha  
    c3aa:	06                   	push   %es
    c3ab:	1e                   	push   %ds
    c3ac:	8c c8                	mov    %cs,%eax
    c3ae:	8e d8                	mov    %eax,%ds
    c3b0:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c3b5:	b8 09 00 bb 04       	mov    $0x4bb0009,%eax
    c3ba:	00 f7                	add    %dh,%bh
    c3bc:	e3 89                	jecxz  c347 <_initialInt+0xba>
    c3be:	c7                   	(bad)  
    c3bf:	b8 70 c1 26 89       	mov    $0x8926c170,%eax
    c3c4:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c3c9:	45                   	inc    %ebp
    c3ca:	02 1f                	add    (%edi),%bl
    c3cc:	07                   	pop    %es
    c3cd:	61                   	popa   
    c3ce:	c9                   	leave  
    c3cf:	66 5a                	pop    %dx
    c3d1:	ff e2                	jmp    *%edx

0000c3d3 <printpos>:
#include "use.h"
void printpos(char const* Messeage,int row,int colume){//need the pos
    c3d3:	66 55                	push   %bp
    c3d5:	66 89 e5             	mov    %sp,%bp
    c3d8:	66 83 ec 0c          	sub    $0xc,%sp
	int pos = (80 * row + colume)*2;
    c3dc:	67 66 8b 55 0c       	mov    0xc(%di),%dx
    c3e1:	66 89 d0             	mov    %dx,%ax
    c3e4:	66 c1 e0 02          	shl    $0x2,%ax
    c3e8:	66 01 d0             	add    %dx,%ax
    c3eb:	66 c1 e0 04          	shl    $0x4,%ax
    c3ef:	66 89 c2             	mov    %ax,%dx
    c3f2:	67 66 8b 45 10       	mov    0x10(%di),%ax
    c3f7:	66 01 d0             	add    %dx,%ax
    c3fa:	66 01 c0             	add    %ax,%ax
    c3fd:	67 66 89 45 fc       	mov    %ax,-0x4(%di)
	int color = 3;
    c402:	67 66 c7 45 f4 03 00 	movw   $0x3,-0xc(%di)
    c409:	00 00                	add    %al,(%eax)
	int index = 0;
    c40b:	67 66 c7 45 f8 00 00 	movw   $0x0,-0x8(%di)
    c412:	00 00                	add    %al,(%eax)
	while(Messeage[index] != '\0'){
    c414:	eb 35                	jmp    c44b <printpos+0x78>
		_printchar(Messeage[index],pos,color);
    c416:	67 66 8b 55 f8       	mov    -0x8(%di),%dx
    c41b:	67 66 8b 45 08       	mov    0x8(%di),%ax
    c420:	66 01 d0             	add    %dx,%ax
    c423:	67 8a 00             	mov    (%bx,%si),%al
    c426:	66 0f be c0          	movsbw %al,%ax
    c42a:	67 66 ff 75 f4       	pushw  -0xc(%di)
    c42f:	67 66 ff 75 fc       	pushw  -0x4(%di)
    c434:	66 50                	push   %ax
    c436:	66 e8 04 fc          	callw  c03e <_clearscreen+0x7>
    c43a:	ff                   	(bad)  
    c43b:	ff 66 83             	jmp    *-0x7d(%esi)
    c43e:	c4 0c 67             	les    (%edi,%eiz,2),%ecx
		index++;
    c441:	66 ff 45 f8          	incw   -0x8(%ebp)
		pos = pos + 2;
    c445:	67 66 83 45 fc 02    	addw   $0x2,-0x4(%di)
#include "use.h"
void printpos(char const* Messeage,int row,int colume){//need the pos
	int pos = (80 * row + colume)*2;
	int color = 3;
	int index = 0;
	while(Messeage[index] != '\0'){
    c44b:	67 66 8b 55 f8       	mov    -0x8(%di),%dx
    c450:	67 66 8b 45 08       	mov    0x8(%di),%ax
    c455:	66 01 d0             	add    %dx,%ax
    c458:	67 8a 00             	mov    (%bx,%si),%al
    c45b:	84 c0                	test   %al,%al
    c45d:	75 b7                	jne    c416 <printpos+0x43>
		_printchar(Messeage[index],pos,color);
		index++;
		pos = pos + 2;
	}
	return;
    c45f:	90                   	nop
}
    c460:	66 c9                	leavew 
    c462:	66 c3                	retw   

0000c464 <print_for_heart>:
void print_for_heart(char const* Messeage,int row,int colume){//need the pos
    c464:	66 55                	push   %bp
    c466:	66 89 e5             	mov    %sp,%bp
    c469:	66 83 ec 0c          	sub    $0xc,%sp
	int pos = (80 * row + colume)*2;
    c46d:	67 66 8b 55 0c       	mov    0xc(%di),%dx
    c472:	66 89 d0             	mov    %dx,%ax
    c475:	66 c1 e0 02          	shl    $0x2,%ax
    c479:	66 01 d0             	add    %dx,%ax
    c47c:	66 c1 e0 04          	shl    $0x4,%ax
    c480:	66 89 c2             	mov    %ax,%dx
    c483:	67 66 8b 45 10       	mov    0x10(%di),%ax
    c488:	66 01 d0             	add    %dx,%ax
    c48b:	66 01 c0             	add    %ax,%ax
    c48e:	67 66 89 45 fc       	mov    %ax,-0x4(%di)
	int color = 3;
    c493:	67 66 c7 45 f4 03 00 	movw   $0x3,-0xc(%di)
    c49a:	00 00                	add    %al,(%eax)
	int index = 0;
    c49c:	67 66 c7 45 f8 00 00 	movw   $0x0,-0x8(%di)
    c4a3:	00 00                	add    %al,(%eax)
	while(Messeage[index] != '\0'){
    c4a5:	eb 35                	jmp    c4dc <print_for_heart+0x78>
		_printchar(Messeage[index],pos,color);
    c4a7:	67 66 8b 55 f8       	mov    -0x8(%di),%dx
    c4ac:	67 66 8b 45 08       	mov    0x8(%di),%ax
    c4b1:	66 01 d0             	add    %dx,%ax
    c4b4:	67 8a 00             	mov    (%bx,%si),%al
    c4b7:	66 0f be c0          	movsbw %al,%ax
    c4bb:	67 66 ff 75 f4       	pushw  -0xc(%di)
    c4c0:	67 66 ff 75 fc       	pushw  -0x4(%di)
    c4c5:	66 50                	push   %ax
    c4c7:	66 e8 73 fb          	callw  c03e <_clearscreen+0x7>
    c4cb:	ff                   	(bad)  
    c4cc:	ff 66 83             	jmp    *-0x7d(%esi)
    c4cf:	c4 0c 67             	les    (%edi,%eiz,2),%ecx
		index++;
    c4d2:	66 ff 45 f8          	incw   -0x8(%ebp)
		pos = pos + 2;
    c4d6:	67 66 83 45 fc 02    	addw   $0x2,-0x4(%di)
}
void print_for_heart(char const* Messeage,int row,int colume){//need the pos
	int pos = (80 * row + colume)*2;
	int color = 3;
	int index = 0;
	while(Messeage[index] != '\0'){
    c4dc:	67 66 8b 55 f8       	mov    -0x8(%di),%dx
    c4e1:	67 66 8b 45 08       	mov    0x8(%di),%ax
    c4e6:	66 01 d0             	add    %dx,%ax
    c4e9:	67 8a 00             	mov    (%bx,%si),%al
    c4ec:	84 c0                	test   %al,%al
    c4ee:	75 b7                	jne    c4a7 <print_for_heart+0x43>
		_printchar(Messeage[index],pos,color);
		index++;
		pos = pos + 2;
	}
	return;
    c4f0:	90                   	nop
}
    c4f1:	66 c9                	leavew 
    c4f3:	66 c3                	retw   

0000c4f5 <showline>:
void showline(){
    c4f5:	66 55                	push   %bp
    c4f7:	66 89 e5             	mov    %sp,%bp
    c4fa:	66 83 ec 18          	sub    $0x18,%sp
    char alpha = 'a';
    c4fe:	67 c6 45 fb 61       	movb   $0x61,-0x5(%di)
    char name[6];
    name[0] = 'c';
    c503:	67 c6 45 ea 63       	movb   $0x63,-0x16(%di)
    name[1] = 'h';
    c508:	67 c6 45 eb 68       	movb   $0x68,-0x15(%di)
    name[2] = 'e';
    c50d:	67 c6 45 ec 65       	movb   $0x65,-0x14(%di)
    name[3] = 'n';
    c512:	67 c6 45 ed 6e       	movb   $0x6e,-0x13(%di)
    name[4] = 'h';
    c517:	67 c6 45 ee 68       	movb   $0x68,-0x12(%di)
    name[5] = 'y';
    c51c:	67 c6 45 ef 79       	movb   $0x79,-0x11(%di)
    int color = 3;
    c521:	67 66 c7 45 f4 03 00 	movw   $0x3,-0xc(%di)
    c528:	00 00                	add    %al,(%eax)
    int i = 0;
    c52a:	67 66 c7 45 fc 00 00 	movw   $0x0,-0x4(%di)
    c531:	00 00                	add    %al,(%eax)
    int pos = (80 * 0 + 0)*2;
    c533:	67 66 c7 45 f0 00 00 	movw   $0x0,-0x10(%di)
    c53a:	00 00                	add    %al,(%eax)
    for(i = 0;i < 6;i ++){
    c53c:	67 66 c7 45 fc 00 00 	movw   $0x0,-0x4(%di)
    c543:	00 00                	add    %al,(%eax)
    c545:	eb 52                	jmp    c599 <showline+0xa4>
        pos = (80 * i + i) * 2;
    c547:	67 66 8b 55 fc       	mov    -0x4(%di),%dx
    c54c:	66 89 d0             	mov    %dx,%ax
    c54f:	66 c1 e0 03          	shl    $0x3,%ax
    c553:	66 01 d0             	add    %dx,%ax
    c556:	67 66 8d 14          	lea    (%si),%dx
    c55a:	c5 00                	lds    (%eax),%eax
    c55c:	00 00                	add    %al,(%eax)
    c55e:	00 66 01             	add    %ah,0x1(%esi)
    c561:	d0 66 01             	shlb   0x1(%esi)
    c564:	c0 67 66 89          	shlb   $0x89,0x66(%edi)
    c568:	45                   	inc    %ebp
    c569:	f0 67 66 8d 55 ea    	lock lea -0x16(%di),%dx
        _printchar(name[i],pos,color);
    c56f:	67 66 8b 45 fc       	mov    -0x4(%di),%ax
    c574:	66 01 d0             	add    %dx,%ax
    c577:	67 8a 00             	mov    (%bx,%si),%al
    c57a:	66 0f be c0          	movsbw %al,%ax
    c57e:	67 66 ff 75 f4       	pushw  -0xc(%di)
    c583:	67 66 ff 75 f0       	pushw  -0x10(%di)
    c588:	66 50                	push   %ax
    c58a:	66 e8 b0 fa          	callw  c03e <_clearscreen+0x7>
    c58e:	ff                   	(bad)  
    c58f:	ff 66 83             	jmp    *-0x7d(%esi)
    c592:	c4 0c 67             	les    (%edi,%eiz,2),%ecx
    name[4] = 'h';
    name[5] = 'y';
    int color = 3;
    int i = 0;
    int pos = (80 * 0 + 0)*2;
    for(i = 0;i < 6;i ++){
    c595:	66 ff 45 fc          	incw   -0x4(%ebp)
    c599:	67 66 83 7d fc 05    	cmpw   $0x5,-0x4(%di)
    c59f:	7e a6                	jle    c547 <showline+0x52>
        pos = (80 * i + i) * 2;
        _printchar(name[i],pos,color);
    }
}
    c5a1:	66 c9                	leavew 
    c5a3:	66 c3                	retw   

0000c5a5 <printname>:
void printname(){
    c5a5:	66 55                	push   %bp
    c5a7:	66 89 e5             	mov    %sp,%bp
    c5aa:	66 83 ec 04          	sub    $0x4,%sp
    char const* Messeage = "I am OS";
    c5ae:	67 66 c7 45 fc b4 c6 	movw   $0xc6b4,-0x4(%di)
    c5b5:	00 00                	add    %al,(%eax)
    print_for_heart(Messeage,16,11);
    c5b7:	66 6a 0b             	pushw  $0xb
    c5ba:	66 6a 10             	pushw  $0x10
    c5bd:	67 66 ff 75 fc       	pushw  -0x4(%di)
    c5c2:	66 e8 9c fe          	callw  c462 <printpos+0x8f>
    c5c6:	ff                   	(bad)  
    c5c7:	ff 66 83             	jmp    *-0x7d(%esi)
    c5ca:	c4 0c 66             	les    (%esi,%eiz,2),%ecx

}
    c5cd:	c9                   	leave  
    c5ce:	66 c3                	retw   

0000c5d0 <printpoem>:
void printpoem(){
    c5d0:	66 55                	push   %bp
    c5d2:	66 89 e5             	mov    %sp,%bp
    c5d5:	66 83 ec 04          	sub    $0x4,%sp
    char const* Messeage = "I am test";
    c5d9:	67 66 c7 45 fc bc c6 	movw   $0xc6bc,-0x4(%di)
    c5e0:	00 00                	add    %al,(%eax)
    print_for_heart(Messeage,15,10);
    c5e2:	66 6a 0a             	pushw  $0xa
    c5e5:	66 6a 0f             	pushw  $0xf
    c5e8:	67 66 ff 75 fc       	pushw  -0x4(%di)
    c5ed:	66 e8 71 fe          	callw  c462 <printpos+0x8f>
    c5f1:	ff                   	(bad)  
    c5f2:	ff 66 83             	jmp    *-0x7d(%esi)
    c5f5:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
}
    c5f8:	c9                   	leave  
    c5f9:	66 c3                	retw   

0000c5fb <printheart>:
void printheart(){
    c5fb:	66 55                	push   %bp
    c5fd:	66 89 e5             	mov    %sp,%bp
    print_for_heart("     * *       * *     ",10,00);
    c600:	66 6a 00             	pushw  $0x0
    c603:	66 6a 0a             	pushw  $0xa
    c606:	66 68 c6 c6          	pushw  $0xc6c6
    c60a:	00 00                	add    %al,(%eax)
    c60c:	66 e8 52 fe          	callw  c462 <printpos+0x8f>
    c610:	ff                   	(bad)  
    c611:	ff 66 83             	jmp    *-0x7d(%esi)
    c614:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    print_for_heart("   * * * *   * * * *    ",11,00);
    c617:	6a 00                	push   $0x0
    c619:	66 6a 0b             	pushw  $0xb
    c61c:	66 68 de c6          	pushw  $0xc6de
    c620:	00 00                	add    %al,(%eax)
    c622:	66 e8 3c fe          	callw  c462 <printpos+0x8f>
    c626:	ff                   	(bad)  
    c627:	ff 66 83             	jmp    *-0x7d(%esi)
    c62a:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    print_for_heart(" * * * * * * * * * * *    ",12,00);
    c62d:	6a 00                	push   $0x0
    c62f:	66 6a 0c             	pushw  $0xc
    c632:	66 68 f7 c6          	pushw  $0xc6f7
    c636:	00 00                	add    %al,(%eax)
    c638:	66 e8 26 fe          	callw  c462 <printpos+0x8f>
    c63c:	ff                   	(bad)  
    c63d:	ff 66 83             	jmp    *-0x7d(%esi)
    c640:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    print_for_heart("  * * * * * * * * * *   ",13,00);
    c643:	6a 00                	push   $0x0
    c645:	66 6a 0d             	pushw  $0xd
    c648:	66 68 12 c7          	pushw  $0xc712
    c64c:	00 00                	add    %al,(%eax)
    c64e:	66 e8 10 fe          	callw  c462 <printpos+0x8f>
    c652:	ff                   	(bad)  
    c653:	ff 66 83             	jmp    *-0x7d(%esi)
    c656:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    print_for_heart("    * * * * * * * *    ",14,00);
    c659:	6a 00                	push   $0x0
    c65b:	66 6a 0e             	pushw  $0xe
    c65e:	66 68 2b c7          	pushw  $0xc72b
    c662:	00 00                	add    %al,(%eax)
    c664:	66 e8 fa fd          	callw  c462 <printpos+0x8f>
    c668:	ff                   	(bad)  
    c669:	ff 66 83             	jmp    *-0x7d(%esi)
    c66c:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    print_for_heart("      * * * * * *     ",15,00);
    c66f:	6a 00                	push   $0x0
    c671:	66 6a 0f             	pushw  $0xf
    c674:	66 68 43 c7          	pushw  $0xc743
    c678:	00 00                	add    %al,(%eax)
    c67a:	66 e8 e4 fd          	callw  c462 <printpos+0x8f>
    c67e:	ff                   	(bad)  
    c67f:	ff 66 83             	jmp    *-0x7d(%esi)
    c682:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    print_for_heart("        * * * *      ",16,00);
    c685:	6a 00                	push   $0x0
    c687:	66 6a 10             	pushw  $0x10
    c68a:	66 68 5a c7          	pushw  $0xc75a
    c68e:	00 00                	add    %al,(%eax)
    c690:	66 e8 ce fd          	callw  c462 <printpos+0x8f>
    c694:	ff                   	(bad)  
    c695:	ff 66 83             	jmp    *-0x7d(%esi)
    c698:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    print_for_heart("          * *       ",17,00);
    c69b:	6a 00                	push   $0x0
    c69d:	66 6a 11             	pushw  $0x11
    c6a0:	66 68 70 c7          	pushw  $0xc770
    c6a4:	00 00                	add    %al,(%eax)
    c6a6:	66 e8 b8 fd          	callw  c462 <printpos+0x8f>
    c6aa:	ff                   	(bad)  
    c6ab:	ff 66 83             	jmp    *-0x7d(%esi)
    c6ae:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
    c6b1:	c9                   	leave  
    c6b2:	66 c3                	retw   
