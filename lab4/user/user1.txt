
user1.elf:     file format elf32-i386


Disassembly of section .text:

0000c000 <user1>:
    c000:	8c c8                	mov    %cs,%eax
    c002:	8e d8                	mov    %eax,%ds
    c004:	b8 00 b8 8e c0       	mov    $0xc08eb800,%eax

0000c009 <start>:
    c009:	e8 54 01 a1 68       	call   68a1c162 <_end+0x68a0e8de>
    c00e:	d8 a3 62 d8 a1 6a    	fsubs  0x6aa1d862(%ebx)
    c014:	d8 a3 64 d8 a0 66    	fsubs  0x66a0d864(%ebx)
    c01a:	d8 a2 60 d8 a0 67    	fsubs  0x67a0d860(%edx)
    c020:	d8 a2 61 d8 a0 6c    	fsubs  0x6ca0d861(%edx)
    c026:	d8 a2 0f 00 a0 6d    	fsubs  0x6da0000f(%edx)
    c02c:	d8 a2 82 d8 e8 75    	fsubs  0x75e8d882(%edx)
    c032:	00 fe                	add    %bh,%dh
    c034:	06                   	push   %es
    c035:	0f 00 a1 62 d8 a3 68 	verr   0x68a3d862(%ecx)
    c03c:	d8 a1 64 d8 a3 6a    	fsubs  0x6aa3d864(%ecx)
    c042:	d8 a0 60 d8 a2 66    	fsubs  0x66a2d860(%eax)
    c048:	d8 a0 61 d8 a2 67    	fsubs  0x67a2d861(%eax)
    c04e:	d8 a0 0f 00 a2 6c    	fsubs  0x6ca2000f(%eax)
    c054:	d8 a1 70 d8 a3 62    	fsubs  0x62a3d870(%ecx)
    c05a:	d8 a1 72 d8 a3 64    	fsubs  0x64a3d872(%ecx)
    c060:	d8 a0 6e d8 a2 60    	fsubs  0x60a2d86e(%eax)
    c066:	d8 a0 6f d8 a2 61    	fsubs  0x61a2d86f(%eax)
    c06c:	d8 a0 74 d8 a2 0f    	fsubs  0xfa2d874(%eax)
    c072:	00 a0 75 d8 a2 82    	add    %ah,-0x7d5d278b(%eax)
    c078:	d8 e8                	fsubr  %st(0),%st
    c07a:	2c 00                	sub    $0x0,%al
    c07c:	fe 06                	incb   (%esi)
    c07e:	0f 00 a1 62 d8 a3 70 	verr   0x70a3d862(%ecx)
    c085:	d8 a1 64 d8 a3 72    	fsubs  0x72a3d864(%ecx)
    c08b:	d8 a0 60 d8 a2 6e    	fsubs  0x6ea2d860(%eax)
    c091:	d8 a0 61 d8 a2 6f    	fsubs  0x6fa2d861(%eax)
    c097:	d8 a0 0f 00 a2 74    	fsubs  0x74a2000f(%eax)
    c09d:	d8 e8                	fsubr  %st(0),%st
    c09f:	cc                   	int3   
    c0a0:	00 cd                	add    %cl,%ch
    c0a2:	20 cd                	and    %cl,%ch
    c0a4:	34 e9                	xor    $0xe9,%al
    c0a6:	61                   	popa   
    c0a7:	ff e8                	ljmp   *<internal disassembler error>

0000c0a8 <move>:
    c0a8:	e8 7e 00 e8 ab       	call   abe8c12b <_end+0xabe7e8a7>
    c0ad:	00 e8                	add    %ch,%al
    c0af:	07                   	pop    %es
    c0b0:	00 e8                	add    %ch,%al
    c0b2:	75 00                	jne    c0b4 <move+0xc>
    c0b4:	e8 88 00 c3 a0       	call   a0c3c141 <_end+0xa0c2e8bd>

0000c0b8 <update>:
    c0b8:	a0 60 d8 e8 07       	mov    0x7e8d860,%al
    c0bd:	00 a0 61 d8 e8 33    	add    %ah,0x33e8d861(%eax)
    c0c3:	00 c3                	add    %al,%bl

0000c0c5 <handlex>:
    c0c5:	3c 01                	cmp    $0x1,%al
    c0c7:	75 17                	jne    c0e0 <dec1>
    c0c9:	ff 06                	incl   (%esi)
    c0cb:	62                   	(bad)  
    c0cc:	d8 83 3e 62 d8 0f    	fadds  0xfd8623e(%ebx)
    c0d2:	75 54                	jne    c128 <notchange>
    c0d4:	c7 06 62 d8 0d 00    	movl   $0xdd862,(%esi)
    c0da:	c6 06 60             	movb   $0x60,(%esi)
    c0dd:	d8 00                	fadds  (%eax)
    c0df:	c3                   	ret    

0000c0e0 <dec1>:
    c0e0:	ff 0e                	decl   (%esi)
    c0e2:	62                   	(bad)  
    c0e3:	d8 83 3e 62 d8 ff    	fadds  -0x279dc2(%ebx)
    c0e9:	75 3d                	jne    c128 <notchange>
    c0eb:	c7 06 62 d8 01 00    	movl   $0x1d862,(%esi)
    c0f1:	c6 06 60             	movb   $0x60,(%esi)
    c0f4:	d8 01                	fadds  (%ecx)
    c0f6:	c3                   	ret    

0000c0f7 <handley>:
    c0f7:	3c 01                	cmp    $0x1,%al
    c0f9:	75 17                	jne    c112 <dec2>
    c0fb:	ff 06                	incl   (%esi)
    c0fd:	64 d8 83 3e 64 d8 28 	fadds  %fs:0x28d8643e(%ebx)
    c104:	75 22                	jne    c128 <notchange>
    c106:	c7 06 64 d8 26 00    	movl   $0x26d864,(%esi)
    c10c:	c6 06 61             	movb   $0x61,(%esi)
    c10f:	d8 00                	fadds  (%eax)
    c111:	c3                   	ret    

0000c112 <dec2>:
    c112:	ff 0e                	decl   (%esi)
    c114:	64 d8 83 3e 64 d8 ff 	fadds  %fs:-0x279bc2(%ebx)
    c11b:	75 0b                	jne    c128 <notchange>
    c11d:	c7 06 64 d8 01 00    	movl   $0x1d864,(%esi)
    c123:	c6 06 61             	movb   $0x61,(%esi)
    c126:	d8 01                	fadds  (%ecx)

0000c128 <notchange>:
    c128:	c3                   	ret    

0000c129 <Setpoint>:
    c129:	31 c0                	xor    %eax,%eax
    c12b:	a1 62 d8 bb 50       	mov    0x50bbd862,%eax
    c130:	00 f7                	add    %dh,%bh
    c132:	e3 03                	jecxz  c137 <Setpoint+0xe>
    c134:	06                   	push   %es
    c135:	64 d8 bb 02 00 f7 e3 	fdivrs %fs:-0x1c08fffe(%ebx)
    c13c:	89 c3                	mov    %eax,%ebx
    c13e:	c3                   	ret    

0000c13f <show>:
    c13f:	8a 26                	mov    (%esi),%ah
    c141:	0f 00 a0 82 d8 26 89 	verr   -0x76d9277e(%eax)
    c148:	07                   	pop    %es
    c149:	8a 1e                	mov    (%esi),%bl
    c14b:	0f 00 80 fb 10 75 06 	sldt   0x67510fb(%eax)
    c152:	b3 01                	mov    $0x1,%bl
    c154:	88 1e                	mov    %bl,(%esi)
    c156:	0f 00 c3             	sldt   %ebx

0000c158 <c>:
    c158:	c3                   	ret    

0000c159 <kill>:
    c159:	b8 00 00 26 89       	mov    $0x89260000,%eax
    c15e:	07                   	pop    %es
    c15f:	c3                   	ret    

0000c160 <loop1>:
    c160:	8b 0e                	mov    (%esi),%ecx
    c162:	76 d8                	jbe    c13c <Setpoint+0x13>

0000c164 <LOOP1>:
    c164:	a1 78 d8 48 7f       	mov    0x7f48d878,%eax

0000c167 <LOOP2>:
    c167:	48                   	dec    %eax
    c168:	7f fd                	jg     c167 <LOOP2>
    c16a:	e2 f8                	loop   c164 <LOOP1>
    c16c:	c3                   	ret    

0000c16d <showname>:
    c16d:	06                   	push   %es
    c16e:	53                   	push   %ebx
    c16f:	66 55                	push   %bp
    c171:	8c d8                	mov    %ds,%eax
    c173:	8e c0                	mov    %eax,%es
    c175:	b8 7a d8 89 c5       	mov    $0xc589d87a,%eax
    c17a:	b8 01 13 b6 0c       	mov    $0xcb61301,%eax
    c17f:	b2 28                	mov    $0x28,%dl
    c181:	b9 08 00 b7 00       	mov    $0xb70008,%ecx
    c186:	8a 1e                	mov    (%esi),%bl
    c188:	0f 00 cd             	str    %ebp
    c18b:	10 66 5d             	adc    %ah,0x5d(%esi)
    c18e:	5b                   	pop    %ebx
    c18f:	07                   	pop    %es
    c190:	c3                   	ret    
    c191:	66 90                	xchg   %ax,%ax
    c193:	66 90                	xchg   %ax,%ax
    c195:	66 90                	xchg   %ax,%ax
    c197:	66 90                	xchg   %ax,%ax
    c199:	66 90                	xchg   %ax,%ax
    c19b:	66 90                	xchg   %ax,%ax
    c19d:	66 90                	xchg   %ax,%ax
    c19f:	90                   	nop

0000c1a0 <Pg_Segment>:
	...

0000c1a2 <Pg_Offset>:
    c1a2:	00 c0                	add    %al,%al

0000c1a4 <info_Segment>:
	...

0000c1a6 <info_Offset>:
    c1a6:	00 b1 08 00 00 00    	add    %dh,0x8(%ecx)

0000c1a8 <count>:
    c1a8:	08 00                	or     %al,(%eax)

0000c1a9 <x>:
	...

0000c1ab <y>:
	...

0000c1ad <xdul>:
    c1ad:	01 00                	add    %eax,(%eax)

0000c1af <ydul>:
    c1af:	01 00                	add    %eax,(%eax)

0000c1b1 <alpha>:
    c1b1:	2d 00 00 00 00       	sub    $0x0,%eax

0000c1b2 <int_09_saved>:
    c1b2:	00 00                	add    %al,(%eax)
	...

0000c1b6 <color>:
    c1b6:	01 b8 03 00 cd 10    	add    %edi,0x10cd0003(%eax)

0000c1b7 <_clearscreen>:
    c1b7:	b8 03 00 cd 10       	mov    $0x10cd0003,%eax
    c1bc:	66 5a                	pop    %dx
    c1be:	ff e2                	jmp    *%edx

0000c1c0 <_printchar>:
    c1c0:	c8 00 00 00          	enter  $0x0,$0x0
    c1c4:	b8 00 b8 8e e8       	mov    $0xe88eb800,%eax
    c1c9:	57                   	push   %edi
    c1ca:	66 8b 4e 06          	mov    0x6(%esi),%cx
    c1ce:	66 8b 7e 0a          	mov    0xa(%esi),%di
    c1d2:	66 8b 56 0e          	mov    0xe(%esi),%dx
    c1d6:	88 d5                	mov    %dl,%ch
    c1d8:	65 89 0d 5f c9 b8 01 	mov    %ecx,%gs:0x1b8c95f
    c1df:	00 66 5a             	add    %ah,0x5a(%esi)
    c1e2:	ff e2                	jmp    *%edx

0000c1e4 <_readinput>:
    c1e4:	c8 04 00 00          	enter  $0x4,$0x0
    c1e8:	b4 00                	mov    $0x0,%ah
    c1ea:	cd 16                	int    $0x16
    c1ec:	b4 00                	mov    $0x0,%ah
    c1ee:	66 67 89 04          	mov    %ax,(%si)
    c1f2:	24 66                	and    $0x66,%al
    c1f4:	67 8b 04             	mov    (%si),%eax
    c1f7:	24 c9                	and    $0xc9,%al
    c1f9:	66 5a                	pop    %dx
    c1fb:	ff e2                	jmp    *%edx

0000c1fd <_showchar>:
    c1fd:	c8 00 00 00          	enter  $0x0,$0x0
    c201:	8b 46 06             	mov    0x6(%esi),%eax
    c204:	b4 0e                	mov    $0xe,%ah
    c206:	b3 00                	mov    $0x0,%bl
    c208:	cd 10                	int    $0x10
    c20a:	c9                   	leave  
    c20b:	66 5a                	pop    %dx
    c20d:	ff e2                	jmp    *%edx

0000c20f <_setPoint>:
    c20f:	c8 00 00 00          	enter  $0x0,$0x0
    c213:	53                   	push   %ebx
    c214:	b7 00                	mov    $0x0,%bh
    c216:	8a 77 06             	mov    0x6(%edi),%dh
    c219:	8a 57 0a             	mov    0xa(%edi),%dl
    c21c:	b4 02                	mov    $0x2,%ah
    c21e:	cd 10                	int    $0x10
    c220:	5b                   	pop    %ebx
    c221:	c9                   	leave  
    c222:	66 5a                	pop    %dx
    c224:	ff e2                	jmp    *%edx

0000c226 <_loadP>:
    c226:	c8 00 00 00          	enter  $0x0,$0x0
    c22a:	60                   	pusha  
    c22b:	06                   	push   %es
    c22c:	1e                   	push   %ds
    c22d:	52                   	push   %edx
    c22e:	8c c8                	mov    %cs,%eax
    c230:	8e d8                	mov    %eax,%ds
    c232:	8e c0                	mov    %eax,%es
    c234:	b2 00                	mov    $0x0,%dl
    c236:	8b 46 0a             	mov    0xa(%esi),%eax
    c239:	b3 12                	mov    $0x12,%bl
    c23b:	f6 f3                	div    %bl
    c23d:	88 e1                	mov    %ah,%cl
    c23f:	30 e4                	xor    %ah,%ah
    c241:	b3 02                	mov    $0x2,%bl
    c243:	f6 f3                	div    %bl
    c245:	88 e6                	mov    %ah,%dh
    c247:	88 c5                	mov    %al,%ch
    c249:	8a 46 06             	mov    0x6(%esi),%al
    c24c:	8b 5e 0e             	mov    0xe(%esi),%ebx
    c24f:	b4 02                	mov    $0x2,%ah
    c251:	cd 13                	int    $0x13
    c253:	5a                   	pop    %edx
    c254:	1f                   	pop    %ds
    c255:	07                   	pop    %es
    c256:	61                   	popa   
    c257:	c9                   	leave  
    c258:	66 5a                	pop    %dx
    c25a:	ff e2                	jmp    *%edx

0000c25c <_RunProgress>:
    c25c:	c8 00 00 00          	enter  $0x0,$0x0
    c260:	06                   	push   %es
    c261:	60                   	pusha  
    c262:	06                   	push   %es
    c263:	8c c8                	mov    %cs,%eax
    c265:	8e d8                	mov    %eax,%ds
    c267:	8e c0                	mov    %eax,%es
    c269:	8b 5e 06             	mov    0x6(%esi),%ebx
    c26c:	ff d3                	call   *%ebx
    c26e:	07                   	pop    %es
    c26f:	61                   	popa   

0000c270 <S>:
    c270:	b4 00                	mov    $0x0,%ah
    c272:	cd 16                	int    $0x16
    c274:	b8 00 04 50 cd       	mov    $0xcd500400,%eax
    c279:	21 07                	and    %eax,(%edi)
    c27b:	c9                   	leave  
    c27c:	66 5a                	pop    %dx
    c27e:	ff e2                	jmp    *%edx

0000c280 <_SetINT20h>:
    c280:	53                   	push   %ebx
    c281:	51                   	push   %ecx
    c282:	52                   	push   %edx
    c283:	b4 01                	mov    $0x1,%ah
    c285:	cd 16                	int    $0x16
    c287:	5a                   	pop    %edx
    c288:	59                   	pop    %ecx
    c289:	5b                   	pop    %ebx
    c28a:	75 e4                	jne    c270 <S>
    c28c:	cf                   	iret   

0000c28d <_SetINT08h>:
    c28d:	60                   	pusha  
    c28e:	0f a8                	push   %gs
    c290:	fe 0e                	decb   (%esi)
    c292:	a8 c1                	test   $0xc1,%al
    c294:	75 4f                	jne    c2e5 <end>

0000c296 <notc>:
    c296:	80 3e b1             	cmpb   $0xb1,(%esi)
    c299:	c1 2d 75 07 c6 06 b1 	shrl   $0xb1,0x6c60775
    c2a0:	c1 5c eb 2a 80       	rcrl   $0x80,0x2a(%ebx,%ebp,8)

0000c2a4 <changleft>:
    c2a4:	80 3e b1             	cmpb   $0xb1,(%esi)
    c2a7:	c1 5c 75 07 c6       	rcrl   $0xc6,0x7(%ebp,%esi,2)
    c2ac:	06                   	push   %es
    c2ad:	b1 c1                	mov    $0xc1,%cl
    c2af:	7c eb                	jl     c29c <notc+0x6>
    c2b1:	1c 80                	sbb    $0x80,%al

0000c2b2 <changright>:
    c2b2:	80 3e b1             	cmpb   $0xb1,(%esi)
    c2b5:	c1 7c 75 07 c6       	sarl   $0xc6,0x7(%ebp,%esi,2)
    c2ba:	06                   	push   %es
    c2bb:	b1 c1                	mov    $0xc1,%cl
    c2bd:	2f                   	das    
    c2be:	eb 0e                	jmp    c2ce <show>

0000c2c0 <changheng>:
    c2c0:	80 3e b1             	cmpb   $0xb1,(%esi)
    c2c3:	c1 2f 75             	shrl   $0x75,(%edi)
    c2c6:	cf                   	iret   
    c2c7:	c6 06 b1             	movb   $0xb1,(%esi)
    c2ca:	c1 2d eb 00 b9 00 b8 	shrl   $0xb8,0xb900eb

0000c2ce <show>:
    c2ce:	b9 00 b8 8e e9       	mov    $0xe98eb800,%ecx
    c2d3:	b4 09                	mov    $0x9,%ah
    c2d5:	8a 26                	mov    (%esi),%ah
    c2d7:	b6 c1                	mov    $0xc1,%dh
    c2d9:	a0 b1 c1 65 a3       	mov    0xa365c1b1,%al
    c2de:	dc 00                	faddl  (%eax)
    c2e0:	c6 06 a8             	movb   $0xa8,(%esi)
    c2e3:	c1 08 b0             	rorl   $0xb0,(%eax)

0000c2e5 <end>:
    c2e5:	b0 20                	mov    $0x20,%al
    c2e7:	e6 20                	out    %al,$0x20
    c2e9:	e6 a0                	out    %al,$0xa0
    c2eb:	0f a9                	pop    %gs
    c2ed:	61                   	popa   
    c2ee:	cf                   	iret   

0000c2ef <_SetINT09h>:
    c2ef:	60                   	pusha  
    c2f0:	b9 00 b8 8e e9       	mov    $0xe98eb800,%ecx
    c2f5:	8a 26                	mov    (%esi),%ah
    c2f7:	b6 c1                	mov    $0xc1,%dh
    c2f9:	b0 4f                	mov    $0x4f,%al
    c2fb:	65 a3 00 00 b0 55    	mov    %eax,%gs:0x55b00000
    c301:	65 a3 02 00 b0 43    	mov    %eax,%gs:0x43b00002
    c307:	65 a3 04 00 b0 48    	mov    %eax,%gs:0x48b00004
    c30d:	65 a3 06 00 b0 53    	mov    %eax,%gs:0x53b00006
    c313:	65 a3 08 00 b0 21    	mov    %eax,%gs:0x21b00008
    c319:	65 a3 0a 00 b0 4f    	mov    %eax,%gs:0x4fb0000a
    c31f:	65 a3 0c 00 b0 55    	mov    %eax,%gs:0x55b0000c
    c325:	65 a3 0e 00 b0 43    	mov    %eax,%gs:0x43b0000e
    c32b:	65 a3 10 00 b0 48    	mov    %eax,%gs:0x48b00010
    c331:	65 a3 12 00 b0 21    	mov    %eax,%gs:0x21b00012
    c337:	65 a3 14 00 61 80    	mov    %eax,%gs:0x80610014
    c33d:	fc                   	cld    
    c33e:	06                   	push   %es
    c33f:	75 08                	jne    c349 <cont>
    c341:	50                   	push   %eax
    c342:	b4 01                	mov    $0x1,%ah
    c344:	88 26                	mov    %ah,(%esi)
    c346:	b6 c1                	mov    $0xc1,%dh
    c348:	58                   	pop    %eax

0000c349 <cont>:
    c349:	fe 06                	incb   (%esi)
    c34b:	b6 c1                	mov    $0xc1,%dh
    c34d:	06                   	push   %es
    c34e:	50                   	push   %eax
    c34f:	8c c8                	mov    %cs,%eax
    c351:	8e c0                	mov    %eax,%es
    c353:	fb                   	sti    
    c354:	9c                   	pushf  
    c355:	26 ff 1e             	lcall  *%es:(%esi)
    c358:	b2 c1                	mov    $0xc1,%dl
    c35a:	58                   	pop    %eax
    c35b:	07                   	pop    %es
    c35c:	cf                   	iret   

0000c35d <_SetINT33h>:
    c35d:	c8 00 00 00          	enter  $0x0,$0x0
    c361:	60                   	pusha  
    c362:	1e                   	push   %ds
    c363:	0f a8                	push   %gs
    c365:	6a 00                	push   $0x0
    c367:	e8 6d 02 0f a9       	call   a90fc5d9 <_end+0xa90eed55>
    c36c:	1f                   	pop    %ds
    c36d:	61                   	popa   
    c36e:	c9                   	leave  
    c36f:	cf                   	iret   

0000c370 <_SetINT34h>:
    c370:	60                   	pusha  
    c371:	1e                   	push   %ds
    c372:	0f a8                	push   %gs
    c374:	6a 00                	push   $0x0
    c376:	e8 9f 03 0f a9       	call   a90fc71a <_end+0xa90eee96>
    c37b:	1f                   	pop    %ds
    c37c:	61                   	popa   
    c37d:	cf                   	iret   

0000c37e <_SetINT35h>:
    c37e:	c8 04 00 00          	enter  $0x4,$0x0
    c382:	60                   	pusha  
    c383:	1e                   	push   %ds
    c384:	0f a8                	push   %gs
    c386:	8b 46 08             	mov    0x8(%esi),%eax
    c389:	50                   	push   %eax
    c38a:	6a 00                	push   $0x0
    c38c:	e8 b4 03 66 67       	call   6766c745 <_end+0x6765eec1>
    c391:	89 04 24             	mov    %eax,(%esp)
    c394:	66 67 8b 04          	mov    (%si),%ax
    c398:	24 0f                	and    $0xf,%al
    c39a:	a9 1f 61 c9 cf       	test   $0xcfc9611f,%eax

0000c39f <_SetINT21h>:
    c39f:	c8 00 00 00          	enter  $0x0,$0x0
    c3a3:	60                   	pusha  
    c3a4:	8b 46 08             	mov    0x8(%esi),%eax
    c3a7:	80 fc 00             	cmp    $0x0,%ah
    c3aa:	74 17                	je     c3c3 <showc>
    c3ac:	80 fc 01             	cmp    $0x1,%ah
    c3af:	74 1e                	je     c3cf <inputc>
    c3b1:	80 fc 02             	cmp    $0x2,%ah
    c3b4:	74 36                	je     c3ec <input_and_readc>
    c3b6:	80 fc 03             	cmp    $0x3,%ah
    c3b9:	74 54                	je     c40f <clr>
    c3bb:	80 fc 04             	cmp    $0x4,%ah
    c3be:	74 57                	je     c417 <ouch>
    c3c0:	61                   	popa   
    c3c1:	c9                   	leave  
    c3c2:	cf                   	iret   

0000c3c3 <showc>:
    c3c3:	8b 46 0a             	mov    0xa(%esi),%eax
    c3c6:	b4 0e                	mov    $0xe,%ah
    c3c8:	b3 00                	mov    $0x0,%bl
    c3ca:	cd 10                	int    $0x10
    c3cc:	61                   	popa   
    c3cd:	c9                   	leave  
    c3ce:	cf                   	iret   

0000c3cf <inputc>:
    c3cf:	66 83 ec 04          	sub    $0x4,%sp
    c3d3:	b4 00                	mov    $0x0,%ah
    c3d5:	cd 16                	int    $0x16
    c3d7:	b4 00                	mov    $0x0,%ah
    c3d9:	66 67 89 04          	mov    %ax,(%si)
    c3dd:	24 66                	and    $0x66,%al
    c3df:	67 8b 04             	mov    (%si),%eax
    c3e2:	24 66                	and    $0x66,%al
    c3e4:	83 c4 04             	add    $0x4,%esp
    c3e7:	8e e0                	mov    %eax,%fs
    c3e9:	61                   	popa   
    c3ea:	c9                   	leave  
    c3eb:	cf                   	iret   

0000c3ec <input_and_readc>:
    c3ec:	66 83 ec 04          	sub    $0x4,%sp
    c3f0:	b4 00                	mov    $0x0,%ah
    c3f2:	cd 16                	int    $0x16
    c3f4:	b4 00                	mov    $0x0,%ah
    c3f6:	66 67 89 04          	mov    %ax,(%si)
    c3fa:	24 66                	and    $0x66,%al
    c3fc:	67 8b 04             	mov    (%si),%eax
    c3ff:	24 b4                	and    $0xb4,%al
    c401:	0e                   	push   %cs
    c402:	b3 00                	mov    $0x0,%bl
    c404:	cd 10                	int    $0x10
    c406:	66 83 c4 04          	add    $0x4,%sp
    c40a:	8e e0                	mov    %eax,%fs
    c40c:	61                   	popa   
    c40d:	c9                   	leave  
    c40e:	cf                   	iret   

0000c40f <clr>:
    c40f:	b8 03 00 cd 10       	mov    $0x10cd0003,%eax
    c414:	61                   	popa   
    c415:	c9                   	leave  
    c416:	cf                   	iret   

0000c417 <ouch>:
    c417:	06                   	push   %es
    c418:	b8 00 b8 8e c0       	mov    $0xc08eb800,%eax
    c41d:	bf 28 00 57 66       	mov    $0x66570028,%edi
    c422:	b9 6f 00 00 00       	mov    $0x6f,%ecx
    c427:	b5 07                	mov    $0x7,%ch
    c429:	66 bf 28 00          	mov    $0x28,%di
    c42d:	00 00                	add    %al,(%eax)
    c42f:	26 89 0d 66 b9 75 00 	mov    %ecx,%es:0x75b966
    c436:	00 00                	add    %al,(%eax)
    c438:	b5 07                	mov    $0x7,%ch
    c43a:	66 bf 2a 00          	mov    $0x2a,%di
    c43e:	00 00                	add    %al,(%eax)
    c440:	26 89 0d 66 b9 63 00 	mov    %ecx,%es:0x63b966
    c447:	00 00                	add    %al,(%eax)
    c449:	b5 07                	mov    $0x7,%ch
    c44b:	66 bf 2c 00          	mov    $0x2c,%di
    c44f:	00 00                	add    %al,(%eax)
    c451:	26 89 0d 66 b9 68 00 	mov    %ecx,%es:0x68b966
    c458:	00 00                	add    %al,(%eax)
    c45a:	b5 07                	mov    $0x7,%ch
    c45c:	66 bf 2e 00          	mov    $0x2e,%di
    c460:	00 00                	add    %al,(%eax)
    c462:	26 89 0d 5f 07 61 c9 	mov    %ecx,%es:0xc961075f
    c469:	cf                   	iret   

0000c46a <_initialInt>:
    c46a:	c8 00 00 00          	enter  $0x0,$0x0
    c46e:	60                   	pusha  
    c46f:	06                   	push   %es
    c470:	1e                   	push   %ds
    c471:	8c c8                	mov    %cs,%eax
    c473:	8e d8                	mov    %eax,%ds
    c475:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c47a:	b8 35 00 bb 04       	mov    $0x4bb0035,%eax
    c47f:	00 f7                	add    %dh,%bh
    c481:	e3 89                	jecxz  c40c <input_and_readc+0x20>
    c483:	c7                   	(bad)  
    c484:	b8 7e c3 26 89       	mov    $0x8926c37e,%eax
    c489:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c48e:	45                   	inc    %ebp
    c48f:	02 1f                	add    (%edi),%bl
    c491:	07                   	pop    %es
    c492:	61                   	popa   
    c493:	60                   	pusha  
    c494:	06                   	push   %es
    c495:	1e                   	push   %ds
    c496:	8c c8                	mov    %cs,%eax
    c498:	8e d8                	mov    %eax,%ds
    c49a:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c49f:	b8 20 00 bb 04       	mov    $0x4bb0020,%eax
    c4a4:	00 f7                	add    %dh,%bh
    c4a6:	e3 89                	jecxz  c431 <ouch+0x1a>
    c4a8:	c7                   	(bad)  
    c4a9:	b8 80 c2 26 89       	mov    $0x8926c280,%eax
    c4ae:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c4b3:	45                   	inc    %ebp
    c4b4:	02 1f                	add    (%edi),%bl
    c4b6:	07                   	pop    %es
    c4b7:	61                   	popa   
    c4b8:	60                   	pusha  
    c4b9:	06                   	push   %es
    c4ba:	1e                   	push   %ds
    c4bb:	8c c8                	mov    %cs,%eax
    c4bd:	8e d8                	mov    %eax,%ds
    c4bf:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c4c4:	b8 08 00 bb 04       	mov    $0x4bb0008,%eax
    c4c9:	00 f7                	add    %dh,%bh
    c4cb:	e3 89                	jecxz  c456 <ouch+0x3f>
    c4cd:	c7                   	(bad)  
    c4ce:	b8 8d c2 26 89       	mov    $0x8926c28d,%eax
    c4d3:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c4d8:	45                   	inc    %ebp
    c4d9:	02 1f                	add    (%edi),%bl
    c4db:	07                   	pop    %es
    c4dc:	61                   	popa   
    c4dd:	60                   	pusha  
    c4de:	06                   	push   %es
    c4df:	1e                   	push   %ds
    c4e0:	8c c8                	mov    %cs,%eax
    c4e2:	8e d8                	mov    %eax,%ds
    c4e4:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c4e9:	b8 33 00 bb 04       	mov    $0x4bb0033,%eax
    c4ee:	00 f7                	add    %dh,%bh
    c4f0:	e3 89                	jecxz  c47b <_initialInt+0x11>
    c4f2:	c7                   	(bad)  
    c4f3:	b8 5d c3 26 89       	mov    $0x8926c35d,%eax
    c4f8:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c4fd:	45                   	inc    %ebp
    c4fe:	02 1f                	add    (%edi),%bl
    c500:	07                   	pop    %es
    c501:	61                   	popa   
    c502:	60                   	pusha  
    c503:	06                   	push   %es
    c504:	1e                   	push   %ds
    c505:	8c c8                	mov    %cs,%eax
    c507:	8e d8                	mov    %eax,%ds
    c509:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c50e:	b8 34 00 bb 04       	mov    $0x4bb0034,%eax
    c513:	00 f7                	add    %dh,%bh
    c515:	e3 89                	jecxz  c4a0 <_initialInt+0x36>
    c517:	c7                   	(bad)  
    c518:	b8 70 c3 26 89       	mov    $0x8926c370,%eax
    c51d:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c522:	45                   	inc    %ebp
    c523:	02 1f                	add    (%edi),%bl
    c525:	07                   	pop    %es
    c526:	61                   	popa   
    c527:	c9                   	leave  
    c528:	66 5a                	pop    %dx
    c52a:	ff e2                	jmp    *%edx

0000c52c <_initialInt_09h>:
    c52c:	c8 00 00 00          	enter  $0x0,$0x0
    c530:	a1 24 00 a3 b2       	mov    0xb2a30024,%eax
    c535:	c1 a1 26 00 a3 b4 c1 	shll   $0xc1,-0x4b5cffda(%ecx)
    c53c:	60                   	pusha  
    c53d:	06                   	push   %es
    c53e:	1e                   	push   %ds
    c53f:	8c c8                	mov    %cs,%eax
    c541:	8e d8                	mov    %eax,%ds
    c543:	b8 00 00 8e c0       	mov    $0xc08e0000,%eax
    c548:	b8 09 00 bb 04       	mov    $0x4bb0009,%eax
    c54d:	00 f7                	add    %dh,%bh
    c54f:	e3 89                	jecxz  c4da <_initialInt+0x70>
    c551:	c7                   	(bad)  
    c552:	b8 ef c2 26 89       	mov    $0x8926c2ef,%eax
    c557:	05 8c c8 26 89       	add    $0x8926c88c,%eax
    c55c:	45                   	inc    %ebp
    c55d:	02 1f                	add    (%edi),%bl
    c55f:	07                   	pop    %es
    c560:	61                   	popa   
    c561:	c9                   	leave  
    c562:	66 5a                	pop    %dx
    c564:	ff e2                	jmp    *%edx

0000c566 <_test>:
    c566:	60                   	pusha  
    c567:	50                   	push   %eax
    c568:	53                   	push   %ebx
    c569:	51                   	push   %ecx
    c56a:	52                   	push   %edx
    c56b:	0f a8                	push   %gs
    c56d:	a1 a9 c1 50 6a       	mov    0x6a50c1a9,%eax
    c572:	00 ff                	add    %bh,%bh
    c574:	06                   	push   %es
    c575:	a9 c1 a1 ab c1       	test   $0xc1aba1c1,%eax
    c57a:	50                   	push   %eax
    c57b:	6a 00                	push   $0x0
    c57d:	ff 06                	incl   (%esi)
    c57f:	ab                   	stos   %eax,%es:(%edi)
    c580:	c1 e8 0e             	shr    $0xe,%eax
    c583:	00 66 58             	add    %ah,0x58(%esi)
    c586:	58                   	pop    %eax
    c587:	0f a9                	pop    %gs
    c589:	5a                   	pop    %edx
    c58a:	59                   	pop    %ecx
    c58b:	5b                   	pop    %ebx
    c58c:	58                   	pop    %eax
    c58d:	61                   	popa   
    c58e:	66 5a                	pop    %dx
    c590:	ff e2                	jmp    *%edx

0000c592 <printcircle>:
#include "use.h"
void printcircle(char alpha){
    c592:	66 55                	push   %bp
    c594:	66 89 e5             	mov    %sp,%bp
    c597:	66 83 ec 0c          	sub    $0xc,%sp
    c59b:	67 66 8b 45 08       	mov    0x8(%di),%ax
    c5a0:	67 88 45 f4          	mov    %al,-0xc(%di)
    int pos = (80 * 15 + 20)*2;
    c5a4:	67 66 c7 45 fc 88 09 	movw   $0x988,-0x4(%di)
    c5ab:	00 00                	add    %al,(%eax)
    int color = 3;
    c5ad:	67 66 c7 45 f8 03 00 	movw   $0x3,-0x8(%di)
    c5b4:	00 00                	add    %al,(%eax)
	_printchar(alpha,pos,color);
    c5b6:	67 66 0f be 45 f4    	movsbw -0xc(%di),%ax
    c5bc:	67 66 ff 75 f8       	pushw  -0x8(%di)
    c5c1:	67 66 ff 75 fc       	pushw  -0x4(%di)
    c5c6:	66 50                	push   %ax
    c5c8:	66 e8 f2 fb          	callw  c1be <_clearscreen+0x7>
    c5cc:	ff                   	(bad)  
    c5cd:	ff 66 83             	jmp    *-0x7d(%esi)
    c5d0:	c4 0c 90             	les    (%eax,%edx,4),%ecx
    return;
}
    c5d3:	66 c9                	leavew 
    c5d5:	66 c3                	retw   

0000c5d7 <showline>:
void showline(){
    c5d7:	66 55                	push   %bp
    c5d9:	66 89 e5             	mov    %sp,%bp
    c5dc:	66 83 ec 18          	sub    $0x18,%sp
    char alpha = 'a';
    c5e0:	67 c6 45 fb 61       	movb   $0x61,-0x5(%di)
    char name[6];
    name[0] = 'c';
    c5e5:	67 c6 45 ea 63       	movb   $0x63,-0x16(%di)
    name[1] = 'h';
    c5ea:	67 c6 45 eb 68       	movb   $0x68,-0x15(%di)
    name[2] = 'e';
    c5ef:	67 c6 45 ec 65       	movb   $0x65,-0x14(%di)
    name[3] = 'n';
    c5f4:	67 c6 45 ed 6e       	movb   $0x6e,-0x13(%di)
    name[4] = 'h';
    c5f9:	67 c6 45 ee 68       	movb   $0x68,-0x12(%di)
    name[5] = 'y';
    c5fe:	67 c6 45 ef 79       	movb   $0x79,-0x11(%di)
    int color = 3;
    c603:	67 66 c7 45 f4 03 00 	movw   $0x3,-0xc(%di)
    c60a:	00 00                	add    %al,(%eax)
    int i = 0;
    c60c:	67 66 c7 45 fc 00 00 	movw   $0x0,-0x4(%di)
    c613:	00 00                	add    %al,(%eax)
    int pos = (80 * 0 + 0)*2;
    c615:	67 66 c7 45 f0 00 00 	movw   $0x0,-0x10(%di)
    c61c:	00 00                	add    %al,(%eax)
    for(i = 0;i < 6;i ++){
    c61e:	67 66 c7 45 fc 00 00 	movw   $0x0,-0x4(%di)
    c625:	00 00                	add    %al,(%eax)
    c627:	eb 52                	jmp    c67b <showline+0xa4>
        pos = (80 * i + i) * 2;
    c629:	67 66 8b 55 fc       	mov    -0x4(%di),%dx
    c62e:	66 89 d0             	mov    %dx,%ax
    c631:	66 c1 e0 03          	shl    $0x3,%ax
    c635:	66 01 d0             	add    %dx,%ax
    c638:	67 66 8d 14          	lea    (%si),%dx
    c63c:	c5 00                	lds    (%eax),%eax
    c63e:	00 00                	add    %al,(%eax)
    c640:	00 66 01             	add    %ah,0x1(%esi)
    c643:	d0 66 01             	shlb   0x1(%esi)
    c646:	c0 67 66 89          	shlb   $0x89,0x66(%edi)
    c64a:	45                   	inc    %ebp
    c64b:	f0 67 66 8d 55 ea    	lock lea -0x16(%di),%dx
        _printchar(name[i],pos,color);
    c651:	67 66 8b 45 fc       	mov    -0x4(%di),%ax
    c656:	66 01 d0             	add    %dx,%ax
    c659:	67 8a 00             	mov    (%bx,%si),%al
    c65c:	66 0f be c0          	movsbw %al,%ax
    c660:	67 66 ff 75 f4       	pushw  -0xc(%di)
    c665:	67 66 ff 75 f0       	pushw  -0x10(%di)
    c66a:	66 50                	push   %ax
    c66c:	66 e8 4e fb          	callw  c1be <_clearscreen+0x7>
    c670:	ff                   	(bad)  
    c671:	ff 66 83             	jmp    *-0x7d(%esi)
    c674:	c4 0c 67             	les    (%edi,%eiz,2),%ecx
    name[4] = 'h';
    name[5] = 'y';
    int color = 3;
    int i = 0;
    int pos = (80 * 0 + 0)*2;
    for(i = 0;i < 6;i ++){
    c677:	66 ff 45 fc          	incw   -0x4(%ebp)
    c67b:	67 66 83 7d fc 05    	cmpw   $0x5,-0x4(%di)
    c681:	7e a6                	jle    c629 <showline+0x52>
        pos = (80 * i + i) * 2;
        _printchar(name[i],pos,color);
    }
}
    c683:	66 c9                	leavew 
    c685:	66 c3                	retw   

0000c687 <printpos>:
void printpos(char const* Messeage,int row,int colume){//need the pos
    c687:	66 55                	push   %bp
    c689:	66 89 e5             	mov    %sp,%bp
    c68c:	66 83 ec 0c          	sub    $0xc,%sp
	int pos = (80 * row + colume)*2;
    c690:	67 66 8b 55 0c       	mov    0xc(%di),%dx
    c695:	66 89 d0             	mov    %dx,%ax
    c698:	66 c1 e0 02          	shl    $0x2,%ax
    c69c:	66 01 d0             	add    %dx,%ax
    c69f:	66 c1 e0 04          	shl    $0x4,%ax
    c6a3:	66 89 c2             	mov    %ax,%dx
    c6a6:	67 66 8b 45 10       	mov    0x10(%di),%ax
    c6ab:	66 01 d0             	add    %dx,%ax
    c6ae:	66 01 c0             	add    %ax,%ax
    c6b1:	67 66 89 45 fc       	mov    %ax,-0x4(%di)
	int color = 3;
    c6b6:	67 66 c7 45 f4 03 00 	movw   $0x3,-0xc(%di)
    c6bd:	00 00                	add    %al,(%eax)
	int index = 0;
    c6bf:	67 66 c7 45 f8 00 00 	movw   $0x0,-0x8(%di)
    c6c6:	00 00                	add    %al,(%eax)
	while(Messeage[index] != '\0'){
    c6c8:	eb 35                	jmp    c6ff <printpos+0x78>
		_printchar(Messeage[index],pos,color);
    c6ca:	67 66 8b 55 f8       	mov    -0x8(%di),%dx
    c6cf:	67 66 8b 45 08       	mov    0x8(%di),%ax
    c6d4:	66 01 d0             	add    %dx,%ax
    c6d7:	67 8a 00             	mov    (%bx,%si),%al
    c6da:	66 0f be c0          	movsbw %al,%ax
    c6de:	67 66 ff 75 f4       	pushw  -0xc(%di)
    c6e3:	67 66 ff 75 fc       	pushw  -0x4(%di)
    c6e8:	66 50                	push   %ax
    c6ea:	66 e8 d0 fa          	callw  c1be <_clearscreen+0x7>
    c6ee:	ff                   	(bad)  
    c6ef:	ff 66 83             	jmp    *-0x7d(%esi)
    c6f2:	c4 0c 67             	les    (%edi,%eiz,2),%ecx
		index++;
    c6f5:	66 ff 45 f8          	incw   -0x8(%ebp)
		pos = pos + 2;
    c6f9:	67 66 83 45 fc 02    	addw   $0x2,-0x4(%di)
}
void printpos(char const* Messeage,int row,int colume){//need the pos
	int pos = (80 * row + colume)*2;
	int color = 3;
	int index = 0;
	while(Messeage[index] != '\0'){
    c6ff:	67 66 8b 55 f8       	mov    -0x8(%di),%dx
    c704:	67 66 8b 45 08       	mov    0x8(%di),%ax
    c709:	66 01 d0             	add    %dx,%ax
    c70c:	67 8a 00             	mov    (%bx,%si),%al
    c70f:	84 c0                	test   %al,%al
    c711:	75 b7                	jne    c6ca <printpos+0x43>
		_printchar(Messeage[index],pos,color);
		index++;
		pos = pos + 2;
	}
	return;
    c713:	90                   	nop
}
    c714:	66 c9                	leavew 
    c716:	66 c3                	retw   

0000c718 <printname>:
void printname(){
    c718:	66 55                	push   %bp
    c71a:	66 89 e5             	mov    %sp,%bp
    c71d:	66 83 ec 04          	sub    $0x4,%sp
    char const* Messeage = "chenhy";
    c721:	67 66 c7 45 fc a0 c7 	movw   $0xc7a0,-0x4(%di)
    c728:	00 00                	add    %al,(%eax)
    printpos(Messeage,15,10);
    c72a:	66 6a 0a             	pushw  $0xa
    c72d:	66 6a 0f             	pushw  $0xf
    c730:	67 66 ff 75 fc       	pushw  -0x4(%di)
    c735:	66 e8 4c ff          	callw  c685 <showline+0xae>
    c739:	ff                   	(bad)  
    c73a:	ff 66 83             	jmp    *-0x7d(%esi)
    c73d:	c4 0c 66             	les    (%esi,%eiz,2),%ecx
}
    c740:	c9                   	leave  
    c741:	66 c3                	retw   

0000c743 <upper>:
char* upper(char *Messeage){
    c743:	66 55                	push   %bp
    c745:	66 89 e5             	mov    %sp,%bp
    c748:	66 83 ec 04          	sub    $0x4,%sp
    int i = 0;
    c74c:	67 66 c7 45 fc 00 00 	movw   $0x0,-0x4(%di)
    c753:	00 00                	add    %al,(%eax)
    while(Messeage[i] >= 'a' && Messeage <= 'z'){
    c755:	eb 24                	jmp    c77b <upper+0x38>
        Messeage[i] = Messeage[i] + 'A' - 'a';
    c757:	67 66 8b 55 fc       	mov    -0x4(%di),%dx
    c75c:	67 66 8b 45 08       	mov    0x8(%di),%ax
    c761:	66 01 c2             	add    %ax,%dx
    c764:	67 66 8b 4d fc       	mov    -0x4(%di),%cx
    c769:	67 66 8b 45 08       	mov    0x8(%di),%ax
    c76e:	66 01 c8             	add    %cx,%ax
    c771:	67 8a 00             	mov    (%bx,%si),%al
    c774:	66 83 e8 20          	sub    $0x20,%ax
    c778:	67 88 02             	mov    %al,(%bp,%si)
    char const* Messeage = "chenhy";
    printpos(Messeage,15,10);
}
char* upper(char *Messeage){
    int i = 0;
    while(Messeage[i] >= 'a' && Messeage <= 'z'){
    c77b:	67 66 8b 55 fc       	mov    -0x4(%di),%dx
    c780:	67 66 8b 45 08       	mov    0x8(%di),%ax
    c785:	66 01 d0             	add    %dx,%ax
    c788:	67 8a 00             	mov    (%bx,%si),%al
    c78b:	3c 60                	cmp    $0x60,%al
    c78d:	7e 08                	jle    c797 <upper+0x54>
    c78f:	67 66 83 7d 08 7a    	cmpw   $0x7a,0x8(%di)
    c795:	76 c0                	jbe    c757 <upper+0x14>
        Messeage[i] = Messeage[i] + 'A' - 'a';
    }
    return Messeage;
    c797:	67 66 8b 45 08       	mov    0x8(%di),%ax
}
    c79c:	66 c9                	leavew 
    c79e:	66 c3                	retw   
